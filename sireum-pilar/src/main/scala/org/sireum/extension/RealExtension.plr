/*
Copyright (c) 2011 Robby, Kansas State University.        
All rights reserved. This program and the accompanying materials      
are made available under the terms of the Eclipse Public License v1.0 
which accompanies this distribution, and is available at              
http://www.eclipse.org/legal/epl-v10.html                             
*/

package org::sireum::extension;

extension Real @ExtSpec {
  typedef Type @NonReferenceType;
  
  expdef Boolean.Type isPositive(Real.Type);
  expdef Boolean.Type isZero(Real.Type);
  expdef Boolean.Type isNegative(Real.Type);
  
  expdef Real.Type pos (Real.Type n) @Exp +n;
  expdef Real.Type neg (Real.Type n) @Exp -n;

  expdef Real.Type add (Real.Type n, Real.Type m) @Exp n + m;
  expdef Real.Type sub (Real.Type n, Real.Type m) @Exp n - m;
  expdef Real.Type mul (Real.Type n, Real.Type m) @Exp n * m;
  expdef Real.Type div (Real.Type n, Real.Type m) @Exp n / m;
  expdef Real.Type rem (Real.Type n, Real.Type m) @Exp n % m;

  expdef Boolean.Type eq (Real.Type n, Real.Type m) @Exp n == m;
  expdef Boolean.Type ne (Real.Type n, Real.Type m) @Exp n != m;
  expdef Boolean.Type lt (Real.Type n, Real.Type m) @Exp n < m;
  expdef Boolean.Type gt (Real.Type n, Real.Type m) @Exp n > m;
  expdef Boolean.Type le (Real.Type n, Real.Type m) @Exp n <= m;
  expdef Boolean.Type ge (Real.Type n, Real.Type m) @Exp n >= m;
}
