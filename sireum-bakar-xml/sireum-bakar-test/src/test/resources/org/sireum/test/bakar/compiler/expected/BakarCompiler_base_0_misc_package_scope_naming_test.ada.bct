@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   B o d yM e t a d a t a
 ****************************************************************/
package P
@PackageAnnotation(
  theSourceFileName = "package_scope_naming_test.ada",
  theSparkName = P,
  thePilarSparkName = P,
  theOptionalParent = @NONE,
  thePackageKind = @BODY,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 10,
  theCol = 1,
  theOffset = 135),
  theEndCaret = 
  @Caret(
  theLine = 33,
  theCol = 7,
  theOffset = 487),
  theOptionalSource = "package_scope_naming_test.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 10,
  theCol = 1,
  theOffset = 135),
  theEndCaret = 
  @Caret(
  theLine = 10,
  theCol = 15,
  theOffset = 148),
  theOptionalSource = "package_scope_naming_test.ada"
),
  thePackageHeaderAnnotation = @PackageBodyHeaderAnnotation(
    theOptionalContextClause = @NONE  ,
  theOptionalRefinementDefinition = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure $$binit
 
{

  local
    Standard::Integer temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l1.  temp$1 := 1;
  #l2. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l1,
      endLabel = l2,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 32,
      theCol = 3,
      theOffset = 474),
      theEndCaret = 
      @Caret(
      theLine = 32,
      theCol = 10,
      theOffset = 480),
      theOptionalSource = "package_scope_naming_test.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  P::@@Y := temp$1;
  #locret. return;
}
/****************************************************************
 *  P r o c e d u r e s / F u n c t i o n s
 ****************************************************************/
procedure Q 
      (Standard::Integer X @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 26,
  theCol = 15,
  theOffset = 402),
  theEndCaret = 
  @Caret(
  theLine = 26,
  theCol = 16,
  theOffset = 402),
  theOptionalSource = "package_scope_naming_test.ada"
),
       Standard::Integer Z @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 26,
  theCol = 30,
  theOffset = 417),
  theEndCaret = 
  @Caret(
  theLine = 26,
  theCol = 31,
  theOffset = 417),
  theOptionalSource = "package_scope_naming_test.ada"
))
@MethodAnnotation(
  theSourceFileName = "package_scope_naming_test.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_BODY,
      theOptionalInParameters = @List(X),
      theOptionalOutParameters = @List(Z)
    ),
  theOptionalSPARKMethodAnnotation = 
    @NONE,
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 26,
      theCol = 3,
      theOffset = 390),
      theEndCaret = 
      @Caret(
      theLine = 29,
      theCol = 9,
      theOffset = 463),
      theOptionalSource = "package_scope_naming_test.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 26,
      theCol = 13,
      theOffset = 400),
      theEndCaret = 
      @Caret(
      theLine = 26,
      theCol = 14,
      theOffset = 400),
      theOptionalSource = "package_scope_naming_test.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 26,
      theCol = 3,
      theOffset = 390),
      theEndCaret = 
      @Caret(
      theLine = 26,
      theCol = 45,
      theOffset = 431),
      theOptionalSource = "package_scope_naming_test.ada"
    )
) 
{

  local
    Standard::Integer temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l6.  temp$1 := X;
  #l7. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l6,
      endLabel = l7,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 28,
      theCol = 5,
      theOffset = 448),
      theEndCaret = 
      @Caret(
      theLine = 28,
      theCol = 12,
      theOffset = 454),
      theOptionalSource = "package_scope_naming_test.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  Z := temp$1;
  #l8.  return;
}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package P_C_P2
@PackageAnnotation(
  theSourceFileName = "package_scope_naming_test.ada",
  theSparkName = P2,
  thePilarSparkName = P_C_P2,
  theOptionalParent = P,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @CHILD,
  theOptionalSymbolMapping = @List(@SymbolEntry(sparkID = "Q",pilarSparkID = P_C_P2::@@Q,originTag = @PACKAGE_SPEC_PUBLIC,kindTag = @CONCRETE_VARIABLE)),
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 35,
  theCol = 12,
  theOffset = 501),
  theEndCaret = 
  @Caret(
  theLine = 46,
  theCol = 10,
  theOffset = 708),
  theOptionalSource = "package_scope_naming_test.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 36,
  theCol = 1,
  theOffset = 504),
  theEndCaret = 
  @Caret(
  theLine = 36,
  theCol = 13,
  theOffset = 515),
  theOptionalSource = "package_scope_naming_test.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @PackageSpecificationAnnotation(
      theOptionalOwnStatement = @OwnStatement(
      theOwnClauses = 
        @List(@OwnClause(
          theOptionalDeclaredType = @NONE,
          theOwnVariables = 
            @List(@OwnVariable(
              varName = P_C_P2::@@Q,
              mode = @NONE,
              ownCategory = @CONCRETE,
              theOwnVariableSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 37,
                  theCol = 9,
                  theOffset = 525),
                  theEndCaret = 
                  @Caret(
                  theLine = 37,
                  theCol = 10,
                  theOffset = 525),
                  theOptionalSource = "package_scope_naming_test.ada"
                )
            )),
          theOwnClauseSelection =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 37,
              theCol = 9,
              theOffset = 525),
              theEndCaret = 
              @Caret(
              theLine = 37,
              theCol = 10,
              theOffset = 526),
              theOptionalSource = "package_scope_naming_test.ada"
            )
        )),
      theOwnStatementSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 37,
          theCol = 5,
          theOffset = 521),
          theEndCaret = 
          @Caret(
          theLine = 37,
          theCol = 10,
          theOffset = 526),
          theOptionalSource = "package_scope_naming_test.ada"
        )
    ),
      theOptionalVarInitClause = @List(P_C_P2::@@Q)
    ),
  theOptionalInheritClause = 
    @List(P)
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
    global Standard::Integer @@Q @GlobalVarAnnotation(
    symbolEntry = @SymbolEntry(sparkID = "Q",pilarSparkID = P_C_P2::@@Q,originTag = @PACKAGE_SPEC_PUBLIC,kindTag = @CONCRETE_VARIABLE),
    loc = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 40,
    theCol = 3,
    theOffset = 552),
    theEndCaret = 
    @Caret(
    theLine = 40,
    theCol = 4,
    theOffset = 552),
    theOptionalSource = "package_scope_naming_test.ada"
  )
  );
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure Q2 
      (Standard::Integer X @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 41,
  theCol = 16,
  theOffset = 579),
  theEndCaret = 
  @Caret(
  theLine = 41,
  theCol = 17,
  theOffset = 579),
  theOptionalSource = "package_scope_naming_test.ada"
),
       Standard::Integer Y @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 41,
  theCol = 31,
  theOffset = 594),
  theEndCaret = 
  @Caret(
  theLine = 41,
  theCol = 32,
  theOffset = 594),
  theOptionalSource = "package_scope_naming_test.ada"
),
       Standard::Integer Z @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 41,
  theCol = 47,
  theOffset = 610),
  theEndCaret = 
  @Caret(
  theLine = 41,
  theCol = 48,
  theOffset = 610),
  theOptionalSource = "package_scope_naming_test.ada"
))
@MethodAnnotation(
  theSourceFileName = "package_scope_naming_test.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(X),
      theOptionalOutParameters = @List(Y,
          Z)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @List(@AnnotationVariable(
          id = P::@@Y,
          loc =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 42,
              theCol = 17,
              theOffset = 643),
              theEndCaret = 
              @Caret(
              theLine = 42,
              theCol = 20,
              theOffset = 645),
              theOptionalSource = "package_scope_naming_test.ada"
            )
        )),
      theOptionalGlobalDefinitionsSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 42,
          theCol = 7,
          theOffset = 633),
          theEndCaret = 
          @Caret(
          theLine = 42,
          theCol = 21,
          theOffset = 646),
          theOptionalSource = "package_scope_naming_test.ada"
        ),
      theOptionalInGlobals = @List(P::@@Y),
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @NONE,
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = Y,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 43,
                          theCol = 15,
                          theOffset = 662),
                          theEndCaret = 
                          @Caret(
                          theLine = 43,
                          theCol = 16,
                          theOffset = 662),
                          theOptionalSource = "package_scope_naming_test.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = X,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 43,
                          theCol = 22,
                          theOffset = 669),
                          theEndCaret = 
                          @Caret(
                          theLine = 43,
                          theCol = 23,
                          theOffset = 669),
                          theOptionalSource = "package_scope_naming_test.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 43,
                  theCol = 15,
                  theOffset = 662),
                  theEndCaret = 
                  @Caret(
                  theLine = 43,
                  theCol = 23,
                  theOffset = 669),
                  theOptionalSource = "package_scope_naming_test.ada"
                )
            )  ,
                  @DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = Z,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 44,
                          theCol = 15,
                          theOffset = 687),
                          theEndCaret = 
                          @Caret(
                          theLine = 44,
                          theCol = 16,
                          theOffset = 687),
                          theOptionalSource = "package_scope_naming_test.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = P::@@Y,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 44,
                          theCol = 22,
                          theOffset = 694),
                          theEndCaret = 
                          @Caret(
                          theLine = 44,
                          theCol = 25,
                          theOffset = 696),
                          theOptionalSource = "package_scope_naming_test.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 44,
                  theCol = 15,
                  theOffset = 687),
                  theEndCaret = 
                  @Caret(
                  theLine = 44,
                  theCol = 25,
                  theOffset = 696),
                  theOptionalSource = "package_scope_naming_test.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 43,
              theCol = 7,
              theOffset = 654),
              theEndCaret = 
              @Caret(
              theLine = 44,
              theCol = 26,
              theOffset = 697),
              theOptionalSource = "package_scope_naming_test.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 41,
      theCol = 3,
      theOffset = 566),
      theEndCaret = 
      @Caret(
      theLine = 41,
      theCol = 63,
      theOffset = 625),
      theOptionalSource = "package_scope_naming_test.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 41,
      theCol = 13,
      theOffset = 576),
      theEndCaret = 
      @Caret(
      theLine = 41,
      theCol = 15,
      theOffset = 577),
      theOptionalSource = "package_scope_naming_test.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 41,
      theCol = 3,
      theOffset = 566),
      theEndCaret = 
      @Caret(
      theLine = 41,
      theCol = 62,
      theOffset = 624),
      theOptionalSource = "package_scope_naming_test.ada"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   B o d yM e t a d a t a
 ****************************************************************/
package P_E_P2
@PackageAnnotation(
  theSourceFileName = "package_scope_naming_test.ada",
  theSparkName = P2,
  thePilarSparkName = P_E_P2,
  theOptionalParent = P,
  thePackageKind = @BODY,
  theHierarchyType = @EMBEDDED,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 19,
  theCol = 3,
  theOffset = 285),
  theEndCaret = 
  @Caret(
  theLine = 24,
  theCol = 10,
  theOffset = 385),
  theOptionalSource = "package_scope_naming_test.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 19,
  theCol = 3,
  theOffset = 285),
  theEndCaret = 
  @Caret(
  theLine = 19,
  theCol = 18,
  theOffset = 299),
  theOptionalSource = "package_scope_naming_test.ada"
),
  thePackageHeaderAnnotation = @PackageBodyHeaderAnnotation(
    theOptionalContextClause = @NONE  ,
  theOptionalRefinementDefinition = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
/****************************************************************
 *  P r o c e d u r e s / F u n c t i o n s
 ****************************************************************/
procedure R 
      (Standard::Integer X @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 20,
  theCol = 17,
  theOffset = 320),
  theEndCaret = 
  @Caret(
  theLine = 20,
  theCol = 18,
  theOffset = 320),
  theOptionalSource = "package_scope_naming_test.ada"
))
@MethodAnnotation(
  theSourceFileName = "package_scope_naming_test.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_BODY,
      theOptionalInParameters = @NONE,
      theOptionalOutParameters = @List(X)
    ),
  theOptionalSPARKMethodAnnotation = 
    @NONE,
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 20,
      theCol = 5,
      theOffset = 308),
      theEndCaret = 
      @Caret(
      theLine = 23,
      theCol = 11,
      theOffset = 375),
      theOptionalSource = "package_scope_naming_test.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 20,
      theCol = 15,
      theOffset = 318),
      theEndCaret = 
      @Caret(
      theLine = 20,
      theCol = 16,
      theOffset = 318),
      theOptionalSource = "package_scope_naming_test.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 20,
      theCol = 5,
      theOffset = 308),
      theEndCaret = 
      @Caret(
      theLine = 20,
      theCol = 32,
      theOffset = 334),
      theOptionalSource = "package_scope_naming_test.ada"
    )
) 
{

  local
    Standard::Integer temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l3.  temp$1 := P::@@Y;
  #l4. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l3,
      endLabel = l4,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 22,
      theCol = 7,
      theOffset = 356),
      theEndCaret = 
      @Caret(
      theLine = 22,
      theCol = 16,
      theOffset = 364),
      theOptionalSource = "package_scope_naming_test.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  X := temp$1;
  #l5.  return;
}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package P_E_P2
@PackageAnnotation(
  theSourceFileName = "package_scope_naming_test.ada",
  theSparkName = P2,
  thePilarSparkName = P_E_P2,
  theOptionalParent = P,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @EMBEDDED,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 11,
  theCol = 15,
  theOffset = 167),
  theEndCaret = 
  @Caret(
  theLine = 17,
  theCol = 10,
  theOffset = 280),
  theOptionalSource = "package_scope_naming_test.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 12,
  theCol = 3,
  theOffset = 172),
  theEndCaret = 
  @Caret(
  theLine = 12,
  theCol = 13,
  theOffset = 181),
  theOptionalSource = "package_scope_naming_test.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @List(P)
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure R 
      (Standard::Integer X @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 14,
  theCol = 17,
  theOffset = 204),
  theEndCaret = 
  @Caret(
  theLine = 14,
  theCol = 18,
  theOffset = 204),
  theOptionalSource = "package_scope_naming_test.ada"
))
@MethodAnnotation(
  theSourceFileName = "package_scope_naming_test.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @NONE,
      theOptionalOutParameters = @List(X)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @List(@AnnotationVariable(
          id = P::@@Y,
          loc =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 15,
              theCol = 19,
              theOffset = 239),
              theEndCaret = 
              @Caret(
              theLine = 15,
              theCol = 22,
              theOffset = 241),
              theOptionalSource = "package_scope_naming_test.ada"
            )
        )),
      theOptionalGlobalDefinitionsSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 15,
          theCol = 9,
          theOffset = 229),
          theEndCaret = 
          @Caret(
          theLine = 15,
          theCol = 23,
          theOffset = 242),
          theOptionalSource = "package_scope_naming_test.ada"
        ),
      theOptionalInGlobals = @List(P::@@Y),
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @NONE,
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = X,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 16,
                          theCol = 17,
                          theOffset = 260),
                          theEndCaret = 
                          @Caret(
                          theLine = 16,
                          theCol = 18,
                          theOffset = 260),
                          theOptionalSource = "package_scope_naming_test.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = P::@@Y,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 16,
                          theCol = 24,
                          theOffset = 267),
                          theEndCaret = 
                          @Caret(
                          theLine = 16,
                          theCol = 27,
                          theOffset = 269),
                          theOptionalSource = "package_scope_naming_test.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 16,
                  theCol = 17,
                  theOffset = 260),
                  theEndCaret = 
                  @Caret(
                  theLine = 16,
                  theCol = 27,
                  theOffset = 269),
                  theOptionalSource = "package_scope_naming_test.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 16,
              theCol = 9,
              theOffset = 252),
              theEndCaret = 
              @Caret(
              theLine = 16,
              theCol = 28,
              theOffset = 270),
              theOptionalSource = "package_scope_naming_test.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 5,
      theOffset = 192),
      theEndCaret = 
      @Caret(
      theLine = 14,
      theCol = 33,
      theOffset = 219),
      theOptionalSource = "package_scope_naming_test.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 15,
      theOffset = 202),
      theEndCaret = 
      @Caret(
      theLine = 14,
      theCol = 16,
      theOffset = 202),
      theOptionalSource = "package_scope_naming_test.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 5,
      theOffset = 192),
      theEndCaret = 
      @Caret(
      theLine = 14,
      theCol = 32,
      theOffset = 218),
      theOptionalSource = "package_scope_naming_test.ada"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Standard
@PackageAnnotation(
  theSourceFileName = "StandardPackage.java",
  theSparkName = Standard,
  thePilarSparkName = Standard,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Natural
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Natural,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 0)))
{}
record Positive
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Positive,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 1)))
{}
record Long_Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Long_Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Float
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Float,
    typeDefinition = 
      @FloatingPointDefinition(
        theDigitsExp = $UNDEFINED (),
        theOptionalLowRangeExp = $NEG_INFTY (),
        theOptionalHighRangeExp = $POS_INFTY ()))
{}
record Boolean
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Boolean,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @List(@EnumerationValue(tag = False),
                @EnumerationValue(tag = True))))
{}
record Character
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Character,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @EmptyList))
{}
record String
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::String,
    typeDefinition = 
      @UnconstrainedArrayDefinition(
        theDimensions = 
          1,
        theComponentSubType = 
          `Standard::Character,
        theIndexSubTypes = 
          @List(`Standard::Positive)
      ))
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   B o d yM e t a d a t a
 ****************************************************************/
package P_C_P2
@PackageAnnotation(
  theSourceFileName = "package_scope_naming_test.ada",
  theSparkName = P2,
  thePilarSparkName = P_C_P2,
  theOptionalParent = P,
  thePackageKind = @BODY,
  theHierarchyType = @CHILD,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 48,
  theCol = 1,
  theOffset = 711),
  theEndCaret = 
  @Caret(
  theLine = 58,
  theCol = 10,
  theOffset = 871),
  theOptionalSource = "package_scope_naming_test.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 48,
  theCol = 1,
  theOffset = 711),
  theEndCaret = 
  @Caret(
  theLine = 48,
  theCol = 18,
  theOffset = 727),
  theOptionalSource = "package_scope_naming_test.ada"
),
  thePackageHeaderAnnotation = @PackageBodyHeaderAnnotation(
    theOptionalContextClause = @NONE  ,
  theOptionalRefinementDefinition = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure $$binit
 
{

  local
    Standard::Integer temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$2 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$3 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l1.  temp$1 := 3;
  #l2.  temp$2 := 2;
  #l3.  temp$3 := (temp$1 + temp$2);
  #l4. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l1,
      endLabel = l4,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 57,
      theCol = 3,
      theOffset = 851),
      theEndCaret = 
      @Caret(
      theLine = 57,
      theCol = 14,
      theOffset = 861),
      theOptionalSource = "package_scope_naming_test.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  P_C_P2::@@Q := temp$3;
  #locret. return;
}
/****************************************************************
 *  P r o c e d u r e s / F u n c t i o n s
 ****************************************************************/
procedure Q2 
      (Standard::Integer X @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 50,
  theCol = 16,
  theOffset = 748),
  theEndCaret = 
  @Caret(
  theLine = 50,
  theCol = 17,
  theOffset = 748),
  theOptionalSource = "package_scope_naming_test.ada"
),
       Standard::Integer Y @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 50,
  theCol = 31,
  theOffset = 763),
  theEndCaret = 
  @Caret(
  theLine = 50,
  theCol = 32,
  theOffset = 763),
  theOptionalSource = "package_scope_naming_test.ada"
),
       Standard::Integer Z @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 50,
  theCol = 47,
  theOffset = 779),
  theEndCaret = 
  @Caret(
  theLine = 50,
  theCol = 48,
  theOffset = 779),
  theOptionalSource = "package_scope_naming_test.ada"
))
@MethodAnnotation(
  theSourceFileName = "package_scope_naming_test.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_BODY,
      theOptionalInParameters = @List(X),
      theOptionalOutParameters = @List(Y,
          Z)
    ),
  theOptionalSPARKMethodAnnotation = 
    @NONE,
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 50,
      theCol = 3,
      theOffset = 735),
      theEndCaret = 
      @Caret(
      theLine = 54,
      theCol = 10,
      theOffset = 840),
      theOptionalSource = "package_scope_naming_test.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 50,
      theCol = 13,
      theOffset = 745),
      theEndCaret = 
      @Caret(
      theLine = 50,
      theCol = 15,
      theOffset = 746),
      theOptionalSource = "package_scope_naming_test.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 50,
      theCol = 3,
      theOffset = 735),
      theEndCaret = 
      @Caret(
      theLine = 50,
      theCol = 62,
      theOffset = 793),
      theOptionalSource = "package_scope_naming_test.ada"
    )
) 
{

  local
    Standard::Integer temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$2 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l5.  temp$1 := X;
  #l6. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l5,
      endLabel = l6,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 52,
      theCol = 5,
      theOffset = 810),
      theEndCaret = 
      @Caret(
      theLine = 52,
      theCol = 12,
      theOffset = 816),
      theOptionalSource = "package_scope_naming_test.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  Y := temp$1;
  #l7.  temp$2 := P::@@Y;
  #l8. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l7,
      endLabel = l8,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 53,
      theCol = 5,
      theOffset = 822),
      theEndCaret = 
      @Caret(
      theLine = 53,
      theCol = 14,
      theOffset = 830),
      theOptionalSource = "package_scope_naming_test.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  Z := temp$2;
  #l9.  return;
}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package P
@PackageAnnotation(
  theSourceFileName = "package_scope_naming_test.ada",
  theSparkName = P,
  thePilarSparkName = P,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @List(@SymbolEntry(sparkID = "Y",pilarSparkID = P::@@Y,originTag = @PACKAGE_SPEC_PUBLIC,kindTag = @CONCRETE_VARIABLE)),
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 8,
  theCol = 7,
  theOffset = 132),
  theOptionalSource = "package_scope_naming_test.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 1,
  theCol = 10,
  theOffset = 8),
  theOptionalSource = "package_scope_naming_test.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @PackageSpecificationAnnotation(
      theOptionalOwnStatement = @OwnStatement(
      theOwnClauses = 
        @List(@OwnClause(
          theOptionalDeclaredType = @NONE,
          theOwnVariables = 
            @List(@OwnVariable(
              varName = P::@@Y,
              mode = @NONE,
              ownCategory = @CONCRETE,
              theOwnVariableSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 2,
                  theCol = 9,
                  theOffset = 18),
                  theEndCaret = 
                  @Caret(
                  theLine = 2,
                  theCol = 10,
                  theOffset = 18),
                  theOptionalSource = "package_scope_naming_test.ada"
                )
            )),
          theOwnClauseSelection =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 2,
              theCol = 9,
              theOffset = 18),
              theEndCaret = 
              @Caret(
              theLine = 2,
              theCol = 10,
              theOffset = 19),
              theOptionalSource = "package_scope_naming_test.ada"
            )
        )),
      theOwnStatementSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 2,
          theCol = 5,
          theOffset = 14),
          theEndCaret = 
          @Caret(
          theLine = 2,
          theCol = 10,
          theOffset = 19),
          theOptionalSource = "package_scope_naming_test.ada"
        )
    ),
      theOptionalVarInitClause = @List(P::@@Y)
    ),
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
    global Standard::Integer @@Y @GlobalVarAnnotation(
    symbolEntry = @SymbolEntry(sparkID = "Y",pilarSparkID = P::@@Y,originTag = @PACKAGE_SPEC_PUBLIC,kindTag = @CONCRETE_VARIABLE),
    loc = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 5,
    theCol = 3,
    theOffset = 45),
    theEndCaret = 
    @Caret(
    theLine = 5,
    theCol = 4,
    theOffset = 45),
    theOptionalSource = "package_scope_naming_test.ada"
  )
  );
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure Q 
      (Standard::Integer X @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 6,
  theCol = 15,
  theOffset = 71),
  theEndCaret = 
  @Caret(
  theLine = 6,
  theCol = 16,
  theOffset = 71),
  theOptionalSource = "package_scope_naming_test.ada"
),
       Standard::Integer Z @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 6,
  theCol = 30,
  theOffset = 86),
  theEndCaret = 
  @Caret(
  theLine = 6,
  theCol = 31,
  theOffset = 86),
  theOptionalSource = "package_scope_naming_test.ada"
))
@MethodAnnotation(
  theSourceFileName = "package_scope_naming_test.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(X),
      theOptionalOutParameters = @List(Z)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @NONE,
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = Z,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 7,
                          theCol = 15,
                          theOffset = 117),
                          theEndCaret = 
                          @Caret(
                          theLine = 7,
                          theCol = 16,
                          theOffset = 117),
                          theOptionalSource = "package_scope_naming_test.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = X,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 7,
                          theCol = 22,
                          theOffset = 124),
                          theEndCaret = 
                          @Caret(
                          theLine = 7,
                          theCol = 23,
                          theOffset = 124),
                          theOptionalSource = "package_scope_naming_test.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 7,
                  theCol = 15,
                  theOffset = 117),
                  theEndCaret = 
                  @Caret(
                  theLine = 7,
                  theCol = 23,
                  theOffset = 124),
                  theOptionalSource = "package_scope_naming_test.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 7,
              theCol = 7,
              theOffset = 109),
              theEndCaret = 
              @Caret(
              theLine = 7,
              theCol = 24,
              theOffset = 125),
              theOptionalSource = "package_scope_naming_test.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 6,
      theCol = 3,
      theOffset = 59),
      theEndCaret = 
      @Caret(
      theLine = 6,
      theCol = 46,
      theOffset = 101),
      theOptionalSource = "package_scope_naming_test.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 6,
      theCol = 13,
      theOffset = 69),
      theEndCaret = 
      @Caret(
      theLine = 6,
      theCol = 14,
      theOffset = 69),
      theOptionalSource = "package_scope_naming_test.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 6,
      theCol = 3,
      theOffset = 59),
      theEndCaret = 
      @Caret(
      theLine = 6,
      theCol = 45,
      theOffset = 100),
      theOptionalSource = "package_scope_naming_test.ada"
    )
) 
{ #locret. return;}