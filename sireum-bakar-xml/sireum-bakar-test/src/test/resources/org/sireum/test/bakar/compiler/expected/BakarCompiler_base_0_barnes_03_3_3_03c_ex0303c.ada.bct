@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package P
@PackageAnnotation(
  theSourceFileName = "ex0303c.ada",
  theSparkName = P,
  thePilarSparkName = P,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 7,
  theCol = 7,
  theOffset = 294),
  theOptionalSource = "ex0303c.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 1,
  theCol = 10,
  theOffset = 8),
  theOptionalSource = "ex0303c.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure Fault_Integrator 
      (Standard::Boolean Fault_Found @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 2,
  theCol = 31,
  theOffset = 44),
  theEndCaret = 
  @Caret(
  theLine = 2,
  theCol = 42,
  theOffset = 54),
  theOptionalSource = "ex0303c.ada"
),
       Standard::Boolean Trip @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 3,
  theCol = 31,
  theOffset = 101),
  theEndCaret = 
  @Caret(
  theLine = 3,
  theCol = 35,
  theOffset = 104),
  theOptionalSource = "ex0303c.ada"
),
       Standard::Integer Counter @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 4,
  theCol = 31,
  theOffset = 155),
  theEndCaret = 
  @Caret(
  theLine = 4,
  theCol = 38,
  theOffset = 161),
  theOptionalSource = "ex0303c.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex0303c.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(Fault_Found,
            Trip,
            Counter),
      theOptionalOutParameters = @List(Trip,
          Counter)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @NONE,
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = Trip,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 5,
                          theCol = 16,
                          theOffset = 198),
                          theEndCaret = 
                          @Caret(
                          theLine = 5,
                          theCol = 20,
                          theOffset = 201),
                          theOptionalSource = "ex0303c.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = Fault_Found,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 5,
                          theCol = 26,
                          theOffset = 208),
                          theEndCaret = 
                          @Caret(
                          theLine = 5,
                          theCol = 37,
                          theOffset = 218),
                          theOptionalSource = "ex0303c.ada"
                        )
                    ),
                          @AnnotationVariable(
                      id = Trip,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 5,
                          theCol = 39,
                          theOffset = 221),
                          theEndCaret = 
                          @Caret(
                          theLine = 5,
                          theCol = 43,
                          theOffset = 224),
                          theOptionalSource = "ex0303c.ada"
                        )
                    ),
                          @AnnotationVariable(
                      id = Counter,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 5,
                          theCol = 45,
                          theOffset = 227),
                          theEndCaret = 
                          @Caret(
                          theLine = 5,
                          theCol = 52,
                          theOffset = 233),
                          theOptionalSource = "ex0303c.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 5,
                  theCol = 16,
                  theOffset = 198),
                  theEndCaret = 
                  @Caret(
                  theLine = 5,
                  theCol = 52,
                  theOffset = 233),
                  theOptionalSource = "ex0303c.ada"
                )
            )  ,
                  @DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = Counter,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 6,
                          theCol = 16,
                          theOffset = 253),
                          theEndCaret = 
                          @Caret(
                          theLine = 6,
                          theCol = 23,
                          theOffset = 259),
                          theOptionalSource = "ex0303c.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = Fault_Found,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 6,
                          theCol = 29,
                          theOffset = 266),
                          theEndCaret = 
                          @Caret(
                          theLine = 6,
                          theCol = 40,
                          theOffset = 276),
                          theOptionalSource = "ex0303c.ada"
                        )
                    ),
                          @AnnotationVariable(
                      id = Counter,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 6,
                          theCol = 42,
                          theOffset = 279),
                          theEndCaret = 
                          @Caret(
                          theLine = 6,
                          theCol = 49,
                          theOffset = 285),
                          theOptionalSource = "ex0303c.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 6,
                  theCol = 16,
                  theOffset = 253),
                  theEndCaret = 
                  @Caret(
                  theLine = 6,
                  theCol = 49,
                  theOffset = 285),
                  theOptionalSource = "ex0303c.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 5,
              theCol = 8,
              theOffset = 190),
              theEndCaret = 
              @Caret(
              theLine = 6,
              theCol = 50,
              theOffset = 286),
              theOptionalSource = "ex0303c.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 2,
      theCol = 4,
      theOffset = 17),
      theEndCaret = 
      @Caret(
      theLine = 4,
      theCol = 57,
      theOffset = 180),
      theOptionalSource = "ex0303c.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 2,
      theCol = 14,
      theOffset = 27),
      theEndCaret = 
      @Caret(
      theLine = 2,
      theCol = 30,
      theOffset = 42),
      theOptionalSource = "ex0303c.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 2,
      theCol = 4,
      theOffset = 17),
      theEndCaret = 
      @Caret(
      theLine = 4,
      theCol = 56,
      theOffset = 179),
      theOptionalSource = "ex0303c.ada"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Standard
@PackageAnnotation(
  theSourceFileName = "StandardPackage.java",
  theSparkName = Standard,
  thePilarSparkName = Standard,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Natural
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Natural,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 0)))
{}
record Positive
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Positive,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 1)))
{}
record Long_Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Long_Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Float
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Float,
    typeDefinition = 
      @FloatingPointDefinition(
        theDigitsExp = $UNDEFINED (),
        theOptionalLowRangeExp = $NEG_INFTY (),
        theOptionalHighRangeExp = $POS_INFTY ()))
{}
record Boolean
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Boolean,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @List(@EnumerationValue(tag = False),
                @EnumerationValue(tag = True))))
{}
record Character
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Character,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @EmptyList))
{}
record String
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::String,
    typeDefinition = 
      @UnconstrainedArrayDefinition(
        theDimensions = 
          1,
        theComponentSubType = 
          `Standard::Character,
        theIndexSubTypes = 
          @List(`Standard::Positive)
      ))
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   B o d yM e t a d a t a
 ****************************************************************/
package P
@PackageAnnotation(
  theSourceFileName = "ex0303c.ada",
  theSparkName = P,
  thePilarSparkName = P,
  theOptionalParent = @NONE,
  thePackageKind = @BODY,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 9,
  theCol = 1,
  theOffset = 299),
  theEndCaret = 
  @Caret(
  theLine = 32,
  theCol = 7,
  theOffset = 1063),
  theOptionalSource = "ex0303c.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 9,
  theCol = 1,
  theOffset = 299),
  theEndCaret = 
  @Caret(
  theLine = 9,
  theCol = 15,
  theOffset = 312),
  theOptionalSource = "ex0303c.ada"
),
  thePackageHeaderAnnotation = @PackageBodyHeaderAnnotation(
    theOptionalContextClause = @NONE  ,
  theOptionalRefinementDefinition = 
    @NONE
));

const $Const {
  Upper_Limit = (Standard::Integer) (3500) @ConstantAnnotation(
    theOrigin =
      @PACKAGE_BODY,
    theLoc = 
      @RegionSelection(
        theStartCaret = 
        @Caret(
        theLine = 10,
        theCol = 4,
        theOffset = 321),
        theEndCaret = 
        @Caret(
        theLine = 10,
        theCol = 15,
        theOffset = 331),
        theOptionalSource = "ex0303c.ada"
      ));
  Lower_Limit = (Standard::Integer) (-(20)) @ConstantAnnotation(
    theOrigin =
      @PACKAGE_BODY,
    theLoc = 
      @RegionSelection(
        theStartCaret = 
        @Caret(
        theLine = 11,
        theCol = 4,
        theOffset = 366),
        theEndCaret = 
        @Caret(
        theLine = 11,
        theCol = 15,
        theOffset = 376),
        theOptionalSource = "ex0303c.ada"
      ));
  Up_Rate = (Standard::Integer) (5) @ConstantAnnotation(
    theOrigin =
      @PACKAGE_BODY,
    theLoc = 
      @RegionSelection(
        theStartCaret = 
        @Caret(
        theLine = 12,
        theCol = 4,
        theOffset = 409),
        theEndCaret = 
        @Caret(
        theLine = 12,
        theCol = 11,
        theOffset = 415),
        theOptionalSource = "ex0303c.ada"
      ));
  Down_Rate = (Standard::Integer) (3) @ConstantAnnotation(
    theOrigin =
      @PACKAGE_BODY,
    theLoc = 
      @RegionSelection(
        theStartCaret = 
        @Caret(
        theLine = 13,
        theCol = 4,
        theOffset = 450),
        theEndCaret = 
        @Caret(
        theLine = 13,
        theCol = 13,
        theOffset = 458),
        theOptionalSource = "ex0303c.ada"
      ));
}
/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
/****************************************************************
 *  P r o c e d u r e s / F u n c t i o n s
 ****************************************************************/
procedure Fault_Integrator 
      (Standard::Boolean Fault_Found @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 15,
  theCol = 31,
  theOffset = 520),
  theEndCaret = 
  @Caret(
  theLine = 15,
  theCol = 42,
  theOffset = 530),
  theOptionalSource = "ex0303c.ada"
),
       Standard::Boolean Trip @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 16,
  theCol = 31,
  theOffset = 577),
  theEndCaret = 
  @Caret(
  theLine = 16,
  theCol = 35,
  theOffset = 580),
  theOptionalSource = "ex0303c.ada"
),
       Standard::Integer Counter @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 17,
  theCol = 31,
  theOffset = 631),
  theEndCaret = 
  @Caret(
  theLine = 17,
  theCol = 38,
  theOffset = 637),
  theOptionalSource = "ex0303c.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex0303c.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_BODY,
      theOptionalInParameters = @List(Fault_Found,
            Trip,
            Counter),
      theOptionalOutParameters = @List(Trip,
          Counter)
    ),
  theOptionalSPARKMethodAnnotation = 
    @NONE,
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 15,
      theCol = 4,
      theOffset = 493),
      theEndCaret = 
      @Caret(
      theLine = 31,
      theCol = 25,
      theOffset = 1055),
      theOptionalSource = "ex0303c.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 15,
      theCol = 14,
      theOffset = 503),
      theEndCaret = 
      @Caret(
      theLine = 15,
      theCol = 30,
      theOffset = 518),
      theOptionalSource = "ex0303c.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 15,
      theCol = 4,
      theOffset = 493),
      theEndCaret = 
      @Caret(
      theLine = 17,
      theCol = 56,
      theOffset = 655),
      theOptionalSource = "ex0303c.ada"
    )
) 
{

  local
    Standard::Boolean temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$2 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$3 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$4 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$5 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$6 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Boolean temp$7 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Boolean temp$8 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$9 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$10 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$11 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$12 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$13 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$14 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Boolean temp$15 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Boolean temp$16 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$17 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l1.  temp$1 := Fault_Found;
  #l2.  if !(temp$1) then goto l3; 
  #l4.  temp$2 := Counter;
  #l5.  temp$3 := P::$Const.Up_Rate;
  #l6.  temp$4 := (temp$2 + temp$3);
  #l7. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l4,
      endLabel = l7,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 21,
      theCol = 10,
      theOffset = 711),
      theEndCaret = 
      @Caret(
      theLine = 21,
      theCol = 39,
      theOffset = 739),
      theOptionalSource = "ex0303c.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  Counter := temp$4;
  #l8.  temp$5 := Counter;
  #l9.  temp$6 := P::$Const.Upper_Limit;
  #l10.  temp$7 := (temp$5 >= temp$6);
  #l11.  if !(temp$7) then goto l12; 
  #l13.  temp$8 := true;
  #l14. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l13,
      endLabel = l14,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 23,
      theCol = 13,
      theOffset = 795),
      theEndCaret = 
      @Caret(
      theLine = 23,
      theCol = 26,
      theOffset = 807),
      theOptionalSource = "ex0303c.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  Trip := temp$8;
  #l15.  temp$9 := P::$Const.Upper_Limit;
  #l16. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l15,
      endLabel = l16,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 23,
      theCol = 27,
      theOffset = 809),
      theEndCaret = 
      @Caret(
      theLine = 23,
      theCol = 50,
      theOffset = 831),
      theOptionalSource = "ex0303c.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  Counter := temp$9;
  #l17.  goto l18;
  #l12. 
  #l18. <@IfStatementAnnotation(
    ifPart = @Mark(
    startLabel = l8,
    endLabel = l11,
    optRS = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 22,
    theCol = 10,
    theOffset = 751),
    theEndCaret = 
    @Caret(
    theLine = 22,
    theCol = 35,
    theOffset = 775),
    theOptionalSource = "ex0303c.ada"
  )
  ),
    thenPart= @MARK_PLACEHOLDER,
    optElsIfParts = @NONE,
    optElsePart = @NONE,
      mark = @Mark(
      startLabel = l8,
      endLabel = l18,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 22,
      theCol = 10,
      theOffset = 751),
      theEndCaret = 
      @Caret(
      theLine = 24,
      theCol = 17,
      theOffset = 849),
      theOptionalSource = "ex0303c.ada"
    )
    ),
      optSparkLabelList = @NONE  
  )> 
  #l19.  goto l35;
  #l3. 
  #l20.  temp$10 := Counter;
  #l21.  temp$11 := P::$Const.Down_Rate;
  #l22.  temp$12 := (temp$10 - temp$11);
  #l23. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l20,
      endLabel = l23,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 26,
      theCol = 10,
      theOffset = 873),
      theEndCaret = 
      @Caret(
      theLine = 26,
      theCol = 41,
      theOffset = 903),
      theOptionalSource = "ex0303c.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  Counter := temp$12;
  #l24.  temp$13 := Counter;
  #l25.  temp$14 := P::$Const.Lower_Limit;
  #l26.  temp$15 := (temp$13 <= temp$14);
  #l27.  if !(temp$15) then goto l28; 
  #l29.  temp$16 := false;
  #l30. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l29,
      endLabel = l30,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 28,
      theCol = 13,
      theOffset = 959),
      theEndCaret = 
      @Caret(
      theLine = 28,
      theCol = 27,
      theOffset = 972),
      theOptionalSource = "ex0303c.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  Trip := temp$16;
  #l31.  temp$17 := P::$Const.Lower_Limit;
  #l32. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l31,
      endLabel = l32,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 28,
      theCol = 28,
      theOffset = 974),
      theEndCaret = 
      @Caret(
      theLine = 28,
      theCol = 51,
      theOffset = 996),
      theOptionalSource = "ex0303c.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  Counter := temp$17;
  #l33.  goto l34;
  #l28. 
  #l34. <@IfStatementAnnotation(
    ifPart = @Mark(
    startLabel = l24,
    endLabel = l27,
    optRS = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 27,
    theCol = 10,
    theOffset = 915),
    theEndCaret = 
    @Caret(
    theLine = 27,
    theCol = 35,
    theOffset = 939),
    theOptionalSource = "ex0303c.ada"
  )
  ),
    thenPart= @MARK_PLACEHOLDER,
    optElsIfParts = @NONE,
    optElsePart = @NONE,
      mark = @Mark(
      startLabel = l24,
      endLabel = l34,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 27,
      theCol = 10,
      theOffset = 915),
      theEndCaret = 
      @Caret(
      theLine = 29,
      theCol = 17,
      theOffset = 1014),
      theOptionalSource = "ex0303c.ada"
    )
    ),
      optSparkLabelList = @NONE  
  )> 
  #l35. <@IfStatementAnnotation(
    ifPart = @Mark(
    startLabel = l1,
    endLabel = l2,
    optRS = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 20,
    theCol = 7,
    theOffset = 681),
    theEndCaret = 
    @Caret(
    theLine = 20,
    theCol = 21,
    theOffset = 694),
    theOptionalSource = "ex0303c.ada"
  )
  ),
    thenPart= @MARK_PLACEHOLDER,
    optElsIfParts = @NONE,
    optElsePart = @MARK_PLACEHOLDER,
      mark = @Mark(
      startLabel = l1,
      endLabel = l35,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 20,
      theCol = 7,
      theOffset = 681),
      theEndCaret = 
      @Caret(
      theLine = 30,
      theCol = 14,
      theOffset = 1029),
      theOptionalSource = "ex0303c.ada"
    )
    ),
      optSparkLabelList = @NONE  
  )> 
  #l36.  return;
}