@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package fib_Decls
@PackageAnnotation(
  theSourceFileName = "fib_decls.ads",
  theSparkName = fib_Decls,
  thePilarSparkName = fib_Decls,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 10,
  theCol = 1,
  theOffset = 397),
  theEndCaret = 
  @Caret(
  theLine = 30,
  theCol = 15,
  theOffset = 1200),
  theOptionalSource = "fib_decls.ads"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 10,
  theCol = 1,
  theOffset = 397),
  theEndCaret = 
  @Caret(
  theLine = 10,
  theCol = 18,
  theOffset = 413),
  theOptionalSource = "fib_decls.ads"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record rlt_int32
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 13,
      theCol = 4,
      theOffset = 424),
      theEndCaret = 
      @Caret(
      theLine = 13,
      theCol = 54,
      theOffset = 473),
      theOptionalSource = "fib_decls.ads"
    ),
    fullyQualifiedName = fib_Decls::rlt_int32,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = -($POW(2,31)),
        theHighRangeExp = ($POW(2,31) - 1)))
{}
record rlt_uint32
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 4,
      theOffset = 505),
      theEndCaret = 
      @Caret(
      theLine = 14,
      theCol = 48,
      theOffset = 548),
      theOptionalSource = "fib_decls.ads"
    ),
    fullyQualifiedName = fib_Decls::rlt_uint32,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = 0,
        theHighRangeExp = ($POW(2,32) - 1)))
{}
record rlt_mod32
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 15,
      theCol = 4,
      theOffset = 581),
      theEndCaret = 
      @Caret(
      theLine = 15,
      theCol = 34,
      theOffset = 610),
      theOptionalSource = "fib_decls.ads"
    ),
    fullyQualifiedName = fib_Decls::rlt_mod32,
    typeDefinition = 
      @ModularTypeDefinition(
        theModExp = $POW(2,32)))
{}
record rlt_int16
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 16,
      theCol = 4,
      theOffset = 642),
      theEndCaret = 
      @Caret(
      theLine = 16,
      theCol = 54,
      theOffset = 691),
      theOptionalSource = "fib_decls.ads"
    ),
    fullyQualifiedName = fib_Decls::rlt_int16,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = -($POW(2,15)),
        theHighRangeExp = ($POW(2,15) - 1)))
{}
record rlt_uint16
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 17,
      theCol = 4,
      theOffset = 723),
      theEndCaret = 
      @Caret(
      theLine = 17,
      theCol = 48,
      theOffset = 766),
      theOptionalSource = "fib_decls.ads"
    ),
    fullyQualifiedName = fib_Decls::rlt_uint16,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = 0,
        theHighRangeExp = ($POW(2,16) - 1)))
{}
record rlt_mod16
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 18,
      theCol = 4,
      theOffset = 799),
      theEndCaret = 
      @Caret(
      theLine = 18,
      theCol = 34,
      theOffset = 828),
      theOptionalSource = "fib_decls.ads"
    ),
    fullyQualifiedName = fib_Decls::rlt_mod16,
    typeDefinition = 
      @ModularTypeDefinition(
        theModExp = $POW(2,16)))
{}
record rlt_int8
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 19,
      theCol = 4,
      theOffset = 860),
      theEndCaret = 
      @Caret(
      theLine = 19,
      theCol = 51,
      theOffset = 906),
      theOptionalSource = "fib_decls.ads"
    ),
    fullyQualifiedName = fib_Decls::rlt_int8,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = -($POW(2,7)),
        theHighRangeExp = ($POW(2,7) - 1)))
{}
record rlt_uint8
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 20,
      theCol = 4,
      theOffset = 936),
      theEndCaret = 
      @Caret(
      theLine = 20,
      theCol = 46,
      theOffset = 977),
      theOptionalSource = "fib_decls.ads"
    ),
    fullyQualifiedName = fib_Decls::rlt_uint8,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = 0,
        theHighRangeExp = ($POW(2,8) - 1)))
{}
record rlt_mod8
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 21,
      theCol = 4,
      theOffset = 1008),
      theEndCaret = 
      @Caret(
      theLine = 21,
      theCol = 32,
      theOffset = 1035),
      theOptionalSource = "fib_decls.ads"
    ),
    fullyQualifiedName = fib_Decls::rlt_mod8,
    typeDefinition = 
      @ModularTypeDefinition(
        theModExp = $POW(2,8)))
{}
record rlt_fib_State_Type
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 23,
      theCol = 4,
      theOffset = 1066),
      theEndCaret = 
      @Caret(
      theLine = 27,
      theCol = 16,
      theOffset = 1182),
      theOptionalSource = "fib_decls.ads"
    ),
    fullyQualifiedName = fib_Decls::rlt_fib_State_Type,
    typeDefinition = 
      @RecordTypeDefinition(
        tagged = false,
        parentType=@NONE))
{
  fib_Decls::rlt_int32 unit_delay @RecordComponentAnnotation(
    sparkID = unit_delay
  );
  fib_Decls::rlt_int32 unit_delay1 @RecordComponentAnnotation(
    sparkID = unit_delay1
  );
}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package fib_Package
@PackageAnnotation(
  theSourceFileName = "fib.ada",
  theSparkName = fib_Package,
  thePilarSparkName = fib_Package,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 39,
  theCol = 1,
  theOffset = 730),
  theEndCaret = 
  @Caret(
  theLine = 48,
  theCol = 17,
  theOffset = 940),
  theOptionalSource = "fib.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 39,
  theCol = 1,
  theOffset = 730),
  theEndCaret = 
  @Caret(
  theLine = 39,
  theCol = 20,
  theOffset = 748),
  theOptionalSource = "fib.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @ContextClause(
    theOptionalWithClauses = @List(fib_Decls),
    theOptionalUseTypeClauses = @List(fib_Decls::rlt_int8,
        fib_Decls::rlt_uint8,
        fib_Decls::rlt_mod8,
        fib_Decls::rlt_int16,
        fib_Decls::rlt_uint16,
        fib_Decls::rlt_mod16,
        fib_Decls::rlt_int32,
        fib_Decls::rlt_uint32,
        fib_Decls::rlt_mod32)
  )  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure fib 
      (Standard::Boolean rlt_init_step @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 44,
  theCol = 10,
  theOffset = 784),
  theEndCaret = 
  @Caret(
  theLine = 44,
  theCol = 23,
  theOffset = 796),
  theOptionalSource = "fib.ada"
),
       fib_Decls::rlt_fib_State_Type rlt_node_state @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 45,
  theCol = 10,
  theOffset = 824),
  theEndCaret = 
  @Caret(
  theLine = 45,
  theCol = 24,
  theOffset = 837),
  theOptionalSource = "fib.ada"
),
       fib_Decls::rlt_int32 out1 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 46,
  theCol = 10,
  theOffset = 890),
  theEndCaret = 
  @Caret(
  theLine = 46,
  theCol = 14,
  theOffset = 893),
  theOptionalSource = "fib.ada"
))
@MethodAnnotation(
  theSourceFileName = "fib.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(rlt_init_step,
            rlt_node_state),
      theOptionalOutParameters = @List(rlt_node_state,
          out1)
    ),
  theOptionalSPARKMethodAnnotation = 
    @NONE,
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 43,
      theCol = 4,
      theOffset = 760),
      theEndCaret = 
      @Caret(
      theLine = 46,
      theCol = 43,
      theOffset = 922),
      theOptionalSource = "fib.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 43,
      theCol = 14,
      theOffset = 770),
      theEndCaret = 
      @Caret(
      theLine = 43,
      theCol = 17,
      theOffset = 772),
      theOptionalSource = "fib.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 43,
      theCol = 4,
      theOffset = 760),
      theEndCaret = 
      @Caret(
      theLine = 46,
      theCol = 42,
      theOffset = 921),
      theOptionalSource = "fib.ada"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Standard
@PackageAnnotation(
  theSourceFileName = "StandardPackage.java",
  theSparkName = Standard,
  thePilarSparkName = Standard,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Natural
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Natural,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 0)))
{}
record Positive
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Positive,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 1)))
{}
record Long_Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Long_Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Float
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Float,
    typeDefinition = 
      @FloatingPointDefinition(
        theDigitsExp = $UNDEFINED (),
        theOptionalLowRangeExp = $NEG_INFTY (),
        theOptionalHighRangeExp = $POS_INFTY ()))
{}
record Boolean
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Boolean,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @List(@EnumerationValue(tag = False),
                @EnumerationValue(tag = True))))
{}
record Character
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Character,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @EmptyList))
{}
record String
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::String,
    typeDefinition = 
      @UnconstrainedArrayDefinition(
        theDimensions = 
          1,
        theComponentSubType = 
          `Standard::Character,
        theIndexSubTypes = 
          @List(`Standard::Positive)
      ))
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   B o d yM e t a d a t a
 ****************************************************************/
package fib_Package
@PackageAnnotation(
  theSourceFileName = "fib.ada",
  theSparkName = fib_Package,
  thePilarSparkName = fib_Package,
  theOptionalParent = @NONE,
  thePackageKind = @BODY,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 64,
  theCol = 1,
  theOffset = 1536),
  theEndCaret = 
  @Caret(
  theLine = 90,
  theCol = 17,
  theOffset = 2183),
  theOptionalSource = "fib.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 64,
  theCol = 1,
  theOffset = 1536),
  theEndCaret = 
  @Caret(
  theLine = 64,
  theCol = 25,
  theOffset = 1559),
  theOptionalSource = "fib.ada"
),
  thePackageHeaderAnnotation = @PackageBodyHeaderAnnotation(
    theOptionalContextClause = @NONE  ,
  theOptionalRefinementDefinition = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
/****************************************************************
 *  P r o c e d u r e s / F u n c t i o n s
 ****************************************************************/
procedure fib 
      (Standard::Boolean rlt_init_step @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 69,
  theCol = 10,
  theOffset = 1595),
  theEndCaret = 
  @Caret(
  theLine = 69,
  theCol = 23,
  theOffset = 1607),
  theOptionalSource = "fib.ada"
),
       fib_Decls::rlt_fib_State_Type rlt_node_state @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 70,
  theCol = 10,
  theOffset = 1635),
  theEndCaret = 
  @Caret(
  theLine = 70,
  theCol = 24,
  theOffset = 1648),
  theOptionalSource = "fib.ada"
),
       fib_Decls::rlt_int32 out1 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 71,
  theCol = 10,
  theOffset = 1701),
  theEndCaret = 
  @Caret(
  theLine = 71,
  theCol = 14,
  theOffset = 1704),
  theOptionalSource = "fib.ada"
))
@MethodAnnotation(
  theSourceFileName = "fib.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_BODY,
      theOptionalInParameters = @List(rlt_init_step,
            rlt_node_state),
      theOptionalOutParameters = @List(rlt_node_state,
          out1)
    ),
  theOptionalSPARKMethodAnnotation = 
    @NONE,
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 68,
      theCol = 4,
      theOffset = 1571),
      theEndCaret = 
      @Caret(
      theLine = 88,
      theCol = 12,
      theOffset = 2165),
      theOptionalSource = "fib.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 68,
      theCol = 14,
      theOffset = 1581),
      theEndCaret = 
      @Caret(
      theLine = 68,
      theCol = 17,
      theOffset = 1583),
      theOptionalSource = "fib.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 68,
      theCol = 4,
      theOffset = 1571),
      theEndCaret = 
      @Caret(
      theLine = 71,
      theCol = 42,
      theOffset = 1732),
      theOptionalSource = "fib.ada"
    )
) 
{

  local
    Standard::Boolean temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$2 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$3 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    fib_Decls::rlt_int32 temp$4 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    fib_Decls::rlt_int32 temp$5 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    fib_Decls::rlt_int32 temp$6 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    fib_Decls::rlt_int32 temp$7 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    fib_Decls::rlt_int32 temp$8 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    fib_Decls::rlt_int32 temp$9 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    fib_Decls::rlt_int32 temp$10 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l1.  temp$1 := rlt_init_step;
  #l2.  if !(temp$1) then goto l3; 
  #l4.  temp$2 := 0;
  #l5. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l4,
      endLabel = l5,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 75,
      theCol = 16,
      theOffset = 1794),
      theEndCaret = 
      @Caret(
      theLine = 75,
      theCol = 47,
      theOffset = 1824),
      theOptionalSource = "fib.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  rlt_node_state.unit_delay := temp$2;
  #l6.  temp$3 := 1;
  #l7. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l6,
      endLabel = l7,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 77,
      theCol = 16,
      theOffset = 1843),
      theEndCaret = 
      @Caret(
      theLine = 77,
      theCol = 48,
      theOffset = 1874),
      theOptionalSource = "fib.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  rlt_node_state.unit_delay1 := temp$3;
  #l8.  goto l10;
  #l3. 
  #l9. <@NullStatementAnnotation(
      mark = @Mark(
      startLabel = l9,
      endLabel = l9,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 80,
      theCol = 13,
      theOffset = 1902),
      theEndCaret = 
      @Caret(
      theLine = 80,
      theCol = 18,
      theOffset = 1906),
      theOptionalSource = "fib.ada"
    )
    ),
      optSparkLabelList = @NONE
  )> 
  #l10. <@IfStatementAnnotation(
    ifPart = @Mark(
    startLabel = l1,
    endLabel = l2,
    optRS = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 74,
    theCol = 7,
    theOffset = 1754),
    theEndCaret = 
    @Caret(
    theLine = 74,
    theCol = 25,
    theOffset = 1771),
    theOptionalSource = "fib.ada"
  )
  ),
    thenPart= @MARK_PLACEHOLDER,
    optElsIfParts = @NONE,
    optElsePart = @MARK_PLACEHOLDER,
      mark = @Mark(
      startLabel = l1,
      endLabel = l10,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 74,
      theCol = 7,
      theOffset = 1754),
      theEndCaret = 
      @Caret(
      theLine = 81,
      theCol = 15,
      theOffset = 1922),
      theOptionalSource = "fib.ada"
    )
    ),
      optSparkLabelList = @NONE  
  )> 
  #l11.  temp$4 := rlt_node_state.unit_delay;
  #l12.  temp$5 := rlt_node_state.unit_delay1;
  #l13.  temp$6 := (temp$4 + temp$5);
  #l14. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l11,
      endLabel = l14,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 83,
      theCol = 7,
      theOffset = 1932),
      theEndCaret = 
      @Caret(
      theLine = 83,
      theCol = 70,
      theOffset = 1994),
      theOptionalSource = "fib.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  out1 := temp$6;
  #l15.  temp$7 := rlt_node_state.unit_delay;
  #l16.  temp$8 := rlt_node_state.unit_delay1;
  #l17.  temp$9 := (temp$7 + temp$8);
  #l18. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l15,
      endLabel = l18,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 85,
      theCol = 7,
      theOffset = 2004),
      theEndCaret = 
      @Caret(
      theLine = 85,
      theCol = 91,
      theOffset = 2087),
      theOptionalSource = "fib.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  rlt_node_state.unit_delay := temp$9;
  #l19.  temp$10 := rlt_node_state.unit_delay;
  #l20. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l19,
      endLabel = l20,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 87,
      theCol = 7,
      theOffset = 2097),
      theEndCaret = 
      @Caret(
      theLine = 87,
      theCol = 63,
      theOffset = 2152),
      theOptionalSource = "fib.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  rlt_node_state.unit_delay1 := temp$10;
  #l21.  return;
}