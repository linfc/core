@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   B o d yM e t a d a t a
 ****************************************************************/
package B
@PackageAnnotation(
  theSourceFileName = "packageDemoB__x00.ada",
  theSparkName = B,
  thePilarSparkName = B,
  theOptionalParent = @NONE,
  thePackageKind = @BODY,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 9,
  theCol = 1,
  theOffset = 115),
  theEndCaret = 
  @Caret(
  theLine = 14,
  theCol = 7,
  theOffset = 218),
  theOptionalSource = "packageDemoB__x00.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 9,
  theCol = 1,
  theOffset = 115),
  theEndCaret = 
  @Caret(
  theLine = 9,
  theCol = 15,
  theOffset = 128),
  theOptionalSource = "packageDemoB__x00.ada"
),
  thePackageHeaderAnnotation = @PackageBodyHeaderAnnotation(
    theOptionalContextClause = @NONE  ,
  theOptionalRefinementDefinition = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
/****************************************************************
 *  P r o c e d u r e s / F u n c t i o n s
 ****************************************************************/
procedure T 
      (Standard::Integer M @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 10,
  theCol = 15,
  theOffset = 147),
  theEndCaret = 
  @Caret(
  theLine = 10,
  theCol = 16,
  theOffset = 147),
  theOptionalSource = "packageDemoB__x00.ada"
),
       Standard::Integer Z @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 10,
  theCol = 30,
  theOffset = 162),
  theEndCaret = 
  @Caret(
  theLine = 10,
  theCol = 31,
  theOffset = 162),
  theOptionalSource = "packageDemoB__x00.ada"
))
@MethodAnnotation(
  theSourceFileName = "packageDemoB__x00.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_BODY,
      theOptionalInParameters = @List(M),
      theOptionalOutParameters = @List(Z)
    ),
  theOptionalSPARKMethodAnnotation = 
    @NONE,
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 10,
      theCol = 3,
      theOffset = 135),
      theEndCaret = 
      @Caret(
      theLine = 13,
      theCol = 9,
      theOffset = 211),
      theOptionalSource = "packageDemoB__x00.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 10,
      theCol = 13,
      theOffset = 145),
      theEndCaret = 
      @Caret(
      theLine = 10,
      theCol = 14,
      theOffset = 145),
      theOptionalSource = "packageDemoB__x00.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 10,
      theCol = 3,
      theOffset = 135),
      theEndCaret = 
      @Caret(
      theLine = 10,
      theCol = 45,
      theOffset = 176),
      theOptionalSource = "packageDemoB__x00.ada"
    )
) 
{

  local
    Standard::Integer temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$2 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l1.  temp$1 := M;
  #l2.  temp$2 := Z;
  #l4. <@ProcedureCallStatementAnnotation(
    optCopyBackPart = @Mark(
    startLabel = l3,
    endLabel = l3,
    optRS = @NONE
  ),
      mark = @Mark(
      startLabel = l1,
      endLabel = l4,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 12,
      theCol = 5,
      theOffset = 193),
      theEndCaret = 
      @Caret(
      theLine = 12,
      theCol = 15,
      theOffset = 202),
      theOptionalSource = "packageDemoB__x00.ada"
    )
    ),
      optSparkLabelList = @NONE
  )>  call  A::Q (temp$1, temp$2);
  #l3. <@CopyBackStatementAnnotation(
      mark = @Mark(
      startLabel = l3,
      endLabel = l3,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 12,
      theCol = 12,
      theOffset = 200),
      theEndCaret = 
      @Caret(
      theLine = 12,
      theCol = 13,
      theOffset = 200),
      theOptionalSource = "packageDemoB__x00.ada"
    )
    ),
      optSparkLabelList = @NONE
  )>  Z := temp$2;
  #l5.  return;
}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package A
@PackageAnnotation(
  theSourceFileName = "packageDemoA__x00.ada",
  theSparkName = A,
  thePilarSparkName = A,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 4,
  theCol = 7,
  theOffset = 88),
  theOptionalSource = "packageDemoA__x00.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 1,
  theCol = 10,
  theOffset = 8),
  theOptionalSource = "packageDemoA__x00.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure Q 
      (Standard::Integer X @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 2,
  theCol = 15,
  theOffset = 27),
  theEndCaret = 
  @Caret(
  theLine = 2,
  theCol = 16,
  theOffset = 27),
  theOptionalSource = "packageDemoA__x00.ada"
),
       Standard::Integer Z @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 2,
  theCol = 30,
  theOffset = 42),
  theEndCaret = 
  @Caret(
  theLine = 2,
  theCol = 31,
  theOffset = 42),
  theOptionalSource = "packageDemoA__x00.ada"
))
@MethodAnnotation(
  theSourceFileName = "packageDemoA__x00.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(X),
      theOptionalOutParameters = @List(Z)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @NONE,
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = Z,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 15,
                          theOffset = 73),
                          theEndCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 16,
                          theOffset = 73),
                          theOptionalSource = "packageDemoA__x00.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = X,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 22,
                          theOffset = 80),
                          theEndCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 23,
                          theOffset = 80),
                          theOptionalSource = "packageDemoA__x00.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 3,
                  theCol = 15,
                  theOffset = 73),
                  theEndCaret = 
                  @Caret(
                  theLine = 3,
                  theCol = 23,
                  theOffset = 80),
                  theOptionalSource = "packageDemoA__x00.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 3,
              theCol = 7,
              theOffset = 65),
              theEndCaret = 
              @Caret(
              theLine = 3,
              theCol = 24,
              theOffset = 81),
              theOptionalSource = "packageDemoA__x00.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 2,
      theCol = 3,
      theOffset = 15),
      theEndCaret = 
      @Caret(
      theLine = 2,
      theCol = 46,
      theOffset = 57),
      theOptionalSource = "packageDemoA__x00.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 2,
      theCol = 13,
      theOffset = 25),
      theEndCaret = 
      @Caret(
      theLine = 2,
      theCol = 14,
      theOffset = 25),
      theOptionalSource = "packageDemoA__x00.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 2,
      theCol = 3,
      theOffset = 15),
      theEndCaret = 
      @Caret(
      theLine = 2,
      theCol = 45,
      theOffset = 56),
      theOptionalSource = "packageDemoA__x00.ada"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package B
@PackageAnnotation(
  theSourceFileName = "packageDemoB__x00.ada",
  theSparkName = B,
  thePilarSparkName = B,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 2,
  theCol = 13,
  theOffset = 20),
  theEndCaret = 
  @Caret(
  theLine = 6,
  theCol = 7,
  theOffset = 111),
  theOptionalSource = "packageDemoB__x00.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 3,
  theCol = 1,
  theOffset = 23),
  theEndCaret = 
  @Caret(
  theLine = 3,
  theCol = 10,
  theOffset = 31),
  theOptionalSource = "packageDemoB__x00.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @ContextClause(
    theOptionalWithClauses = @List(A),
    theOptionalUseTypeClauses = @NONE
  )  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @List(A)
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure T 
      (Standard::Integer M @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 4,
  theCol = 15,
  theOffset = 50),
  theEndCaret = 
  @Caret(
  theLine = 4,
  theCol = 16,
  theOffset = 50),
  theOptionalSource = "packageDemoB__x00.ada"
),
       Standard::Integer Z @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 4,
  theCol = 30,
  theOffset = 65),
  theEndCaret = 
  @Caret(
  theLine = 4,
  theCol = 31,
  theOffset = 65),
  theOptionalSource = "packageDemoB__x00.ada"
))
@MethodAnnotation(
  theSourceFileName = "packageDemoB__x00.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(M),
      theOptionalOutParameters = @List(Z)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @NONE,
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = Z,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 5,
                          theCol = 15,
                          theOffset = 96),
                          theEndCaret = 
                          @Caret(
                          theLine = 5,
                          theCol = 16,
                          theOffset = 96),
                          theOptionalSource = "packageDemoB__x00.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = M,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 5,
                          theCol = 22,
                          theOffset = 103),
                          theEndCaret = 
                          @Caret(
                          theLine = 5,
                          theCol = 23,
                          theOffset = 103),
                          theOptionalSource = "packageDemoB__x00.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 5,
                  theCol = 15,
                  theOffset = 96),
                  theEndCaret = 
                  @Caret(
                  theLine = 5,
                  theCol = 23,
                  theOffset = 103),
                  theOptionalSource = "packageDemoB__x00.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 5,
              theCol = 7,
              theOffset = 88),
              theEndCaret = 
              @Caret(
              theLine = 5,
              theCol = 24,
              theOffset = 104),
              theOptionalSource = "packageDemoB__x00.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 4,
      theCol = 3,
      theOffset = 38),
      theEndCaret = 
      @Caret(
      theLine = 4,
      theCol = 46,
      theOffset = 80),
      theOptionalSource = "packageDemoB__x00.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 4,
      theCol = 13,
      theOffset = 48),
      theEndCaret = 
      @Caret(
      theLine = 4,
      theCol = 14,
      theOffset = 48),
      theOptionalSource = "packageDemoB__x00.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 4,
      theCol = 3,
      theOffset = 38),
      theEndCaret = 
      @Caret(
      theLine = 4,
      theCol = 45,
      theOffset = 79),
      theOptionalSource = "packageDemoB__x00.ada"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   B o d yM e t a d a t a
 ****************************************************************/
package A
@PackageAnnotation(
  theSourceFileName = "packageDemoA__x00.ada",
  theSparkName = A,
  thePilarSparkName = A,
  theOptionalParent = @NONE,
  thePackageKind = @BODY,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 6,
  theCol = 1,
  theOffset = 91),
  theEndCaret = 
  @Caret(
  theLine = 11,
  theCol = 7,
  theOffset = 196),
  theOptionalSource = "packageDemoA__x00.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 6,
  theCol = 1,
  theOffset = 91),
  theEndCaret = 
  @Caret(
  theLine = 6,
  theCol = 15,
  theOffset = 104),
  theOptionalSource = "packageDemoA__x00.ada"
),
  thePackageHeaderAnnotation = @PackageBodyHeaderAnnotation(
    theOptionalContextClause = @NONE  ,
  theOptionalRefinementDefinition = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
/****************************************************************
 *  P r o c e d u r e s / F u n c t i o n s
 ****************************************************************/
procedure Q 
      (Standard::Integer X @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 7,
  theCol = 15,
  theOffset = 123),
  theEndCaret = 
  @Caret(
  theLine = 7,
  theCol = 16,
  theOffset = 123),
  theOptionalSource = "packageDemoA__x00.ada"
),
       Standard::Integer Z @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 7,
  theCol = 30,
  theOffset = 138),
  theEndCaret = 
  @Caret(
  theLine = 7,
  theCol = 31,
  theOffset = 138),
  theOptionalSource = "packageDemoA__x00.ada"
))
@MethodAnnotation(
  theSourceFileName = "packageDemoA__x00.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_BODY,
      theOptionalInParameters = @List(X),
      theOptionalOutParameters = @List(Z)
    ),
  theOptionalSPARKMethodAnnotation = 
    @NONE,
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 7,
      theCol = 3,
      theOffset = 111),
      theEndCaret = 
      @Caret(
      theLine = 10,
      theCol = 9,
      theOffset = 189),
      theOptionalSource = "packageDemoA__x00.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 7,
      theCol = 13,
      theOffset = 121),
      theEndCaret = 
      @Caret(
      theLine = 7,
      theCol = 14,
      theOffset = 121),
      theOptionalSource = "packageDemoA__x00.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 7,
      theCol = 3,
      theOffset = 111),
      theEndCaret = 
      @Caret(
      theLine = 7,
      theCol = 45,
      theOffset = 152),
      theOptionalSource = "packageDemoA__x00.ada"
    )
) 
{

  local
    Standard::Integer temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$2 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$3 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l1.  temp$1 := X;
  #l2.  temp$2 := 2;
  #l3.  temp$3 := (temp$1 + temp$2);
  #l4. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l1,
      endLabel = l4,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 9,
      theCol = 6,
      theOffset = 170),
      theEndCaret = 
      @Caret(
      theLine = 9,
      theCol = 17,
      theOffset = 180),
      theOptionalSource = "packageDemoA__x00.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  Z := temp$3;
  #l5.  return;
}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Standard
@PackageAnnotation(
  theSourceFileName = "StandardPackage.java",
  theSparkName = Standard,
  thePilarSparkName = Standard,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Natural
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Natural,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 0)))
{}
record Positive
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Positive,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 1)))
{}
record Long_Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Long_Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Float
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Float,
    typeDefinition = 
      @FloatingPointDefinition(
        theDigitsExp = $UNDEFINED (),
        theOptionalLowRangeExp = $NEG_INFTY (),
        theOptionalHighRangeExp = $POS_INFTY ()))
{}
record Boolean
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Boolean,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @List(@EnumerationValue(tag = False),
                @EnumerationValue(tag = True))))
{}
record Character
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Character,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @EmptyList))
{}
record String
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::String,
    typeDefinition = 
      @UnconstrainedArrayDefinition(
        theDimensions = 
          1,
        theComponentSubType = 
          `Standard::Character,
        theIndexSubTypes = 
          @List(`Standard::Positive)
      ))
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/