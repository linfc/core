@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package case_statement
@PackageAnnotation(
  theSourceFileName = "case-statement_enum.ada",
  theSparkName = case_statement,
  thePilarSparkName = case_statement,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 12,
  theCol = 20,
  theOffset = 406),
  theOptionalSource = "case-statement_enum.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 1,
  theCol = 23,
  theOffset = 21),
  theOptionalSource = "case-statement_enum.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Week
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 3,
      theCol = 3,
      theOffset = 28),
      theEndCaret = 
      @Caret(
      theLine = 3,
      theCol = 63,
      theOffset = 87),
      theOptionalSource = "case-statement_enum.ada"
    ),
    fullyQualifiedName = case_statement::Week,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @List(@EnumerationValue(tag = Mon),
                @EnumerationValue(tag = Tue),
                @EnumerationValue(tag = Wed),
                @EnumerationValue(tag = Thur),
                @EnumerationValue(tag = Fri),
                @EnumerationValue(tag = FriPart2),
                @EnumerationValue(tag = Sat),
                @EnumerationValue(tag = Sun))))
{}
record WeekDay
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 4,
      theCol = 3,
      theOffset = 91),
      theEndCaret = 
      @Caret(
      theLine = 4,
      theCol = 51,
      theOffset = 138),
      theOptionalSource = "case-statement_enum.ada"
    ),
    fullyQualifiedName = case_statement::WeekDay,
    type = `case_statement::Week,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = case_statement::Week.Fri,
        lowerBound = $First(`case_statement::Week))))
{}
record HumpDay
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 5,
      theCol = 3,
      theOffset = 189),
      theEndCaret = 
      @Caret(
      theLine = 5,
      theCol = 47,
      theOffset = 232),
      theOptionalSource = "case-statement_enum.ada"
    ),
    fullyQualifiedName = case_statement::HumpDay,
    type = `case_statement::WeekDay,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = case_statement::Week.Wed,
        lowerBound = case_statement::Week.Wed)))
{}
record WeekEnd
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 6,
      theCol = 3,
      theOffset = 236),
      theEndCaret = 
      @Caret(
      theLine = 6,
      theCol = 50,
      theOffset = 282),
      theOptionalSource = "case-statement_enum.ada"
    ),
    fullyQualifiedName = case_statement::WeekEnd,
    type = `case_statement::Week,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`case_statement::Week),
        lowerBound = case_statement::Week.Sat)))
{}
record Activity
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 3,
      theOffset = 289),
      theEndCaret = 
      @Caret(
      theLine = 8,
      theCol = 48,
      theOffset = 333),
      theOptionalSource = "case-statement_enum.ada"
    ),
    fullyQualifiedName = case_statement::Activity,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @List(@EnumerationValue(tag = Work),
                @EnumerationValue(tag = Sleep),
                @EnumerationValue(tag = Party),
                @EnumerationValue(tag = Drink))))
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure case_statement::Activity isWorkDay 
      (case_statement::Week d @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 10,
  theCol = 23,
  theOffset = 360),
  theEndCaret = 
  @Caret(
  theLine = 10,
  theCol = 24,
  theOffset = 360),
  theOptionalSource = "case-statement_enum.ada"
))
@MethodAnnotation(
  theSourceFileName = "case-statement_enum.ada",
  theAdaMethodAnnotation = 
    @AdaFunctionAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(d)
    ),
  theOptionalSPARKMethodAnnotation = 
    @NONE,
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 10,
      theCol = 3,
      theOffset = 340),
      theEndCaret = 
      @Caret(
      theLine = 10,
      theCol = 49,
      theOffset = 385),
      theOptionalSource = "case-statement_enum.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 10,
      theCol = 12,
      theOffset = 349),
      theEndCaret = 
      @Caret(
      theLine = 10,
      theCol = 21,
      theOffset = 357),
      theOptionalSource = "case-statement_enum.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 10,
      theCol = 3,
      theOffset = 340),
      theEndCaret = 
      @Caret(
      theLine = 10,
      theCol = 48,
      theOffset = 384),
      theOptionalSource = "case-statement_enum.ada"
    )
) 
{ #locret. return;}
procedure case_statement::Activity isWorkDay 
      (case_statement::Week d @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 10,
  theCol = 23,
  theOffset = 360),
  theEndCaret = 
  @Caret(
  theLine = 10,
  theCol = 24,
  theOffset = 360),
  theOptionalSource = "case-statement_enum.ada"
))
@MethodAnnotation(
  theSourceFileName = "case-statement_enum.ada",
  theAdaMethodAnnotation = 
    @AdaFunctionAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(d)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProofFunctionAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      isImplicit = true
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 10,
      theCol = 3,
      theOffset = 340),
      theEndCaret = 
      @Caret(
      theLine = 10,
      theCol = 49,
      theOffset = 385),
      theOptionalSource = "case-statement_enum.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 10,
      theCol = 3,
      theOffset = 340),
      theEndCaret = 
      @Caret(
      theLine = 10,
      theCol = 49,
      theOffset = 385),
      theOptionalSource = "case-statement_enum.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 10,
      theCol = 3,
      theOffset = 340),
      theEndCaret = 
      @Caret(
      theLine = 10,
      theCol = 49,
      theOffset = 385),
      theOptionalSource = "case-statement_enum.ada"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   B o d yM e t a d a t a
 ****************************************************************/
package case_statement
@PackageAnnotation(
  theSourceFileName = "case-statement_enum.ada",
  theSparkName = case_statement,
  thePilarSparkName = case_statement,
  theOptionalParent = @NONE,
  thePackageKind = @BODY,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 14,
  theCol = 1,
  theOffset = 409),
  theEndCaret = 
  @Caret(
  theLine = 38,
  theCol = 20,
  theOffset = 850),
  theOptionalSource = "case-statement_enum.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 14,
  theCol = 1,
  theOffset = 409),
  theEndCaret = 
  @Caret(
  theLine = 14,
  theCol = 28,
  theOffset = 435),
  theOptionalSource = "case-statement_enum.ada"
),
  thePackageHeaderAnnotation = @PackageBodyHeaderAnnotation(
    theOptionalContextClause = @NONE  ,
  theOptionalRefinementDefinition = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
/****************************************************************
 *  P r o c e d u r e s / F u n c t i o n s
 ****************************************************************/
procedure case_statement::Activity isWorkDay 
      (case_statement::Week d @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 17,
  theCol = 23,
  theOffset = 463),
  theEndCaret = 
  @Caret(
  theLine = 17,
  theCol = 24,
  theOffset = 463),
  theOptionalSource = "case-statement_enum.ada"
))
@MethodAnnotation(
  theSourceFileName = "case-statement_enum.ada",
  theAdaMethodAnnotation = 
    @AdaFunctionAnnotation(
      theOrigin = @PACKAGE_BODY,
      theOptionalInParameters = @List(d)
    ),
  theOptionalSPARKMethodAnnotation = 
    @NONE,
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 17,
      theCol = 3,
      theOffset = 443),
      theEndCaret = 
      @Caret(
      theLine = 36,
      theCol = 17,
      theOffset = 827),
      theOptionalSource = "case-statement_enum.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 17,
      theCol = 12,
      theOffset = 452),
      theEndCaret = 
      @Caret(
      theLine = 17,
      theCol = 21,
      theOffset = 460),
      theOptionalSource = "case-statement_enum.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 17,
      theCol = 3,
      theOffset = 443),
      theEndCaret = 
      @Caret(
      theLine = 17,
      theCol = 48,
      theOffset = 487),
      theOptionalSource = "case-statement_enum.ada"
    )
) 
{

  local
    case_statement::Activity ret @LocalVarDeclarationAnnotation(
      theKind = @CONCRETE_VARIABLE,
      theOptionalLoc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 19,
      theCol = 5,
      theOffset = 498),
      theEndCaret = 
      @Caret(
      theLine = 19,
      theCol = 8,
      theOffset = 500),
      theOptionalSource = "case-statement_enum.ada"
    )
    );
    case_statement::Week temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    case_statement::Week temp$2 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    case_statement::Week temp$3 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Boolean temp$4 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Boolean temp$5 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Boolean temp$6 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    case_statement::Activity temp$7 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Boolean temp$8 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Boolean temp$9 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Boolean temp$10 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    case_statement::Activity temp$11 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Boolean temp$12 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    case_statement::Activity temp$13 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Boolean temp$14 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Boolean temp$15 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Boolean temp$16 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    case_statement::Activity temp$17 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Boolean temp$18 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Boolean temp$19 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Boolean temp$20 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    case_statement::Activity temp$21 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    case_statement::Activity temp$22 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l1.  temp$1 := d;
  #l3.  temp$2 := case_statement::Week.Tue;
  #l4.  temp$3 := case_statement::Week.Mon;
  #l5.  temp$5 := (temp$1 >= temp$3);
  #l6.  temp$6 := (temp$1 <= temp$2);
  #l7. <@RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 23,
    theCol = 12,
    theOffset = 548),
    theEndCaret = 
    @Caret(
    theLine = 23,
    theCol = 36,
    theOffset = 571),
    theOptionalSource = "case-statement_enum.ada"
  )> temp$4 := temp$5 && temp$6 @Choice;
  #l8.  if !(temp$4) then goto l2; 
  #l9.  temp$7 := case_statement::Activity.Work;
  #l10. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l9,
      endLabel = l10,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 24,
      theCol = 9,
      theOffset = 584),
      theEndCaret = 
      @Caret(
      theLine = 24,
      theCol = 21,
      theOffset = 595),
      theOptionalSource = "case-statement_enum.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  ret := temp$7;
  #l11.  goto l48;
  #l2. 
  #l13.  temp$9 := (temp$1 >= $First(`case_statement::HumpDay));
  #l14.  temp$10 := (temp$1 <= $Last(`case_statement::HumpDay));
  #l15. <@RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 25,
    theCol = 12,
    theOffset = 608),
    theEndCaret = 
    @Caret(
    theLine = 25,
    theCol = 19,
    theOffset = 614),
    theOptionalSource = "case-statement_enum.ada"
  )> temp$8 := temp$9 && temp$10 @Choice;
  #l16.  if !(temp$8) then goto l12; 
  #l17.  temp$11 := case_statement::Activity.Sleep;
  #l18. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l17,
      endLabel = l18,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 26,
      theCol = 9,
      theOffset = 627),
      theEndCaret = 
      @Caret(
      theLine = 26,
      theCol = 22,
      theOffset = 639),
      theOptionalSource = "case-statement_enum.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  ret := temp$11;
  #l19.  goto l48;
  #l12. 
  #l21. <@RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 27,
    theCol = 12,
    theOffset = 652),
    theEndCaret = 
    @Caret(
    theLine = 27,
    theCol = 16,
    theOffset = 655),
    theOptionalSource = "case-statement_enum.ada"
  )>  temp$12 := (temp$1 == case_statement::Week.Thur) @Choice;
  #l22.  if !(temp$12) then goto l20; 
  #l23.  temp$13 := case_statement::Activity.Sleep;
  #l24. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l23,
      endLabel = l24,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 28,
      theCol = 9,
      theOffset = 668),
      theEndCaret = 
      @Caret(
      theLine = 28,
      theCol = 22,
      theOffset = 680),
      theOptionalSource = "case-statement_enum.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  ret := temp$13;
  #l25.  goto l48;
  #l20. 
  #l29. temp$16 := false;
    #l27. <@RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 29,
      theCol = 12,
      theOffset = 693),
      theEndCaret = 
      @Caret(
      theLine = 29,
      theCol = 15,
      theOffset = 695),
      theOptionalSource = "case-statement_enum.ada"
    )>  temp$14 := (temp$1 == case_statement::Week.Fri) @Choice;
  #l30. <@RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 29,
    theCol = 12,
    theOffset = 693),
    theEndCaret = 
    @Caret(
    theLine = 29,
    theCol = 15,
    theOffset = 695),
    theOptionalSource = "case-statement_enum.ada"
  )>  if (temp$14) then goto l34;
    #l28. <@RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 29,
      theCol = 18,
      theOffset = 699),
      theEndCaret = 
      @Caret(
      theLine = 29,
      theCol = 26,
      theOffset = 706),
      theOptionalSource = "case-statement_enum.ada"
    )>  temp$15 := (temp$1 == case_statement::Week.FriPart2) @Choice;
  #l31. <@RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 29,
    theCol = 18,
    theOffset = 699),
    theEndCaret = 
    @Caret(
    theLine = 29,
    theCol = 26,
    theOffset = 706),
    theOptionalSource = "case-statement_enum.ada"
  )>  if (!temp$15) then goto l33;
  #l34.
  #l32. temp$16 := true;
  #l33.
  #l35.  if !(temp$16) then goto l26; 
  #l36.  temp$17 := case_statement::Activity.Party;
  #l37. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l36,
      endLabel = l37,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 30,
      theCol = 9,
      theOffset = 719),
      theEndCaret = 
      @Caret(
      theLine = 30,
      theCol = 22,
      theOffset = 731),
      theOptionalSource = "case-statement_enum.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  ret := temp$17;
  #l38.  goto l48;
  #l26. 
  #l40.  temp$19 := (temp$1 >= $First(`case_statement::WeekEnd));
  #l41.  temp$20 := (temp$1 <= $Last(`case_statement::WeekEnd));
  #l42. <@RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 31,
    theCol = 12,
    theOffset = 744),
    theEndCaret = 
    @Caret(
    theLine = 31,
    theCol = 19,
    theOffset = 750),
    theOptionalSource = "case-statement_enum.ada"
  )> temp$18 := temp$19 && temp$20 @Choice;
  #l43.  if !(temp$18) then goto l39; 
  #l44.  temp$21 := case_statement::Activity.Drink;
  #l45. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l44,
      endLabel = l45,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 32,
      theCol = 9,
      theOffset = 764),
      theEndCaret = 
      @Caret(
      theLine = 32,
      theCol = 22,
      theOffset = 776),
      theOptionalSource = "case-statement_enum.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  ret := temp$21;
  #l46.  goto l48;
  #l39. 
  #l48. <@CaseStatementAnnotation(
    caseStatementAlternatives = @List(@Pair(
    fst = @Mark(
    startLabel = l3,
    endLabel = l8,
    optRS = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 23,
    theCol = 7,
    theOffset = 543),
    theEndCaret = 
    @Caret(
    theLine = 23,
    theCol = 36,
    theOffset = 571),
    theOptionalSource = "case-statement_enum.ada"
  )
  ), 
    snd = @MARK_PLACEHOLDER
  ),
        @Pair(
    fst = @Mark(
    startLabel = l13,
    endLabel = l16,
    optRS = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 25,
    theCol = 7,
    theOffset = 603),
    theEndCaret = 
    @Caret(
    theLine = 25,
    theCol = 19,
    theOffset = 614),
    theOptionalSource = "case-statement_enum.ada"
  )
  ), 
    snd = @MARK_PLACEHOLDER
  ),
        @Pair(
    fst = @Mark(
    startLabel = l21,
    endLabel = l22,
    optRS = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 27,
    theCol = 7,
    theOffset = 647),
    theEndCaret = 
    @Caret(
    theLine = 27,
    theCol = 16,
    theOffset = 655),
    theOptionalSource = "case-statement_enum.ada"
  )
  ), 
    snd = @MARK_PLACEHOLDER
  ),
        @Pair(
    fst = @Mark(
    startLabel = l27,
    endLabel = l35,
    optRS = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 29,
    theCol = 7,
    theOffset = 688),
    theEndCaret = 
    @Caret(
    theLine = 29,
    theCol = 26,
    theOffset = 706),
    theOptionalSource = "case-statement_enum.ada"
  )
  ), 
    snd = @MARK_PLACEHOLDER
  ),
        @Pair(
    fst = @Mark(
    startLabel = l40,
    endLabel = l43,
    optRS = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 31,
    theCol = 7,
    theOffset = 739),
    theEndCaret = 
    @Caret(
    theLine = 31,
    theCol = 19,
    theOffset = 750),
    theOptionalSource = "case-statement_enum.ada"
  )
  ), 
    snd = @MARK_PLACEHOLDER
  )),
    optWhenOthers = @NONE,
      mark = @Mark(
      startLabel = l1,
      endLabel = l48,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 22,
      theCol = 5,
      theOffset = 527),
      theEndCaret = 
      @Caret(
      theLine = 33,
      theCol = 14,
      theOffset = 791),
      theOptionalSource = "case-statement_enum.ada"
    )
    ),
      optSparkLabelList = @NONE
  )                        > 
  #l49.  temp$22 := ret;
  #l50. <@ReturnStatementAnnotation(
      mark = @Mark(
      startLabel = l49,
      endLabel = l50,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 35,
      theCol = 5,
      theOffset = 798),
      theEndCaret = 
      @Caret(
      theLine = 35,
      theCol = 16,
      theOffset = 808),
      theOptionalSource = "case-statement_enum.ada"
    )
    ),
      optSparkLabelList = @NONE
  )>  return temp$22;
}
procedure case_statement::Activity isWorkDay 
      (case_statement::Week d @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 17,
  theCol = 23,
  theOffset = 463),
  theEndCaret = 
  @Caret(
  theLine = 17,
  theCol = 24,
  theOffset = 463),
  theOptionalSource = "case-statement_enum.ada"
))
@MethodAnnotation(
  theSourceFileName = "case-statement_enum.ada",
  theAdaMethodAnnotation = 
    @AdaFunctionAnnotation(
      theOrigin = @PACKAGE_BODY,
      theOptionalInParameters = @List(d)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProofFunctionAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      isImplicit = true
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 17,
      theCol = 3,
      theOffset = 443),
      theEndCaret = 
      @Caret(
      theLine = 36,
      theCol = 17,
      theOffset = 827),
      theOptionalSource = "case-statement_enum.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 17,
      theCol = 3,
      theOffset = 443),
      theEndCaret = 
      @Caret(
      theLine = 36,
      theCol = 17,
      theOffset = 827),
      theOptionalSource = "case-statement_enum.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 17,
      theCol = 3,
      theOffset = 443),
      theEndCaret = 
      @Caret(
      theLine = 36,
      theCol = 17,
      theOffset = 827),
      theOptionalSource = "case-statement_enum.ada"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Standard
@PackageAnnotation(
  theSourceFileName = "StandardPackage.java",
  theSparkName = Standard,
  thePilarSparkName = Standard,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Natural
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Natural,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 0)))
{}
record Positive
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Positive,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 1)))
{}
record Long_Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Long_Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Float
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Float,
    typeDefinition = 
      @FloatingPointDefinition(
        theDigitsExp = $UNDEFINED (),
        theOptionalLowRangeExp = $NEG_INFTY (),
        theOptionalHighRangeExp = $POS_INFTY ()))
{}
record Boolean
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Boolean,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @List(@EnumerationValue(tag = False),
                @EnumerationValue(tag = True))))
{}
record Character
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Character,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @EmptyList))
{}
record String
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::String,
    typeDefinition = 
      @UnconstrainedArrayDefinition(
        theDimensions = 
          1,
        theComponentSubType = 
          `Standard::Character,
        theIndexSubTypes = 
          @List(`Standard::Positive)
      ))
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/