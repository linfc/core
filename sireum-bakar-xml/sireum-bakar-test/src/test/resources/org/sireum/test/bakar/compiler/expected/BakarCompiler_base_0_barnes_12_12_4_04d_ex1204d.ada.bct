@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Standard
@PackageAnnotation(
  theSourceFileName = "StandardPackage.java",
  theSparkName = Standard,
  thePilarSparkName = Standard,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Natural
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Natural,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 0)))
{}
record Positive
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Positive,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 1)))
{}
record Long_Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Long_Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Float
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Float,
    typeDefinition = 
      @FloatingPointDefinition(
        theDigitsExp = $UNDEFINED (),
        theOptionalLowRangeExp = $NEG_INFTY (),
        theOptionalHighRangeExp = $POS_INFTY ()))
{}
record Boolean
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Boolean,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @List(@EnumerationValue(tag = False),
                @EnumerationValue(tag = True))))
{}
record Character
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Character,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @EmptyList))
{}
record String
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::String,
    typeDefinition = 
      @UnconstrainedArrayDefinition(
        theDimensions = 
          1,
        theComponentSubType = 
          `Standard::Character,
        theIndexSubTypes = 
          @List(`Standard::Positive)
      ))
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Pressure
@PackageAnnotation(
  theSourceFileName = "ex1204d.ada",
  theSparkName = Pressure,
  thePilarSparkName = Pressure,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @List(@SymbolEntry(sparkID = "State",pilarSparkID = Pressure::@@$State,originTag = @PACKAGE_SPEC_PUBLIC,kindTag = @ABSTRACT_VARIABLE)),
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 14,
  theCol = 13,
  theOffset = 284),
  theEndCaret = 
  @Caret(
  theLine = 25,
  theCol = 14,
  theOffset = 564),
  theOptionalSource = "ex1204d.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 15,
  theCol = 1,
  theOffset = 298),
  theEndCaret = 
  @Caret(
  theLine = 15,
  theCol = 17,
  theOffset = 313),
  theOptionalSource = "ex1204d.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @PackageSpecificationAnnotation(
      theOptionalOwnStatement = @OwnStatement(
      theOwnClauses = 
        @List(@OwnClause(
          theOptionalDeclaredType = @NONE,
          theOwnVariables = 
            @List(@OwnVariable(
              varName = Pressure::@@$State,
              mode = @NONE,
              ownCategory = @ABSTRACT,
              theOwnVariableSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 16,
                  theCol = 11,
                  theOffset = 326),
                  theEndCaret = 
                  @Caret(
                  theLine = 16,
                  theCol = 16,
                  theOffset = 330),
                  theOptionalSource = "ex1204d.ada"
                )
            )),
          theOwnClauseSelection =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 16,
              theCol = 11,
              theOffset = 326),
              theEndCaret = 
              @Caret(
              theLine = 16,
              theCol = 16,
              theOffset = 331),
              theOptionalSource = "ex1204d.ada"
            )
        )),
      theOwnStatementSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 16,
          theCol = 7,
          theOffset = 322),
          theEndCaret = 
          @Caret(
          theLine = 16,
          theCol = 16,
          theOffset = 331),
          theOptionalSource = "ex1204d.ada"
        )
    ),
      theOptionalVarInitClause = @List(Pressure::@@$State)
    ),
  theOptionalInheritClause = 
    @List(Temperature)
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record State__type
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 16,
      theCol = 11,
      theOffset = 326),
      theEndCaret = 
      @Caret(
      theLine = 16,
      theCol = 16,
      theOffset = 330),
      theOptionalSource = "ex1204d.ada"
    ),
    fullyQualifiedName = Pressure::State__type,
    typeDefinition = 
      @AbstractTypeDefinition)
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
    global Pressure::State__type @@$State @GlobalVarAnnotation(
    symbolEntry = @SymbolEntry(sparkID = "State",pilarSparkID = Pressure::@@$State,originTag = @PACKAGE_SPEC_PUBLIC,kindTag = @ABSTRACT_VARIABLE),
    loc = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 16,
    theCol = 11,
    theOffset = 326),
    theEndCaret = 
    @Caret(
    theLine = 16,
    theCol = 16,
    theOffset = 330),
    theOptionalSource = "ex1204d.ada"
  )
  );
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure Standard::Integer Value
@MethodAnnotation(
  theSourceFileName = "ex1204d.ada",
  theAdaMethodAnnotation = 
    @AdaFunctionAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @NONE
    ),
  theOptionalSPARKMethodAnnotation = 
    @FunctionAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @List(@AnnotationVariable(
          id = Pressure::@@$State,
          loc =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 20,
              theCol = 15,
              theOffset = 413),
              theEndCaret = 
              @Caret(
              theLine = 20,
              theCol = 20,
              theOffset = 417),
              theOptionalSource = "ex1204d.ada"
            )
        )),
      theOptionalGlobalDefinitionsSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 20,
          theCol = 8,
          theOffset = 406),
          theEndCaret = 
          @Caret(
          theLine = 20,
          theCol = 21,
          theOffset = 418),
          theOptionalSource = "ex1204d.ada"
        ),
      theOptionalInGlobals = @List(Pressure::@@$State),
      theOptionalReturnAnnotation = 
        @NONE
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 19,
      theCol = 4,
      theOffset = 367),
      theEndCaret = 
      @Caret(
      theLine = 19,
      theCol = 34,
      theOffset = 396),
      theOptionalSource = "ex1204d.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 19,
      theCol = 13,
      theOffset = 376),
      theEndCaret = 
      @Caret(
      theLine = 19,
      theCol = 18,
      theOffset = 380),
      theOptionalSource = "ex1204d.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 19,
      theCol = 4,
      theOffset = 367),
      theEndCaret = 
      @Caret(
      theLine = 19,
      theCol = 33,
      theOffset = 395),
      theOptionalSource = "ex1204d.ada"
    )
) 
{ #locret. return;}
procedure Standard::Integer Value 
      (Pressure::State__type implicit__state @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 20,
  theCol = 15,
  theOffset = 413),
  theEndCaret = 
  @Caret(
  theLine = 20,
  theCol = 20,
  theOffset = 417),
  theOptionalSource = "ex1204d.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex1204d.ada",
  theAdaMethodAnnotation = 
    @AdaFunctionAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(implicit__state)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProofFunctionAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      isImplicit = true
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 19,
      theCol = 4,
      theOffset = 367),
      theEndCaret = 
      @Caret(
      theLine = 19,
      theCol = 34,
      theOffset = 396),
      theOptionalSource = "ex1204d.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 19,
      theCol = 4,
      theOffset = 367),
      theEndCaret = 
      @Caret(
      theLine = 19,
      theCol = 34,
      theOffset = 396),
      theOptionalSource = "ex1204d.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 19,
      theCol = 4,
      theOffset = 367),
      theEndCaret = 
      @Caret(
      theLine = 19,
      theCol = 34,
      theOffset = 396),
      theOptionalSource = "ex1204d.ada"
    )
) 
{ #locret. return;}
procedure Calculate
@MethodAnnotation(
  theSourceFileName = "ex1204d.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @NONE,
      theOptionalOutParameters = @NONE
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @List(@AnnotationVariable(
          id = Pressure::@@$State,
          loc =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 23,
              theCol = 22,
              theOffset = 469),
              theEndCaret = 
              @Caret(
              theLine = 23,
              theCol = 27,
              theOffset = 473),
              theOptionalSource = "ex1204d.ada"
            )
        ),
              @AnnotationVariable(
          id = Temperature::@@$State,
          loc =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 23,
              theCol = 32,
              theOffset = 479),
              theEndCaret = 
              @Caret(
              theLine = 23,
              theCol = 49,
              theOffset = 495),
              theOptionalSource = "ex1204d.ada"
            )
        )),
      theOptionalGlobalDefinitionsSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 23,
          theCol = 8,
          theOffset = 455),
          theEndCaret = 
          @Caret(
          theLine = 23,
          theCol = 50,
          theOffset = 496),
          theOptionalSource = "ex1204d.ada"
        ),
      theOptionalInGlobals = @List(Pressure::@@$State,
            Temperature::@@$State),
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @List(Pressure::@@$State),
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = Pressure::@@$State,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 24,
                          theCol = 16,
                          theOffset = 514),
                          theEndCaret = 
                          @Caret(
                          theLine = 24,
                          theCol = 21,
                          theOffset = 518),
                          theOptionalSource = "ex1204d.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = Pressure::@@$State,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 24,
                          theCol = 27,
                          theOffset = 525),
                          theEndCaret = 
                          @Caret(
                          theLine = 24,
                          theCol = 32,
                          theOffset = 529),
                          theOptionalSource = "ex1204d.ada"
                        )
                    ),
                          @AnnotationVariable(
                      id = Temperature::@@$State,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 24,
                          theCol = 34,
                          theOffset = 532),
                          theEndCaret = 
                          @Caret(
                          theLine = 24,
                          theCol = 51,
                          theOffset = 548),
                          theOptionalSource = "ex1204d.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 24,
                  theCol = 16,
                  theOffset = 514),
                  theEndCaret = 
                  @Caret(
                  theLine = 24,
                  theCol = 51,
                  theOffset = 548),
                  theOptionalSource = "ex1204d.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 24,
              theCol = 8,
              theOffset = 506),
              theEndCaret = 
              @Caret(
              theLine = 24,
              theCol = 52,
              theOffset = 549),
              theOptionalSource = "ex1204d.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 22,
      theCol = 4,
      theOffset = 426),
      theEndCaret = 
      @Caret(
      theLine = 22,
      theCol = 24,
      theOffset = 445),
      theOptionalSource = "ex1204d.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 22,
      theCol = 14,
      theOffset = 436),
      theEndCaret = 
      @Caret(
      theLine = 22,
      theCol = 23,
      theOffset = 444),
      theOptionalSource = "ex1204d.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 22,
      theCol = 4,
      theOffset = 426),
      theEndCaret = 
      @Caret(
      theLine = 22,
      theCol = 23,
      theOffset = 444),
      theOptionalSource = "ex1204d.ada"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Temperature
@PackageAnnotation(
  theSourceFileName = "ex1204d.ada",
  theSparkName = Temperature,
  thePilarSparkName = Temperature,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @List(@SymbolEntry(sparkID = "State",pilarSparkID = Temperature::@@$State,originTag = @PACKAGE_SPEC_PUBLIC,kindTag = @ABSTRACT_VARIABLE)),
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 2,
  theCol = 1,
  theOffset = 36),
  theEndCaret = 
  @Caret(
  theLine = 12,
  theCol = 17,
  theOffset = 267),
  theOptionalSource = "ex1204d.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 2,
  theCol = 1,
  theOffset = 36),
  theEndCaret = 
  @Caret(
  theLine = 2,
  theCol = 20,
  theOffset = 54),
  theOptionalSource = "ex1204d.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @PackageSpecificationAnnotation(
      theOptionalOwnStatement = @OwnStatement(
      theOwnClauses = 
        @List(@OwnClause(
          theOptionalDeclaredType = @NONE,
          theOwnVariables = 
            @List(@OwnVariable(
              varName = Temperature::@@$State,
              mode = @NONE,
              ownCategory = @ABSTRACT,
              theOwnVariableSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 3,
                  theCol = 11,
                  theOffset = 67),
                  theEndCaret = 
                  @Caret(
                  theLine = 3,
                  theCol = 16,
                  theOffset = 71),
                  theOptionalSource = "ex1204d.ada"
                )
            )),
          theOwnClauseSelection =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 3,
              theCol = 11,
              theOffset = 67),
              theEndCaret = 
              @Caret(
              theLine = 3,
              theCol = 16,
              theOffset = 72),
              theOptionalSource = "ex1204d.ada"
            )
        )),
      theOwnStatementSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 3,
          theCol = 7,
          theOffset = 63),
          theEndCaret = 
          @Caret(
          theLine = 3,
          theCol = 16,
          theOffset = 72),
          theOptionalSource = "ex1204d.ada"
        )
    ),
      theOptionalVarInitClause = @List(Temperature::@@$State)
    ),
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record State__type
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 3,
      theCol = 11,
      theOffset = 67),
      theEndCaret = 
      @Caret(
      theLine = 3,
      theCol = 16,
      theOffset = 71),
      theOptionalSource = "ex1204d.ada"
    ),
    fullyQualifiedName = Temperature::State__type,
    typeDefinition = 
      @AbstractTypeDefinition)
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
    global Temperature::State__type @@$State @GlobalVarAnnotation(
    symbolEntry = @SymbolEntry(sparkID = "State",pilarSparkID = Temperature::@@$State,originTag = @PACKAGE_SPEC_PUBLIC,kindTag = @ABSTRACT_VARIABLE),
    loc = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 3,
    theCol = 11,
    theOffset = 67),
    theEndCaret = 
    @Caret(
    theLine = 3,
    theCol = 16,
    theOffset = 71),
    theOptionalSource = "ex1204d.ada"
  )
  );
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure Standard::Integer Value
@MethodAnnotation(
  theSourceFileName = "ex1204d.ada",
  theAdaMethodAnnotation = 
    @AdaFunctionAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @NONE
    ),
  theOptionalSPARKMethodAnnotation = 
    @FunctionAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @List(@AnnotationVariable(
          id = Temperature::@@$State,
          loc =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 7,
              theCol = 15,
              theOffset = 154),
              theEndCaret = 
              @Caret(
              theLine = 7,
              theCol = 20,
              theOffset = 158),
              theOptionalSource = "ex1204d.ada"
            )
        )),
      theOptionalGlobalDefinitionsSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 7,
          theCol = 8,
          theOffset = 147),
          theEndCaret = 
          @Caret(
          theLine = 7,
          theCol = 21,
          theOffset = 159),
          theOptionalSource = "ex1204d.ada"
        ),
      theOptionalInGlobals = @List(Temperature::@@$State),
      theOptionalReturnAnnotation = 
        @NONE
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 6,
      theCol = 4,
      theOffset = 108),
      theEndCaret = 
      @Caret(
      theLine = 6,
      theCol = 34,
      theOffset = 137),
      theOptionalSource = "ex1204d.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 6,
      theCol = 13,
      theOffset = 117),
      theEndCaret = 
      @Caret(
      theLine = 6,
      theCol = 18,
      theOffset = 121),
      theOptionalSource = "ex1204d.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 6,
      theCol = 4,
      theOffset = 108),
      theEndCaret = 
      @Caret(
      theLine = 6,
      theCol = 33,
      theOffset = 136),
      theOptionalSource = "ex1204d.ada"
    )
) 
{ #locret. return;}
procedure Standard::Integer Value 
      (Temperature::State__type implicit__state @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 7,
  theCol = 15,
  theOffset = 154),
  theEndCaret = 
  @Caret(
  theLine = 7,
  theCol = 20,
  theOffset = 158),
  theOptionalSource = "ex1204d.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex1204d.ada",
  theAdaMethodAnnotation = 
    @AdaFunctionAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(implicit__state)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProofFunctionAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      isImplicit = true
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 6,
      theCol = 4,
      theOffset = 108),
      theEndCaret = 
      @Caret(
      theLine = 6,
      theCol = 34,
      theOffset = 137),
      theOptionalSource = "ex1204d.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 6,
      theCol = 4,
      theOffset = 108),
      theEndCaret = 
      @Caret(
      theLine = 6,
      theCol = 34,
      theOffset = 137),
      theOptionalSource = "ex1204d.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 6,
      theCol = 4,
      theOffset = 108),
      theEndCaret = 
      @Caret(
      theLine = 6,
      theCol = 34,
      theOffset = 137),
      theOptionalSource = "ex1204d.ada"
    )
) 
{ #locret. return;}
procedure Calculate
@MethodAnnotation(
  theSourceFileName = "ex1204d.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @NONE,
      theOptionalOutParameters = @NONE
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @List(@AnnotationVariable(
          id = Temperature::@@$State,
          loc =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 10,
              theCol = 22,
              theOffset = 210),
              theEndCaret = 
              @Caret(
              theLine = 10,
              theCol = 27,
              theOffset = 214),
              theOptionalSource = "ex1204d.ada"
            )
        )),
      theOptionalGlobalDefinitionsSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 10,
          theCol = 8,
          theOffset = 196),
          theEndCaret = 
          @Caret(
          theLine = 10,
          theCol = 28,
          theOffset = 215),
          theOptionalSource = "ex1204d.ada"
        ),
      theOptionalInGlobals = @List(Temperature::@@$State),
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @List(Temperature::@@$State),
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = Temperature::@@$State,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 11,
                          theCol = 16,
                          theOffset = 233),
                          theEndCaret = 
                          @Caret(
                          theLine = 11,
                          theCol = 21,
                          theOffset = 237),
                          theOptionalSource = "ex1204d.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = Temperature::@@$State,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 11,
                          theCol = 27,
                          theOffset = 244),
                          theEndCaret = 
                          @Caret(
                          theLine = 11,
                          theCol = 32,
                          theOffset = 248),
                          theOptionalSource = "ex1204d.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 11,
                  theCol = 16,
                  theOffset = 233),
                  theEndCaret = 
                  @Caret(
                  theLine = 11,
                  theCol = 32,
                  theOffset = 248),
                  theOptionalSource = "ex1204d.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 11,
              theCol = 8,
              theOffset = 225),
              theEndCaret = 
              @Caret(
              theLine = 11,
              theCol = 33,
              theOffset = 249),
              theOptionalSource = "ex1204d.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 9,
      theCol = 4,
      theOffset = 167),
      theEndCaret = 
      @Caret(
      theLine = 9,
      theCol = 24,
      theOffset = 186),
      theOptionalSource = "ex1204d.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 9,
      theCol = 14,
      theOffset = 177),
      theEndCaret = 
      @Caret(
      theLine = 9,
      theCol = 23,
      theOffset = 185),
      theOptionalSource = "ex1204d.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 9,
      theCol = 4,
      theOffset = 167),
      theEndCaret = 
      @Caret(
      theLine = 9,
      theCol = 23,
      theOffset = 185),
      theOptionalSource = "ex1204d.ada"
    )
) 
{ #locret. return;}