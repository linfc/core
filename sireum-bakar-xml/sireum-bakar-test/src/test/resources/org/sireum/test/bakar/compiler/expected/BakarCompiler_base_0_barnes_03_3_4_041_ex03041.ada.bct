@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package M
@PackageAnnotation(
  theSourceFileName = "ex03041.ada",
  theSparkName = M,
  thePilarSparkName = M,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 15,
  theCol = 7,
  theOffset = 466),
  theOptionalSource = "ex03041.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 1,
  theCol = 10,
  theOffset = 8),
  theOptionalSource = "ex03041.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure Solve 
      (Standard::Integer A @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 7,
  theCol = 20,
  theOffset = 149),
  theEndCaret = 
  @Caret(
  theLine = 7,
  theCol = 21,
  theOffset = 149),
  theOptionalSource = "ex03041.ada"
),
       Standard::Integer B @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 7,
  theCol = 23,
  theOffset = 152),
  theEndCaret = 
  @Caret(
  theLine = 7,
  theCol = 24,
  theOffset = 152),
  theOptionalSource = "ex03041.ada"
),
       Standard::Integer C @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 7,
  theCol = 26,
  theOffset = 155),
  theEndCaret = 
  @Caret(
  theLine = 7,
  theCol = 27,
  theOffset = 155),
  theOptionalSource = "ex03041.ada"
),
       Standard::Integer D @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 7,
  theCol = 29,
  theOffset = 158),
  theEndCaret = 
  @Caret(
  theLine = 7,
  theCol = 30,
  theOffset = 158),
  theOptionalSource = "ex03041.ada"
),
       Standard::Float P @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 8,
  theCol = 20,
  theOffset = 198),
  theEndCaret = 
  @Caret(
  theLine = 8,
  theCol = 21,
  theOffset = 198),
  theOptionalSource = "ex03041.ada"
),
       Standard::Float Q @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 8,
  theCol = 23,
  theOffset = 201),
  theEndCaret = 
  @Caret(
  theLine = 8,
  theCol = 24,
  theOffset = 201),
  theOptionalSource = "ex03041.ada"
),
       Standard::Float X @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 9,
  theCol = 20,
  theOffset = 245),
  theEndCaret = 
  @Caret(
  theLine = 9,
  theCol = 21,
  theOffset = 245),
  theOptionalSource = "ex03041.ada"
),
       Standard::Float Y @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 9,
  theCol = 23,
  theOffset = 248),
  theEndCaret = 
  @Caret(
  theLine = 9,
  theCol = 24,
  theOffset = 248),
  theOptionalSource = "ex03041.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex03041.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(A,
            B,
            C,
            D,
            P,
            Q),
      theOptionalOutParameters = @List(X,
          Y)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @ContractPredicate(
          theType = @PRE,
          theExp = ((A * D) != (B * C)),
          theLoc = @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 11,
          theCol = 8,
          theOffset = 325),
          theEndCaret = 
          @Caret(
          theLine = 11,
          theCol = 33,
          theOffset = 349),
          theOptionalSource = "ex03041.ada"
        )
        ),
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      theOptionalPostCondition = 
        @ContractPredicate(
          theType = @POST,
          theExp = $AND(((((Standard::Float) (A) * X) + ((Standard::Float) (B) * Y)) == P),((((Standard::Float) (C) * X) + ((Standard::Float) (D) * Y)) == Q)),
          theLoc = @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 12,
          theCol = 8,
          theOffset = 359),
          theEndCaret = 
          @Caret(
          theLine = 13,
          theCol = 51,
          theOffset = 456),
          theOptionalSource = "ex03041.ada"
        )
        ),
      theOptionalOutGlobals = @NONE,
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = X,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 16,
                          theOffset = 289),
                          theEndCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 17,
                          theOffset = 289),
                          theOptionalSource = "ex03041.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = A,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 26,
                          theOffset = 299),
                          theEndCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 27,
                          theOffset = 299),
                          theOptionalSource = "ex03041.ada"
                        )
                    ),
                          @AnnotationVariable(
                      id = B,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 29,
                          theOffset = 302),
                          theEndCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 30,
                          theOffset = 302),
                          theOptionalSource = "ex03041.ada"
                        )
                    ),
                          @AnnotationVariable(
                      id = C,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 32,
                          theOffset = 305),
                          theEndCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 33,
                          theOffset = 305),
                          theOptionalSource = "ex03041.ada"
                        )
                    ),
                          @AnnotationVariable(
                      id = D,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 35,
                          theOffset = 308),
                          theEndCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 36,
                          theOffset = 308),
                          theOptionalSource = "ex03041.ada"
                        )
                    ),
                          @AnnotationVariable(
                      id = P,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 38,
                          theOffset = 311),
                          theEndCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 39,
                          theOffset = 311),
                          theOptionalSource = "ex03041.ada"
                        )
                    ),
                          @AnnotationVariable(
                      id = Q,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 41,
                          theOffset = 314),
                          theEndCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 42,
                          theOffset = 314),
                          theOptionalSource = "ex03041.ada"
                        )
                    ))
                ),
                      @DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = Y,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 19,
                          theOffset = 292),
                          theEndCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 20,
                          theOffset = 292),
                          theOptionalSource = "ex03041.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = A,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 26,
                          theOffset = 299),
                          theEndCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 27,
                          theOffset = 299),
                          theOptionalSource = "ex03041.ada"
                        )
                    ),
                          @AnnotationVariable(
                      id = B,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 29,
                          theOffset = 302),
                          theEndCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 30,
                          theOffset = 302),
                          theOptionalSource = "ex03041.ada"
                        )
                    ),
                          @AnnotationVariable(
                      id = C,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 32,
                          theOffset = 305),
                          theEndCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 33,
                          theOffset = 305),
                          theOptionalSource = "ex03041.ada"
                        )
                    ),
                          @AnnotationVariable(
                      id = D,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 35,
                          theOffset = 308),
                          theEndCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 36,
                          theOffset = 308),
                          theOptionalSource = "ex03041.ada"
                        )
                    ),
                          @AnnotationVariable(
                      id = P,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 38,
                          theOffset = 311),
                          theEndCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 39,
                          theOffset = 311),
                          theOptionalSource = "ex03041.ada"
                        )
                    ),
                          @AnnotationVariable(
                      id = Q,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 41,
                          theOffset = 314),
                          theEndCaret = 
                          @Caret(
                          theLine = 10,
                          theCol = 42,
                          theOffset = 314),
                          theOptionalSource = "ex03041.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 10,
                  theCol = 16,
                  theOffset = 289),
                  theEndCaret = 
                  @Caret(
                  theLine = 10,
                  theCol = 42,
                  theOffset = 314),
                  theOptionalSource = "ex03041.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 10,
              theCol = 8,
              theOffset = 281),
              theEndCaret = 
              @Caret(
              theLine = 10,
              theCol = 43,
              theOffset = 315),
              theOptionalSource = "ex03041.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 7,
      theCol = 4,
      theOffset = 133),
      theEndCaret = 
      @Caret(
      theLine = 9,
      theCol = 47,
      theOffset = 271),
      theOptionalSource = "ex03041.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 7,
      theCol = 14,
      theOffset = 143),
      theEndCaret = 
      @Caret(
      theLine = 7,
      theCol = 19,
      theOffset = 147),
      theOptionalSource = "ex03041.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 7,
      theCol = 4,
      theOffset = 133),
      theEndCaret = 
      @Caret(
      theLine = 9,
      theCol = 46,
      theOffset = 270),
      theOptionalSource = "ex03041.ada"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Standard
@PackageAnnotation(
  theSourceFileName = "StandardPackage.java",
  theSparkName = Standard,
  thePilarSparkName = Standard,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Natural
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Natural,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 0)))
{}
record Positive
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Positive,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 1)))
{}
record Long_Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Long_Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Float
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Float,
    typeDefinition = 
      @FloatingPointDefinition(
        theDigitsExp = $UNDEFINED (),
        theOptionalLowRangeExp = $NEG_INFTY (),
        theOptionalHighRangeExp = $POS_INFTY ()))
{}
record Boolean
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Boolean,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @List(@EnumerationValue(tag = False),
                @EnumerationValue(tag = True))))
{}
record Character
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Character,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @EmptyList))
{}
record String
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::String,
    typeDefinition = 
      @UnconstrainedArrayDefinition(
        theDimensions = 
          1,
        theComponentSubType = 
          `Standard::Character,
        theIndexSubTypes = 
          @List(`Standard::Positive)
      ))
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/