@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Output_Port
@PackageAnnotation(
  theSourceFileName = "ex0803b.ada",
  theSparkName = Output_Port,
  thePilarSparkName = Output_Port,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @List(@SymbolEntry(sparkID = "Outputs",pilarSparkID = Output_Port::@@$Outputs,originTag = @PACKAGE_SPEC_PUBLIC,kindTag = @ABSTRACT_VARIABLE)),
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 12,
  theCol = 1,
  theOffset = 259),
  theEndCaret = 
  @Caret(
  theLine = 18,
  theCol = 17,
  theOffset = 450),
  theOptionalSource = "ex0803b.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 12,
  theCol = 1,
  theOffset = 259),
  theEndCaret = 
  @Caret(
  theLine = 12,
  theCol = 20,
  theOffset = 277),
  theOptionalSource = "ex0803b.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @PackageSpecificationAnnotation(
      theOptionalOwnStatement = @OwnStatement(
      theOwnClauses = 
        @List(@OwnClause(
          theOptionalDeclaredType = @NONE,
          theOwnVariables = 
            @List(@OwnVariable(
              varName = Output_Port::@@$Outputs,
              mode = @OUT,
              ownCategory = @ABSTRACT,
              theOwnVariableSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 13,
                  theCol = 11,
                  theOffset = 290),
                  theEndCaret = 
                  @Caret(
                  theLine = 13,
                  theCol = 22,
                  theOffset = 300),
                  theOptionalSource = "ex0803b.ada"
                )
            )),
          theOwnClauseSelection =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 13,
              theCol = 11,
              theOffset = 290),
              theEndCaret = 
              @Caret(
              theLine = 13,
              theCol = 22,
              theOffset = 301),
              theOptionalSource = "ex0803b.ada"
            )
        )),
      theOwnStatementSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 13,
          theCol = 7,
          theOffset = 286),
          theEndCaret = 
          @Caret(
          theLine = 13,
          theCol = 22,
          theOffset = 301),
          theOptionalSource = "ex0803b.ada"
        )
    ),
      theOptionalVarInitClause = @NONE
    ),
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Outputs__type
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 13,
      theCol = 11,
      theOffset = 290),
      theEndCaret = 
      @Caret(
      theLine = 13,
      theCol = 22,
      theOffset = 300),
      theOptionalSource = "ex0803b.ada"
    ),
    fullyQualifiedName = Output_Port::Outputs__type,
    typeDefinition = 
      @AbstractTypeDefinition)
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
    global Output_Port::Outputs__type @@$Outputs @GlobalVarAnnotation(
    symbolEntry = @SymbolEntry(sparkID = "Outputs",pilarSparkID = Output_Port::@@$Outputs,originTag = @PACKAGE_SPEC_PUBLIC,kindTag = @ABSTRACT_VARIABLE),
    loc = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 13,
    theCol = 11,
    theOffset = 290),
    theEndCaret = 
    @Caret(
    theLine = 13,
    theCol = 22,
    theOffset = 300),
    theOptionalSource = "ex0803b.ada"
  )
  );
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure Write_To_Port 
      (Standard::Integer Output_Value @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 15,
  theCol = 28,
  theOffset = 335),
  theEndCaret = 
  @Caret(
  theLine = 15,
  theCol = 40,
  theOffset = 346),
  theOptionalSource = "ex0803b.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex0803b.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(Output_Value),
      theOptionalOutParameters = @NONE
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @List(@AnnotationVariable(
          id = Output_Port::@@$Outputs,
          loc =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 16,
              theCol = 19,
              theOffset = 382),
              theEndCaret = 
              @Caret(
              theLine = 16,
              theCol = 26,
              theOffset = 388),
              theOptionalSource = "ex0803b.ada"
            )
        )),
      theOptionalGlobalDefinitionsSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 16,
          theCol = 8,
          theOffset = 371),
          theEndCaret = 
          @Caret(
          theLine = 16,
          theCol = 27,
          theOffset = 389),
          theOptionalSource = "ex0803b.ada"
        ),
      theOptionalInGlobals = @NONE,
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @List(Output_Port::@@$Outputs),
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = Output_Port::@@$Outputs,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 17,
                          theCol = 16,
                          theOffset = 407),
                          theEndCaret = 
                          @Caret(
                          theLine = 17,
                          theCol = 23,
                          theOffset = 413),
                          theOptionalSource = "ex0803b.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = Output_Value,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 17,
                          theCol = 29,
                          theOffset = 420),
                          theEndCaret = 
                          @Caret(
                          theLine = 17,
                          theCol = 41,
                          theOffset = 431),
                          theOptionalSource = "ex0803b.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 17,
                  theCol = 16,
                  theOffset = 407),
                  theEndCaret = 
                  @Caret(
                  theLine = 17,
                  theCol = 41,
                  theOffset = 431),
                  theOptionalSource = "ex0803b.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 17,
              theCol = 8,
              theOffset = 399),
              theEndCaret = 
              @Caret(
              theLine = 17,
              theCol = 42,
              theOffset = 432),
              theOptionalSource = "ex0803b.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 15,
      theCol = 4,
      theOffset = 311),
      theEndCaret = 
      @Caret(
      theLine = 15,
      theCol = 55,
      theOffset = 361),
      theOptionalSource = "ex0803b.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 15,
      theCol = 14,
      theOffset = 321),
      theEndCaret = 
      @Caret(
      theLine = 15,
      theCol = 27,
      theOffset = 333),
      theOptionalSource = "ex0803b.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 15,
      theCol = 4,
      theOffset = 311),
      theEndCaret = 
      @Caret(
      theLine = 15,
      theCol = 54,
      theOffset = 360),
      theOptionalSource = "ex0803b.ada"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Input_Port
@PackageAnnotation(
  theSourceFileName = "ex0803b.ada",
  theSparkName = Input_Port,
  thePilarSparkName = Input_Port,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @List(@SymbolEntry(sparkID = "Inputs",pilarSparkID = Input_Port::@@$Inputs,originTag = @PACKAGE_SPEC_PUBLIC,kindTag = @ABSTRACT_VARIABLE)),
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 10,
  theCol = 16,
  theOffset = 254),
  theOptionalSource = "ex0803b.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 1,
  theCol = 19,
  theOffset = 17),
  theOptionalSource = "ex0803b.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @PackageSpecificationAnnotation(
      theOptionalOwnStatement = @OwnStatement(
      theOwnClauses = 
        @List(@OwnClause(
          theOptionalDeclaredType = @NONE,
          theOwnVariables = 
            @List(@OwnVariable(
              varName = Input_Port::@@$Inputs,
              mode = @IN,
              ownCategory = @ABSTRACT,
              theOwnVariableSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 2,
                  theCol = 11,
                  theOffset = 30),
                  theEndCaret = 
                  @Caret(
                  theLine = 2,
                  theCol = 20,
                  theOffset = 38),
                  theOptionalSource = "ex0803b.ada"
                )
            )),
          theOwnClauseSelection =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 2,
              theCol = 11,
              theOffset = 30),
              theEndCaret = 
              @Caret(
              theLine = 2,
              theCol = 20,
              theOffset = 39),
              theOptionalSource = "ex0803b.ada"
            )
        )),
      theOwnStatementSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 2,
          theCol = 7,
          theOffset = 26),
          theEndCaret = 
          @Caret(
          theLine = 2,
          theCol = 20,
          theOffset = 39),
          theOptionalSource = "ex0803b.ada"
        )
    ),
      theOptionalVarInitClause = @NONE
    ),
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Inputs__type
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 2,
      theCol = 11,
      theOffset = 30),
      theEndCaret = 
      @Caret(
      theLine = 2,
      theCol = 20,
      theOffset = 38),
      theOptionalSource = "ex0803b.ada"
    ),
    fullyQualifiedName = Input_Port::Inputs__type,
    typeDefinition = 
      @AbstractTypeDefinition)
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
    global Input_Port::Inputs__type @@$Inputs @GlobalVarAnnotation(
    symbolEntry = @SymbolEntry(sparkID = "Inputs",pilarSparkID = Input_Port::@@$Inputs,originTag = @PACKAGE_SPEC_PUBLIC,kindTag = @ABSTRACT_VARIABLE),
    loc = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 2,
    theCol = 11,
    theOffset = 30),
    theEndCaret = 
    @Caret(
    theLine = 2,
    theCol = 20,
    theOffset = 38),
    theOptionalSource = "ex0803b.ada"
  )
  );
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure Read_From_Port 
      (Standard::Integer Input_Value @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 4,
  theCol = 29,
  theOffset = 74),
  theEndCaret = 
  @Caret(
  theLine = 4,
  theCol = 40,
  theOffset = 84),
  theOptionalSource = "ex0803b.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex0803b.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @NONE,
      theOptionalOutParameters = @List(Input_Value)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @List(@AnnotationVariable(
          id = Input_Port::@@$Inputs,
          loc =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 5,
              theCol = 18,
              theOffset = 120),
              theEndCaret = 
              @Caret(
              theLine = 5,
              theCol = 24,
              theOffset = 125),
              theOptionalSource = "ex0803b.ada"
            )
        )),
      theOptionalGlobalDefinitionsSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 5,
          theCol = 8,
          theOffset = 110),
          theEndCaret = 
          @Caret(
          theLine = 5,
          theCol = 25,
          theOffset = 126),
          theOptionalSource = "ex0803b.ada"
        ),
      theOptionalInGlobals = @List(Input_Port::@@$Inputs),
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @NONE,
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = Input_Value,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 6,
                          theCol = 16,
                          theOffset = 144),
                          theEndCaret = 
                          @Caret(
                          theLine = 6,
                          theCol = 27,
                          theOffset = 154),
                          theOptionalSource = "ex0803b.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = Input_Port::@@$Inputs,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 6,
                          theCol = 33,
                          theOffset = 161),
                          theEndCaret = 
                          @Caret(
                          theLine = 6,
                          theCol = 39,
                          theOffset = 166),
                          theOptionalSource = "ex0803b.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 6,
                  theCol = 16,
                  theOffset = 144),
                  theEndCaret = 
                  @Caret(
                  theLine = 6,
                  theCol = 39,
                  theOffset = 166),
                  theOptionalSource = "ex0803b.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 6,
              theCol = 8,
              theOffset = 136),
              theEndCaret = 
              @Caret(
              theLine = 6,
              theCol = 40,
              theOffset = 167),
              theOptionalSource = "ex0803b.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 4,
      theCol = 4,
      theOffset = 49),
      theEndCaret = 
      @Caret(
      theLine = 4,
      theCol = 56,
      theOffset = 100),
      theOptionalSource = "ex0803b.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 4,
      theCol = 14,
      theOffset = 59),
      theEndCaret = 
      @Caret(
      theLine = 4,
      theCol = 28,
      theOffset = 72),
      theOptionalSource = "ex0803b.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 4,
      theCol = 4,
      theOffset = 49),
      theEndCaret = 
      @Caret(
      theLine = 4,
      theCol = 55,
      theOffset = 99),
      theOptionalSource = "ex0803b.ada"
    )
) 
{ #locret. return;}
procedure Standard::Boolean End_Of_Input
@MethodAnnotation(
  theSourceFileName = "ex0803b.ada",
  theAdaMethodAnnotation = 
    @AdaFunctionAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @NONE
    ),
  theOptionalSPARKMethodAnnotation = 
    @FunctionAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @List(@AnnotationVariable(
          id = Input_Port::@@$Inputs,
          loc =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 9,
              theCol = 18,
              theOffset = 231),
              theEndCaret = 
              @Caret(
              theLine = 9,
              theCol = 24,
              theOffset = 236),
              theOptionalSource = "ex0803b.ada"
            )
        )),
      theOptionalGlobalDefinitionsSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 9,
          theCol = 8,
          theOffset = 221),
          theEndCaret = 
          @Caret(
          theLine = 9,
          theCol = 25,
          theOffset = 237),
          theOptionalSource = "ex0803b.ada"
        ),
      theOptionalInGlobals = @List(Input_Port::@@$Inputs),
      theOptionalReturnAnnotation = 
        @NONE
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 4,
      theOffset = 175),
      theEndCaret = 
      @Caret(
      theLine = 8,
      theCol = 41,
      theOffset = 211),
      theOptionalSource = "ex0803b.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 13,
      theOffset = 184),
      theEndCaret = 
      @Caret(
      theLine = 8,
      theCol = 25,
      theOffset = 195),
      theOptionalSource = "ex0803b.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 4,
      theOffset = 175),
      theEndCaret = 
      @Caret(
      theLine = 8,
      theCol = 40,
      theOffset = 210),
      theOptionalSource = "ex0803b.ada"
    )
) 
{ #locret. return;}
procedure Standard::Boolean End_Of_Input 
      (Input_Port::Inputs__type implicit__inputs @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 9,
  theCol = 18,
  theOffset = 231),
  theEndCaret = 
  @Caret(
  theLine = 9,
  theCol = 24,
  theOffset = 236),
  theOptionalSource = "ex0803b.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex0803b.ada",
  theAdaMethodAnnotation = 
    @AdaFunctionAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(implicit__inputs)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProofFunctionAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      isImplicit = true
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 4,
      theOffset = 175),
      theEndCaret = 
      @Caret(
      theLine = 8,
      theCol = 41,
      theOffset = 211),
      theOptionalSource = "ex0803b.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 4,
      theOffset = 175),
      theEndCaret = 
      @Caret(
      theLine = 8,
      theCol = 41,
      theOffset = 211),
      theOptionalSource = "ex0803b.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 4,
      theOffset = 175),
      theEndCaret = 
      @Caret(
      theLine = 8,
      theCol = 41,
      theOffset = 211),
      theOptionalSource = "ex0803b.ada"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Standard
@PackageAnnotation(
  theSourceFileName = "StandardPackage.java",
  theSparkName = Standard,
  thePilarSparkName = Standard,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Natural
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Natural,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 0)))
{}
record Positive
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Positive,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 1)))
{}
record Long_Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Long_Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Float
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Float,
    typeDefinition = 
      @FloatingPointDefinition(
        theDigitsExp = $UNDEFINED (),
        theOptionalLowRangeExp = $NEG_INFTY (),
        theOptionalHighRangeExp = $POS_INFTY ()))
{}
record Boolean
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Boolean,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @List(@EnumerationValue(tag = False),
                @EnumerationValue(tag = True))))
{}
record Character
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Character,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @EmptyList))
{}
record String
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::String,
    typeDefinition = 
      @UnconstrainedArrayDefinition(
        theDimensions = 
          1,
        theComponentSubType = 
          `Standard::Character,
        theIndexSubTypes = 
          @List(`Standard::Positive)
      ))
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/