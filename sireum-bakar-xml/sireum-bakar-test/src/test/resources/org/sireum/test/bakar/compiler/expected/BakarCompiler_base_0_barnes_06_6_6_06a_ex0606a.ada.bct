@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package P
@PackageAnnotation(
  theSourceFileName = "ex0606a.ada",
  theSparkName = P,
  thePilarSparkName = P,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 2,
  theCol = 1,
  theOffset = 28),
  theEndCaret = 
  @Caret(
  theLine = 15,
  theCol = 7,
  theOffset = 359),
  theOptionalSource = "ex0606a.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 2,
  theCol = 1,
  theOffset = 28),
  theEndCaret = 
  @Caret(
  theLine = 2,
  theCol = 10,
  theOffset = 36),
  theOptionalSource = "ex0606a.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Object
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 3,
      theCol = 4,
      theOffset = 45),
      theEndCaret = 
      @Caret(
      theLine = 6,
      theCol = 18,
      theOffset = 134),
      theOptionalSource = "ex0606a.ada"
    ),
    fullyQualifiedName = P::Object,
    typeDefinition = 
      @RecordTypeDefinition(
        tagged = true,
        parentType=@NONE))
{
  Standard::Float x_coord @RecordComponentAnnotation(
    sparkID = X_Coord
  );
  Standard::Float y_coord @RecordComponentAnnotation(
    sparkID = Y_Coord
  );
}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure Init_Obj 
      (Standard::Float X @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 8,
  theCol = 23,
  theOffset = 161),
  theEndCaret = 
  @Caret(
  theLine = 8,
  theCol = 24,
  theOffset = 161),
  theOptionalSource = "ex0606a.ada"
),
       Standard::Float Y @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 8,
  theCol = 26,
  theOffset = 164),
  theEndCaret = 
  @Caret(
  theLine = 8,
  theCol = 27,
  theOffset = 164),
  theOptionalSource = "ex0606a.ada"
),
       P::Object Obj @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 8,
  theCol = 37,
  theOffset = 175),
  theEndCaret = 
  @Caret(
  theLine = 8,
  theCol = 40,
  theOffset = 177),
  theOptionalSource = "ex0606a.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex0606a.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(X,
            Y),
      theOptionalOutParameters = @List(Obj)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @NONE,
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = Obj,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 9,
                          theCol = 16,
                          theOffset = 210),
                          theEndCaret = 
                          @Caret(
                          theLine = 9,
                          theCol = 19,
                          theOffset = 212),
                          theOptionalSource = "ex0606a.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = X,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 9,
                          theCol = 25,
                          theOffset = 219),
                          theEndCaret = 
                          @Caret(
                          theLine = 9,
                          theCol = 26,
                          theOffset = 219),
                          theOptionalSource = "ex0606a.ada"
                        )
                    ),
                          @AnnotationVariable(
                      id = Y,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 9,
                          theCol = 28,
                          theOffset = 222),
                          theEndCaret = 
                          @Caret(
                          theLine = 9,
                          theCol = 29,
                          theOffset = 222),
                          theOptionalSource = "ex0606a.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 9,
                  theCol = 16,
                  theOffset = 210),
                  theEndCaret = 
                  @Caret(
                  theLine = 9,
                  theCol = 29,
                  theOffset = 222),
                  theOptionalSource = "ex0606a.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 9,
              theCol = 8,
              theOffset = 202),
              theEndCaret = 
              @Caret(
              theLine = 9,
              theCol = 30,
              theOffset = 223),
              theOptionalSource = "ex0606a.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 4,
      theOffset = 142),
      theEndCaret = 
      @Caret(
      theLine = 8,
      theCol = 55,
      theOffset = 192),
      theOptionalSource = "ex0606a.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 14,
      theOffset = 152),
      theEndCaret = 
      @Caret(
      theLine = 8,
      theCol = 22,
      theOffset = 159),
      theOptionalSource = "ex0606a.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 4,
      theOffset = 142),
      theEndCaret = 
      @Caret(
      theLine = 8,
      theCol = 54,
      theOffset = 191),
      theOptionalSource = "ex0606a.ada"
    )
) 
{ #locret. return;}
procedure Standard::Float Distance 
      (P::Object Obj @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 11,
  theCol = 22,
  theOffset = 249),
  theEndCaret = 
  @Caret(
  theLine = 11,
  theCol = 25,
  theOffset = 251),
  theOptionalSource = "ex0606a.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex0606a.ada",
  theAdaMethodAnnotation = 
    @AdaFunctionAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(Obj)
    ),
  theOptionalSPARKMethodAnnotation = 
    @NONE,
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 11,
      theCol = 4,
      theOffset = 231),
      theEndCaret = 
      @Caret(
      theLine = 11,
      theCol = 49,
      theOffset = 275),
      theOptionalSource = "ex0606a.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 11,
      theCol = 13,
      theOffset = 240),
      theEndCaret = 
      @Caret(
      theLine = 11,
      theCol = 21,
      theOffset = 247),
      theOptionalSource = "ex0606a.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 11,
      theCol = 4,
      theOffset = 231),
      theEndCaret = 
      @Caret(
      theLine = 11,
      theCol = 48,
      theOffset = 274),
      theOptionalSource = "ex0606a.ada"
    )
) 
{ #locret. return;}
procedure Standard::Float Distance 
      (P::Object Obj @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 11,
  theCol = 22,
  theOffset = 249),
  theEndCaret = 
  @Caret(
  theLine = 11,
  theCol = 25,
  theOffset = 251),
  theOptionalSource = "ex0606a.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex0606a.ada",
  theAdaMethodAnnotation = 
    @AdaFunctionAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(Obj)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProofFunctionAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      isImplicit = true
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 11,
      theCol = 4,
      theOffset = 231),
      theEndCaret = 
      @Caret(
      theLine = 11,
      theCol = 49,
      theOffset = 275),
      theOptionalSource = "ex0606a.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 11,
      theCol = 4,
      theOffset = 231),
      theEndCaret = 
      @Caret(
      theLine = 11,
      theCol = 49,
      theOffset = 275),
      theOptionalSource = "ex0606a.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 11,
      theCol = 4,
      theOffset = 231),
      theEndCaret = 
      @Caret(
      theLine = 11,
      theCol = 49,
      theOffset = 275),
      theOptionalSource = "ex0606a.ada"
    )
) 
{ #locret. return;}
procedure Standard::Float Area 
      (P::Object Obj @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 14,
  theCol = 18,
  theOffset = 325),
  theEndCaret = 
  @Caret(
  theLine = 14,
  theCol = 21,
  theOffset = 327),
  theOptionalSource = "ex0606a.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex0606a.ada",
  theAdaMethodAnnotation = 
    @AdaFunctionAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(Obj)
    ),
  theOptionalSPARKMethodAnnotation = 
    @NONE,
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 4,
      theOffset = 311),
      theEndCaret = 
      @Caret(
      theLine = 14,
      theCol = 45,
      theOffset = 351),
      theOptionalSource = "ex0606a.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 13,
      theOffset = 320),
      theEndCaret = 
      @Caret(
      theLine = 14,
      theCol = 17,
      theOffset = 323),
      theOptionalSource = "ex0606a.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 4,
      theOffset = 311),
      theEndCaret = 
      @Caret(
      theLine = 14,
      theCol = 44,
      theOffset = 350),
      theOptionalSource = "ex0606a.ada"
    )
) 
{ #locret. return;}
procedure Standard::Float Area 
      (P::Object Obj @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 14,
  theCol = 18,
  theOffset = 325),
  theEndCaret = 
  @Caret(
  theLine = 14,
  theCol = 21,
  theOffset = 327),
  theOptionalSource = "ex0606a.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex0606a.ada",
  theAdaMethodAnnotation = 
    @AdaFunctionAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(Obj)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProofFunctionAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      isImplicit = true
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 4,
      theOffset = 311),
      theEndCaret = 
      @Caret(
      theLine = 14,
      theCol = 45,
      theOffset = 351),
      theOptionalSource = "ex0606a.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 4,
      theOffset = 311),
      theEndCaret = 
      @Caret(
      theLine = 14,
      theCol = 45,
      theOffset = 351),
      theOptionalSource = "ex0606a.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 4,
      theOffset = 311),
      theEndCaret = 
      @Caret(
      theLine = 14,
      theCol = 45,
      theOffset = 351),
      theOptionalSource = "ex0606a.ada"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Q
@PackageAnnotation(
  theSourceFileName = "ex0606a.ada",
  theSparkName = Q,
  thePilarSparkName = Q,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 18,
  theCol = 13,
  theOffset = 385),
  theEndCaret = 
  @Caret(
  theLine = 29,
  theCol = 7,
  theOffset = 644),
  theOptionalSource = "ex0606a.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 19,
  theCol = 1,
  theOffset = 389),
  theEndCaret = 
  @Caret(
  theLine = 19,
  theCol = 10,
  theOffset = 397),
  theOptionalSource = "ex0606a.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @ContextClause(
    theOptionalWithClauses = @List(P),
    theOptionalUseTypeClauses = @NONE
  )  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @List(P)
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Circle
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 20,
      theCol = 4,
      theOffset = 406),
      theEndCaret = 
      @Caret(
      theLine = 23,
      theCol = 18,
      theOffset = 496),
      theOptionalSource = "ex0606a.ada"
    ),
    fullyQualifiedName = Q::Circle,
    typeDefinition = 
      @RecordTypeDefinition(
        tagged = false,
        parentType=P::Object))
{
  Standard::Float x_coord @RecordComponentAnnotation(
    sparkID = X_Coord
  );
  Standard::Float y_coord @RecordComponentAnnotation(
    sparkID = Y_Coord
  );
  Standard::Float radius @RecordComponentAnnotation(
    sparkID = Radius
  );
}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure Init_Circle 
      (Standard::Float X @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 25,
  theCol = 26,
  theOffset = 526),
  theEndCaret = 
  @Caret(
  theLine = 25,
  theCol = 27,
  theOffset = 526),
  theOptionalSource = "ex0606a.ada"
),
       Standard::Float Y @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 25,
  theCol = 29,
  theOffset = 529),
  theEndCaret = 
  @Caret(
  theLine = 25,
  theCol = 30,
  theOffset = 529),
  theOptionalSource = "ex0606a.ada"
),
       Standard::Float R @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 25,
  theCol = 32,
  theOffset = 532),
  theEndCaret = 
  @Caret(
  theLine = 25,
  theCol = 33,
  theOffset = 532),
  theOptionalSource = "ex0606a.ada"
),
       Q::Circle C @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 25,
  theCol = 43,
  theOffset = 543),
  theEndCaret = 
  @Caret(
  theLine = 25,
  theCol = 44,
  theOffset = 543),
  theOptionalSource = "ex0606a.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex0606a.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(X,
            Y,
            R),
      theOptionalOutParameters = @List(C)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @NONE,
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = C,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 26,
                          theCol = 16,
                          theOffset = 576),
                          theEndCaret = 
                          @Caret(
                          theLine = 26,
                          theCol = 17,
                          theOffset = 576),
                          theOptionalSource = "ex0606a.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = X,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 26,
                          theCol = 23,
                          theOffset = 583),
                          theEndCaret = 
                          @Caret(
                          theLine = 26,
                          theCol = 24,
                          theOffset = 583),
                          theOptionalSource = "ex0606a.ada"
                        )
                    ),
                          @AnnotationVariable(
                      id = Y,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 26,
                          theCol = 26,
                          theOffset = 586),
                          theEndCaret = 
                          @Caret(
                          theLine = 26,
                          theCol = 27,
                          theOffset = 586),
                          theOptionalSource = "ex0606a.ada"
                        )
                    ),
                          @AnnotationVariable(
                      id = R,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 26,
                          theCol = 29,
                          theOffset = 589),
                          theEndCaret = 
                          @Caret(
                          theLine = 26,
                          theCol = 30,
                          theOffset = 589),
                          theOptionalSource = "ex0606a.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 26,
                  theCol = 16,
                  theOffset = 576),
                  theEndCaret = 
                  @Caret(
                  theLine = 26,
                  theCol = 30,
                  theOffset = 589),
                  theOptionalSource = "ex0606a.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 26,
              theCol = 8,
              theOffset = 568),
              theEndCaret = 
              @Caret(
              theLine = 26,
              theCol = 31,
              theOffset = 590),
              theOptionalSource = "ex0606a.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 25,
      theCol = 4,
      theOffset = 504),
      theEndCaret = 
      @Caret(
      theLine = 25,
      theCol = 59,
      theOffset = 558),
      theOptionalSource = "ex0606a.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 25,
      theCol = 14,
      theOffset = 514),
      theEndCaret = 
      @Caret(
      theLine = 25,
      theCol = 25,
      theOffset = 524),
      theOptionalSource = "ex0606a.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 25,
      theCol = 4,
      theOffset = 504),
      theEndCaret = 
      @Caret(
      theLine = 25,
      theCol = 58,
      theOffset = 557),
      theOptionalSource = "ex0606a.ada"
    )
) 
{ #locret. return;}
procedure Standard::Float Area 
      (Q::Circle C @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 28,
  theCol = 18,
  theOffset = 612),
  theEndCaret = 
  @Caret(
  theLine = 28,
  theCol = 19,
  theOffset = 612),
  theOptionalSource = "ex0606a.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex0606a.ada",
  theAdaMethodAnnotation = 
    @AdaFunctionAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(C)
    ),
  theOptionalSPARKMethodAnnotation = 
    @NONE,
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 28,
      theCol = 4,
      theOffset = 598),
      theEndCaret = 
      @Caret(
      theLine = 28,
      theCol = 43,
      theOffset = 636),
      theOptionalSource = "ex0606a.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 28,
      theCol = 13,
      theOffset = 607),
      theEndCaret = 
      @Caret(
      theLine = 28,
      theCol = 17,
      theOffset = 610),
      theOptionalSource = "ex0606a.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 28,
      theCol = 4,
      theOffset = 598),
      theEndCaret = 
      @Caret(
      theLine = 28,
      theCol = 42,
      theOffset = 635),
      theOptionalSource = "ex0606a.ada"
    )
) 
{ #locret. return;}
procedure Standard::Float Area 
      (Q::Circle C @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 28,
  theCol = 18,
  theOffset = 612),
  theEndCaret = 
  @Caret(
  theLine = 28,
  theCol = 19,
  theOffset = 612),
  theOptionalSource = "ex0606a.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex0606a.ada",
  theAdaMethodAnnotation = 
    @AdaFunctionAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(C)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProofFunctionAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      isImplicit = true
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 28,
      theCol = 4,
      theOffset = 598),
      theEndCaret = 
      @Caret(
      theLine = 28,
      theCol = 43,
      theOffset = 636),
      theOptionalSource = "ex0606a.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 28,
      theCol = 4,
      theOffset = 598),
      theEndCaret = 
      @Caret(
      theLine = 28,
      theCol = 43,
      theOffset = 636),
      theOptionalSource = "ex0606a.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 28,
      theCol = 4,
      theOffset = 598),
      theEndCaret = 
      @Caret(
      theLine = 28,
      theCol = 43,
      theOffset = 636),
      theOptionalSource = "ex0606a.ada"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Standard
@PackageAnnotation(
  theSourceFileName = "StandardPackage.java",
  theSparkName = Standard,
  thePilarSparkName = Standard,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Natural
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Natural,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 0)))
{}
record Positive
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Positive,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 1)))
{}
record Long_Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Long_Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Float
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Float,
    typeDefinition = 
      @FloatingPointDefinition(
        theDigitsExp = $UNDEFINED (),
        theOptionalLowRangeExp = $NEG_INFTY (),
        theOptionalHighRangeExp = $POS_INFTY ()))
{}
record Boolean
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Boolean,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @List(@EnumerationValue(tag = False),
                @EnumerationValue(tag = True))))
{}
record Character
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Character,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @EmptyList))
{}
record String
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::String,
    typeDefinition = 
      @UnconstrainedArrayDefinition(
        theDimensions = 
          1,
        theComponentSubType = 
          `Standard::Character,
        theIndexSubTypes = 
          @List(`Standard::Positive)
      ))
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/