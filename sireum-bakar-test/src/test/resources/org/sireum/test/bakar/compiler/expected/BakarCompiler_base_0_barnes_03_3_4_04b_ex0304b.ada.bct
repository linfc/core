@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Standard
@PackageAnnotation(
  theSourceFileName = "StandardPackage.java",
  theSparkName = Standard,
  thePilarSparkName = Standard,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Natural
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Natural,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 0)))
{}
record Positive
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Positive,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 1)))
{}
record Long_Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Long_Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Float
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Float,
    typeDefinition = 
      @FloatingPointDefinition(
        theDigitsExp = $UNDEFINED (),
        theOptionalLowRangeExp = $NEG_INFTY (),
        theOptionalHighRangeExp = $POS_INFTY ()))
{}
record Boolean
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Boolean,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @List(@EnumerationValue(tag = False),
                @EnumerationValue(tag = True))))
{}
record Character
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Character,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @EmptyList))
{}
record String
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::String,
    typeDefinition = 
      @UnconstrainedArrayDefinition(
        theDimensions = 
          1,
        theComponentSubType = 
          `Standard::Character,
        theIndexSubTypes = 
          @List(`Standard::Positive)
      ))
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package P
@PackageAnnotation(
  theSourceFileName = "ex0304b.ada",
  theSparkName = P,
  thePilarSparkName = P,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 6,
  theCol = 7,
  theOffset = 149),
  theOptionalSource = "ex0304b.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 1,
  theCol = 10,
  theOffset = 8),
  theOptionalSource = "ex0304b.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure Exchange 
      (Standard::Float X @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 2,
  theCol = 23,
  theOffset = 36),
  theEndCaret = 
  @Caret(
  theLine = 2,
  theCol = 24,
  theOffset = 36),
  theOptionalSource = "ex0304b.ada"
),
       Standard::Float Y @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 2,
  theCol = 26,
  theOffset = 39),
  theEndCaret = 
  @Caret(
  theLine = 2,
  theCol = 27,
  theOffset = 39),
  theOptionalSource = "ex0304b.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex0304b.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(X,
            Y),
      theOptionalOutParameters = @List(X,
          Y)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      theOptionalPostCondition = 
        @ContractPredicate(
          theType = @POST,
          theExp = $AND((X == ($OLD(Y))),(Y == ($OLD(X)))),
          theLoc = @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 5,
          theCol = 8,
          theOffset = 119),
          theEndCaret = 
          @Caret(
          theLine = 5,
          theCol = 31,
          theOffset = 141),
          theOptionalSource = "ex0304b.ada"
        )
        ),
      theOptionalOutGlobals = @NONE,
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = X,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 16,
                          theOffset = 74),
                          theEndCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 17,
                          theOffset = 74),
                          theOptionalSource = "ex0304b.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = Y,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 23,
                          theOffset = 81),
                          theEndCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 24,
                          theOffset = 81),
                          theOptionalSource = "ex0304b.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 3,
                  theCol = 16,
                  theOffset = 74),
                  theEndCaret = 
                  @Caret(
                  theLine = 3,
                  theCol = 24,
                  theOffset = 81),
                  theOptionalSource = "ex0304b.ada"
                )
            )  ,
                  @DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = Y,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 4,
                          theCol = 16,
                          theOffset = 101),
                          theEndCaret = 
                          @Caret(
                          theLine = 4,
                          theCol = 17,
                          theOffset = 101),
                          theOptionalSource = "ex0304b.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = X,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 4,
                          theCol = 23,
                          theOffset = 108),
                          theEndCaret = 
                          @Caret(
                          theLine = 4,
                          theCol = 24,
                          theOffset = 108),
                          theOptionalSource = "ex0304b.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 4,
                  theCol = 16,
                  theOffset = 101),
                  theEndCaret = 
                  @Caret(
                  theLine = 4,
                  theCol = 24,
                  theOffset = 108),
                  theOptionalSource = "ex0304b.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 3,
              theCol = 8,
              theOffset = 66),
              theEndCaret = 
              @Caret(
              theLine = 4,
              theCol = 25,
              theOffset = 109),
              theOptionalSource = "ex0304b.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 2,
      theCol = 4,
      theOffset = 17),
      theEndCaret = 
      @Caret(
      theLine = 2,
      theCol = 44,
      theOffset = 56),
      theOptionalSource = "ex0304b.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 2,
      theCol = 14,
      theOffset = 27),
      theEndCaret = 
      @Caret(
      theLine = 2,
      theCol = 22,
      theOffset = 34),
      theOptionalSource = "ex0304b.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 2,
      theCol = 4,
      theOffset = 17),
      theEndCaret = 
      @Caret(
      theLine = 2,
      theCol = 43,
      theOffset = 55),
      theOptionalSource = "ex0304b.ada"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   B o d yM e t a d a t a
 ****************************************************************/
package P
@PackageAnnotation(
  theSourceFileName = "ex0304b.ada",
  theSparkName = P,
  thePilarSparkName = P,
  theOptionalParent = @NONE,
  thePackageKind = @BODY,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 8,
  theCol = 1,
  theOffset = 154),
  theEndCaret = 
  @Caret(
  theLine = 15,
  theCol = 7,
  theOffset = 312),
  theOptionalSource = "ex0304b.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 8,
  theCol = 1,
  theOffset = 154),
  theEndCaret = 
  @Caret(
  theLine = 8,
  theCol = 15,
  theOffset = 167),
  theOptionalSource = "ex0304b.ada"
),
  thePackageHeaderAnnotation = @PackageBodyHeaderAnnotation(
    theOptionalContextClause = @NONE  ,
  theOptionalRefinementDefinition = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
/****************************************************************
 *  P r o c e d u r e s / F u n c t i o n s
 ****************************************************************/
procedure Exchange 
      (Standard::Float X @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 9,
  theCol = 23,
  theOffset = 195),
  theEndCaret = 
  @Caret(
  theLine = 9,
  theCol = 24,
  theOffset = 195),
  theOptionalSource = "ex0304b.ada"
),
       Standard::Float Y @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 9,
  theCol = 26,
  theOffset = 198),
  theEndCaret = 
  @Caret(
  theLine = 9,
  theCol = 27,
  theOffset = 198),
  theOptionalSource = "ex0304b.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex0304b.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_BODY,
      theOptionalInParameters = @List(X,
            Y),
      theOptionalOutParameters = @List(X,
          Y)
    ),
  theOptionalSPARKMethodAnnotation = 
    @NONE,
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 9,
      theCol = 4,
      theOffset = 176),
      theEndCaret = 
      @Caret(
      theLine = 14,
      theCol = 17,
      theOffset = 304),
      theOptionalSource = "ex0304b.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 9,
      theCol = 14,
      theOffset = 186),
      theEndCaret = 
      @Caret(
      theLine = 9,
      theCol = 22,
      theOffset = 193),
      theOptionalSource = "ex0304b.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 9,
      theCol = 4,
      theOffset = 176),
      theEndCaret = 
      @Caret(
      theLine = 9,
      theCol = 43,
      theOffset = 214),
      theOptionalSource = "ex0304b.ada"
    )
) 
{

  local
    Standard::Float T @LocalVarDeclarationAnnotation(
      theKind = @CONCRETE_VARIABLE,
      theOptionalLoc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 11,
      theCol = 7,
      theOffset = 230),
      theEndCaret = 
      @Caret(
      theLine = 11,
      theCol = 8,
      theOffset = 230),
      theOptionalSource = "ex0304b.ada"
    )
    );
    Standard::Float temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Float temp$2 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Float temp$3 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Float temp$4 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Float temp$5 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l1.  temp$1 := X;
  #l2. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l1,
      endLabel = l2,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 13,
      theCol = 7,
      theOffset = 258),
      theEndCaret = 
      @Caret(
      theLine = 13,
      theCol = 14,
      theOffset = 264),
      theOptionalSource = "ex0304b.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  T := temp$1;
  #l3.  temp$2 := Y;
  #l4. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l3,
      endLabel = l4,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 13,
      theCol = 15,
      theOffset = 266),
      theEndCaret = 
      @Caret(
      theLine = 13,
      theCol = 22,
      theOffset = 272),
      theOptionalSource = "ex0304b.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  X := temp$2;
  #l5.  temp$3 := T;
  #l6.  temp$4 := 1.0;
  #l7.  temp$5 := (temp$3 + temp$4);
  #l8. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l5,
      endLabel = l8,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 13,
      theCol = 23,
      theOffset = 274),
      theEndCaret = 
      @Caret(
      theLine = 13,
      theCol = 36,
      theOffset = 286),
      theOptionalSource = "ex0304b.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  Y := temp$5;
  #l9.  return;
}