@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   B o d yM e t a d a t a
 ****************************************************************/
package SimpleRecordTests
@PackageAnnotation(
  theSourceFileName = "simple_record_tests.adb",
  theSparkName = SimpleRecordTests,
  thePilarSparkName = SimpleRecordTests,
  theOptionalParent = @NONE,
  thePackageKind = @BODY,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 3,
  theCol = 1,
  theOffset = 33),
  theEndCaret = 
  @Caret(
  theLine = 57,
  theCol = 24,
  theOffset = 1651),
  theOptionalSource = "simple_record_tests.adb"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 3,
  theCol = 1,
  theOffset = 33),
  theEndCaret = 
  @Caret(
  theLine = 3,
  theCol = 31,
  theOffset = 62),
  theOptionalSource = "simple_record_tests.adb"
),
  thePackageHeaderAnnotation = @PackageBodyHeaderAnnotation(
    theOptionalContextClause = @NONE  ,
  theOptionalRefinementDefinition = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
/****************************************************************
 *  P r o c e d u r e s / F u n c t i o n s
 ****************************************************************/
procedure Test01 
      (SimpleRecordTests::Object Q @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 8,
  theCol = 21,
  theOffset = 224),
  theEndCaret = 
  @Caret(
  theLine = 8,
  theCol = 22,
  theOffset = 224),
  theOptionalSource = "simple_record_tests.adb"
))
@MethodAnnotation(
  theSourceFileName = "simple_record_tests.adb",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_BODY,
      theOptionalInParameters = @List(Q),
      theOptionalOutParameters = @List(Q)
    ),
  theOptionalSPARKMethodAnnotation = 
    @NONE,
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 4,
      theOffset = 207),
      theEndCaret = 
      @Caret(
      theLine = 15,
      theCol = 15,
      theOffset = 345),
      theOptionalSource = "simple_record_tests.adb"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 14,
      theOffset = 217),
      theEndCaret = 
      @Caret(
      theLine = 8,
      theCol = 20,
      theOffset = 222),
      theOptionalSource = "simple_record_tests.adb"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 4,
      theOffset = 207),
      theEndCaret = 
      @Caret(
      theLine = 8,
      theCol = 39,
      theOffset = 241),
      theOptionalSource = "simple_record_tests.adb"
    )
) 
{

  local
    Standard::Float T @LocalVarDeclarationAnnotation(
      theKind = @CONCRETE_VARIABLE,
      theOptionalLoc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 10,
      theCol = 7,
      theOffset = 257),
      theEndCaret = 
      @Caret(
      theLine = 10,
      theCol = 8,
      theOffset = 257),
      theOptionalSource = "simple_record_tests.adb"
    )
    );
    Standard::Float temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Float temp$2 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Float temp$3 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l1.  temp$1 := Q.x;
  #l2. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l1,
      endLabel = l2,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 12,
      theCol = 7,
      theOffset = 285),
      theEndCaret = 
      @Caret(
      theLine = 12,
      theCol = 16,
      theOffset = 293),
      theOptionalSource = "simple_record_tests.adb"
    )
    ),
      optSparkLabelList = @NONE 
  )>  T := temp$1;
  #l3.  temp$2 := Q.y;
  #l4. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l3,
      endLabel = l4,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 13,
      theCol = 7,
      theOffset = 302),
      theEndCaret = 
      @Caret(
      theLine = 13,
      theCol = 18,
      theOffset = 312),
      theOptionalSource = "simple_record_tests.adb"
    )
    ),
      optSparkLabelList = @NONE 
  )>  Q.x := temp$2;
  #l5.  temp$3 := T;
  #l6. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l5,
      endLabel = l6,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 7,
      theOffset = 321),
      theEndCaret = 
      @Caret(
      theLine = 14,
      theCol = 16,
      theOffset = 329),
      theOptionalSource = "simple_record_tests.adb"
    )
    ),
      optSparkLabelList = @NONE 
  )>  Q.y := temp$3;
  #l7.  return;
}
procedure Test02 
      (Standard::Float I1 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 24,
  theCol = 19,
  theOffset = 723),
  theEndCaret = 
  @Caret(
  theLine = 24,
  theCol = 21,
  theOffset = 724),
  theOptionalSource = "simple_record_tests.adb"
),
       Standard::Float I2 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 24,
  theCol = 23,
  theOffset = 727),
  theEndCaret = 
  @Caret(
  theLine = 24,
  theCol = 25,
  theOffset = 728),
  theOptionalSource = "simple_record_tests.adb"
),
       Standard::Float O1 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 24,
  theCol = 38,
  theOffset = 742),
  theEndCaret = 
  @Caret(
  theLine = 24,
  theCol = 40,
  theOffset = 743),
  theOptionalSource = "simple_record_tests.adb"
),
       Standard::Float O2 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 24,
  theCol = 42,
  theOffset = 746),
  theEndCaret = 
  @Caret(
  theLine = 24,
  theCol = 44,
  theOffset = 747),
  theOptionalSource = "simple_record_tests.adb"
))
@MethodAnnotation(
  theSourceFileName = "simple_record_tests.adb",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_BODY,
      theOptionalInParameters = @List(I1,
            I2),
      theOptionalOutParameters = @List(O1,
          O2)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @NONE,
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = O1,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 25,
                          theCol = 18,
                          theOffset = 780),
                          theEndCaret = 
                          @Caret(
                          theLine = 25,
                          theCol = 20,
                          theOffset = 781),
                          theOptionalSource = "simple_record_tests.adb"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = I1,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 25,
                          theCol = 26,
                          theOffset = 788),
                          theEndCaret = 
                          @Caret(
                          theLine = 25,
                          theCol = 28,
                          theOffset = 789),
                          theOptionalSource = "simple_record_tests.adb"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 25,
                  theCol = 18,
                  theOffset = 780),
                  theEndCaret = 
                  @Caret(
                  theLine = 25,
                  theCol = 28,
                  theOffset = 789),
                  theOptionalSource = "simple_record_tests.adb"
                )
            )  ,
                  @DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = O2,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 26,
                          theCol = 18,
                          theOffset = 809),
                          theEndCaret = 
                          @Caret(
                          theLine = 26,
                          theCol = 20,
                          theOffset = 810),
                          theOptionalSource = "simple_record_tests.adb"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = I2,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 26,
                          theCol = 26,
                          theOffset = 817),
                          theEndCaret = 
                          @Caret(
                          theLine = 26,
                          theCol = 28,
                          theOffset = 818),
                          theOptionalSource = "simple_record_tests.adb"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 26,
                  theCol = 18,
                  theOffset = 809),
                  theEndCaret = 
                  @Caret(
                  theLine = 26,
                  theCol = 28,
                  theOffset = 818),
                  theOptionalSource = "simple_record_tests.adb"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 25,
              theCol = 10,
              theOffset = 772),
              theEndCaret = 
              @Caret(
              theLine = 26,
              theCol = 29,
              theOffset = 819),
              theOptionalSource = "simple_record_tests.adb"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 24,
      theCol = 2,
      theOffset = 706),
      theEndCaret = 
      @Caret(
      theLine = 34,
      theCol = 15,
      theOffset = 943),
      theOptionalSource = "simple_record_tests.adb"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 24,
      theCol = 12,
      theOffset = 716),
      theEndCaret = 
      @Caret(
      theLine = 24,
      theCol = 18,
      theOffset = 721),
      theOptionalSource = "simple_record_tests.adb"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 24,
      theCol = 2,
      theOffset = 706),
      theEndCaret = 
      @Caret(
      theLine = 24,
      theCol = 57,
      theOffset = 760),
      theOptionalSource = "simple_record_tests.adb"
    )
) 
{

  local
    SimpleRecordTests::Object Q @LocalVarDeclarationAnnotation(
      theKind = @CONCRETE_VARIABLE,
      theOptionalLoc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 28,
      theCol = 7,
      theOffset = 835),
      theEndCaret = 
      @Caret(
      theLine = 28,
      theCol = 8,
      theOffset = 835),
      theOptionalSource = "simple_record_tests.adb"
    )
    );
    Standard::Float temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Float temp$2 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Float temp$3 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Float temp$4 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l8.  temp$1 := I1;
  #l9. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l8,
      endLabel = l9,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 30,
      theCol = 7,
      theOffset = 864),
      theEndCaret = 
      @Caret(
      theLine = 30,
      theCol = 17,
      theOffset = 873),
      theOptionalSource = "simple_record_tests.adb"
    )
    ),
      optSparkLabelList = @NONE 
  )>  Q.x := temp$1;
  #l10.  temp$2 := I2;
  #l11. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l10,
      endLabel = l11,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 31,
      theCol = 7,
      theOffset = 882),
      theEndCaret = 
      @Caret(
      theLine = 31,
      theCol = 17,
      theOffset = 891),
      theOptionalSource = "simple_record_tests.adb"
    )
    ),
      optSparkLabelList = @NONE 
  )>  Q.y := temp$2;
  #l12.  temp$3 := Q.x;
  #l13. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l12,
      endLabel = l13,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 32,
      theCol = 7,
      theOffset = 900),
      theEndCaret = 
      @Caret(
      theLine = 32,
      theCol = 17,
      theOffset = 909),
      theOptionalSource = "simple_record_tests.adb"
    )
    ),
      optSparkLabelList = @NONE 
  )>  O1 := temp$3;
  #l14.  temp$4 := Q.y;
  #l15. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l14,
      endLabel = l15,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 33,
      theCol = 7,
      theOffset = 918),
      theEndCaret = 
      @Caret(
      theLine = 33,
      theCol = 17,
      theOffset = 927),
      theOptionalSource = "simple_record_tests.adb"
    )
    ),
      optSparkLabelList = @NONE 
  )>  O2 := temp$4;
  #l16.  return;
}
procedure Test03 
      (Standard::Float I1 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 45,
  theCol = 19,
  theOffset = 1390),
  theEndCaret = 
  @Caret(
  theLine = 45,
  theCol = 21,
  theOffset = 1391),
  theOptionalSource = "simple_record_tests.adb"
),
       Standard::Float I2 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 45,
  theCol = 23,
  theOffset = 1394),
  theEndCaret = 
  @Caret(
  theLine = 45,
  theCol = 25,
  theOffset = 1395),
  theOptionalSource = "simple_record_tests.adb"
),
       Standard::Float O1 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 45,
  theCol = 38,
  theOffset = 1409),
  theEndCaret = 
  @Caret(
  theLine = 45,
  theCol = 40,
  theOffset = 1410),
  theOptionalSource = "simple_record_tests.adb"
),
       Standard::Float O2 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 45,
  theCol = 42,
  theOffset = 1413),
  theEndCaret = 
  @Caret(
  theLine = 45,
  theCol = 44,
  theOffset = 1414),
  theOptionalSource = "simple_record_tests.adb"
))
@MethodAnnotation(
  theSourceFileName = "simple_record_tests.adb",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_BODY,
      theOptionalInParameters = @List(I1,
            I2),
      theOptionalOutParameters = @List(O1,
          O2)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @NONE,
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = O1,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 46,
                          theCol = 18,
                          theOffset = 1447),
                          theEndCaret = 
                          @Caret(
                          theLine = 46,
                          theCol = 20,
                          theOffset = 1448),
                          theOptionalSource = "simple_record_tests.adb"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = I1,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 46,
                          theCol = 26,
                          theOffset = 1455),
                          theEndCaret = 
                          @Caret(
                          theLine = 46,
                          theCol = 28,
                          theOffset = 1456),
                          theOptionalSource = "simple_record_tests.adb"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 46,
                  theCol = 18,
                  theOffset = 1447),
                  theEndCaret = 
                  @Caret(
                  theLine = 46,
                  theCol = 28,
                  theOffset = 1456),
                  theOptionalSource = "simple_record_tests.adb"
                )
            )  ,
                  @DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = O2,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 47,
                          theCol = 18,
                          theOffset = 1476),
                          theEndCaret = 
                          @Caret(
                          theLine = 47,
                          theCol = 20,
                          theOffset = 1477),
                          theOptionalSource = "simple_record_tests.adb"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = I2,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 47,
                          theCol = 26,
                          theOffset = 1484),
                          theEndCaret = 
                          @Caret(
                          theLine = 47,
                          theCol = 28,
                          theOffset = 1485),
                          theOptionalSource = "simple_record_tests.adb"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 47,
                  theCol = 18,
                  theOffset = 1476),
                  theEndCaret = 
                  @Caret(
                  theLine = 47,
                  theCol = 28,
                  theOffset = 1485),
                  theOptionalSource = "simple_record_tests.adb"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 46,
              theCol = 10,
              theOffset = 1439),
              theEndCaret = 
              @Caret(
              theLine = 47,
              theCol = 29,
              theOffset = 1486),
              theOptionalSource = "simple_record_tests.adb"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 45,
      theCol = 2,
      theOffset = 1373),
      theEndCaret = 
      @Caret(
      theLine = 55,
      theCol = 15,
      theOffset = 1624),
      theOptionalSource = "simple_record_tests.adb"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 45,
      theCol = 12,
      theOffset = 1383),
      theEndCaret = 
      @Caret(
      theLine = 45,
      theCol = 18,
      theOffset = 1388),
      theOptionalSource = "simple_record_tests.adb"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 45,
      theCol = 2,
      theOffset = 1373),
      theEndCaret = 
      @Caret(
      theLine = 45,
      theCol = 57,
      theOffset = 1427),
      theOptionalSource = "simple_record_tests.adb"
    )
) 
{

  local
    SimpleRecordTests::NestedObject Q @LocalVarDeclarationAnnotation(
      theKind = @CONCRETE_VARIABLE,
      theOptionalLoc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 49,
      theCol = 7,
      theOffset = 1502),
      theEndCaret = 
      @Caret(
      theLine = 49,
      theCol = 8,
      theOffset = 1502),
      theOptionalSource = "simple_record_tests.adb"
    )
    );
    Standard::Float temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Float temp$2 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Float temp$3 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Float temp$4 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l17.  temp$1 := I1;
  #l18. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l17,
      endLabel = l18,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 51,
      theCol = 7,
      theOffset = 1537),
      theEndCaret = 
      @Caret(
      theLine = 51,
      theCol = 19,
      theOffset = 1548),
      theOptionalSource = "simple_record_tests.adb"
    )
    ),
      optSparkLabelList = @NONE 
  )>  Q.o.x := temp$1;
  #l19.  temp$2 := I2;
  #l20. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l19,
      endLabel = l20,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 52,
      theCol = 7,
      theOffset = 1557),
      theEndCaret = 
      @Caret(
      theLine = 52,
      theCol = 19,
      theOffset = 1568),
      theOptionalSource = "simple_record_tests.adb"
    )
    ),
      optSparkLabelList = @NONE 
  )>  Q.o.y := temp$2;
  #l21.  temp$3 := Q.o.x;
  #l22. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l21,
      endLabel = l22,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 53,
      theCol = 7,
      theOffset = 1577),
      theEndCaret = 
      @Caret(
      theLine = 53,
      theCol = 19,
      theOffset = 1588),
      theOptionalSource = "simple_record_tests.adb"
    )
    ),
      optSparkLabelList = @NONE 
  )>  O1 := temp$3;
  #l23.  temp$4 := Q.o.y;
  #l24. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l23,
      endLabel = l24,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 54,
      theCol = 7,
      theOffset = 1597),
      theEndCaret = 
      @Caret(
      theLine = 54,
      theCol = 19,
      theOffset = 1608),
      theOptionalSource = "simple_record_tests.adb"
    )
    ),
      optSparkLabelList = @NONE 
  )>  O2 := temp$4;
  #l25.  return;
}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package SimpleRecordTests
@PackageAnnotation(
  theSourceFileName = "simple_record_tests.ads",
  theSparkName = SimpleRecordTests,
  thePilarSparkName = SimpleRecordTests,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 16,
  theCol = 23,
  theOffset = 259),
  theOptionalSource = "simple_record_tests.ads"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 1,
  theCol = 26,
  theOffset = 24),
  theOptionalSource = "simple_record_tests.ads"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Object
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 3,
      theCol = 1,
      theOffset = 30),
      theEndCaret = 
      @Caret(
      theLine = 6,
      theCol = 18,
      theOffset = 97),
      theOptionalSource = "simple_record_tests.ads"
    ),
    fullyQualifiedName = SimpleRecordTests::Object,
    typeDefinition = 
      @RecordTypeDefinition(
        tagged = false,
        parentType=@NONE))
{
  Standard::Float x @RecordComponentAnnotation(
    sparkID = X
  );
  Standard::Float y @RecordComponentAnnotation(
    sparkID = Y
  );
}
record NestedObject
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 1,
      theOffset = 100),
      theEndCaret = 
      @Caret(
      theLine = 11,
      theCol = 18,
      theOffset = 171),
      theOptionalSource = "simple_record_tests.ads"
    ),
    fullyQualifiedName = SimpleRecordTests::NestedObject,
    typeDefinition = 
      @RecordTypeDefinition(
        tagged = false,
        parentType=@NONE))
{
  SimpleRecordTests::Object o @RecordComponentAnnotation(
    sparkID = O
  );
}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure Test01 
      (SimpleRecordTests::Object Q @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 14,
  theCol = 18,
  theOffset = 192),
  theEndCaret = 
  @Caret(
  theLine = 14,
  theCol = 19,
  theOffset = 192),
  theOptionalSource = "simple_record_tests.ads"
))
@MethodAnnotation(
  theSourceFileName = "simple_record_tests.ads",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(Q),
      theOptionalOutParameters = @List(Q)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @NONE,
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = Q,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 15,
                          theCol = 16,
                          theOffset = 227),
                          theEndCaret = 
                          @Caret(
                          theLine = 15,
                          theCol = 17,
                          theOffset = 227),
                          theOptionalSource = "simple_record_tests.ads"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = Q,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 15,
                          theCol = 23,
                          theOffset = 234),
                          theEndCaret = 
                          @Caret(
                          theLine = 15,
                          theCol = 24,
                          theOffset = 234),
                          theOptionalSource = "simple_record_tests.ads"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 15,
                  theCol = 16,
                  theOffset = 227),
                  theEndCaret = 
                  @Caret(
                  theLine = 15,
                  theCol = 24,
                  theOffset = 234),
                  theOptionalSource = "simple_record_tests.ads"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 15,
              theCol = 8,
              theOffset = 219),
              theEndCaret = 
              @Caret(
              theLine = 15,
              theCol = 26,
              theOffset = 236),
              theOptionalSource = "simple_record_tests.ads"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 1,
      theOffset = 175),
      theEndCaret = 
      @Caret(
      theLine = 14,
      theCol = 37,
      theOffset = 210),
      theOptionalSource = "simple_record_tests.ads"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 11,
      theOffset = 185),
      theEndCaret = 
      @Caret(
      theLine = 14,
      theCol = 17,
      theOffset = 190),
      theOptionalSource = "simple_record_tests.ads"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 1,
      theOffset = 175),
      theEndCaret = 
      @Caret(
      theLine = 14,
      theCol = 36,
      theOffset = 209),
      theOptionalSource = "simple_record_tests.ads"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Standard
@PackageAnnotation(
  theSourceFileName = "StandardPackage.java",
  theSparkName = Standard,
  thePilarSparkName = Standard,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Natural
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Natural,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 0)))
{}
record Positive
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Positive,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 1)))
{}
record Long_Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Long_Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Float
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Float,
    typeDefinition = 
      @FloatingPointDefinition(
        theDigitsExp = $UNDEFINED (),
        theOptionalLowRangeExp = $NEG_INFTY (),
        theOptionalHighRangeExp = $POS_INFTY ()))
{}
record Boolean
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Boolean,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @List(@EnumerationValue(tag = False),
                @EnumerationValue(tag = True))))
{}
record Character
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Character,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @EmptyList))
{}
record String
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::String,
    typeDefinition = 
      @UnconstrainedArrayDefinition(
        theDimensions = 
          1,
        theComponentSubType = 
          `Standard::Character,
        theIndexSubTypes = 
          @List(`Standard::Positive)
      ))
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/