@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package P
@PackageAnnotation(
  theSourceFileName = "ex0306c.ada",
  theSparkName = P,
  thePilarSparkName = P,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 5,
  theCol = 7,
  theOffset = 104),
  theOptionalSource = "ex0306c.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 1,
  theCol = 10,
  theOffset = 8),
  theOptionalSource = "ex0306c.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure GCD 
      (Standard::Integer M @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 2,
  theCol = 18,
  theOffset = 31),
  theEndCaret = 
  @Caret(
  theLine = 2,
  theCol = 19,
  theOffset = 31),
  theOptionalSource = "ex0306c.ada"
),
       Standard::Integer N @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 2,
  theCol = 21,
  theOffset = 34),
  theEndCaret = 
  @Caret(
  theLine = 2,
  theCol = 22,
  theOffset = 34),
  theOptionalSource = "ex0306c.ada"
),
       Standard::Integer G @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 2,
  theCol = 37,
  theOffset = 50),
  theEndCaret = 
  @Caret(
  theLine = 2,
  theCol = 38,
  theOffset = 50),
  theOptionalSource = "ex0306c.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex0306c.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(M,
            N),
      theOptionalOutParameters = @List(G)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @NONE,
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = G,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 16,
                          theOffset = 84),
                          theEndCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 17,
                          theOffset = 84),
                          theOptionalSource = "ex0306c.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = M,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 23,
                          theOffset = 91),
                          theEndCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 24,
                          theOffset = 91),
                          theOptionalSource = "ex0306c.ada"
                        )
                    ),
                          @AnnotationVariable(
                      id = N,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 25,
                          theOffset = 93),
                          theEndCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 26,
                          theOffset = 93),
                          theOptionalSource = "ex0306c.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 3,
                  theCol = 16,
                  theOffset = 84),
                  theEndCaret = 
                  @Caret(
                  theLine = 3,
                  theCol = 26,
                  theOffset = 93),
                  theOptionalSource = "ex0306c.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 3,
              theCol = 8,
              theOffset = 76),
              theEndCaret = 
              @Caret(
              theLine = 3,
              theCol = 27,
              theOffset = 94),
              theOptionalSource = "ex0306c.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 2,
      theCol = 4,
      theOffset = 17),
      theEndCaret = 
      @Caret(
      theLine = 2,
      theCol = 54,
      theOffset = 66),
      theOptionalSource = "ex0306c.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 2,
      theCol = 14,
      theOffset = 27),
      theEndCaret = 
      @Caret(
      theLine = 2,
      theCol = 17,
      theOffset = 29),
      theOptionalSource = "ex0306c.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 2,
      theCol = 4,
      theOffset = 17),
      theEndCaret = 
      @Caret(
      theLine = 2,
      theCol = 53,
      theOffset = 65),
      theOptionalSource = "ex0306c.ada"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   B o d yM e t a d a t a
 ****************************************************************/
package P
@PackageAnnotation(
  theSourceFileName = "ex0306c.ada",
  theSparkName = P,
  thePilarSparkName = P,
  theOptionalParent = @NONE,
  thePackageKind = @BODY,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 7,
  theCol = 1,
  theOffset = 109),
  theEndCaret = 
  @Caret(
  theLine = 20,
  theCol = 7,
  theOffset = 388),
  theOptionalSource = "ex0306c.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 7,
  theCol = 1,
  theOffset = 109),
  theEndCaret = 
  @Caret(
  theLine = 7,
  theCol = 15,
  theOffset = 122),
  theOptionalSource = "ex0306c.ada"
),
  thePackageHeaderAnnotation = @PackageBodyHeaderAnnotation(
    theOptionalContextClause = @NONE  ,
  theOptionalRefinementDefinition = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
/****************************************************************
 *  P r o c e d u r e s / F u n c t i o n s
 ****************************************************************/
procedure GCD 
      (Standard::Integer M @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 8,
  theCol = 18,
  theOffset = 145),
  theEndCaret = 
  @Caret(
  theLine = 8,
  theCol = 19,
  theOffset = 145),
  theOptionalSource = "ex0306c.ada"
),
       Standard::Integer N @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 8,
  theCol = 21,
  theOffset = 148),
  theEndCaret = 
  @Caret(
  theLine = 8,
  theCol = 22,
  theOffset = 148),
  theOptionalSource = "ex0306c.ada"
),
       Standard::Integer G @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 8,
  theCol = 37,
  theOffset = 164),
  theEndCaret = 
  @Caret(
  theLine = 8,
  theCol = 38,
  theOffset = 164),
  theOptionalSource = "ex0306c.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex0306c.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_BODY,
      theOptionalInParameters = @List(M,
            N),
      theOptionalOutParameters = @List(G)
    ),
  theOptionalSPARKMethodAnnotation = 
    @NONE,
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 4,
      theOffset = 131),
      theEndCaret = 
      @Caret(
      theLine = 19,
      theCol = 12,
      theOffset = 380),
      theOptionalSource = "ex0306c.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 14,
      theOffset = 141),
      theEndCaret = 
      @Caret(
      theLine = 8,
      theCol = 17,
      theOffset = 143),
      theOptionalSource = "ex0306c.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 4,
      theOffset = 131),
      theEndCaret = 
      @Caret(
      theLine = 8,
      theCol = 53,
      theOffset = 179),
      theOptionalSource = "ex0306c.ada"
    )
) 
{

  local
    Standard::Integer C @LocalVarDeclarationAnnotation(
      theKind = @CONCRETE_VARIABLE,
      theOptionalLoc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 10,
      theCol = 6,
      theOffset = 194),
      theEndCaret = 
      @Caret(
      theLine = 10,
      theCol = 7,
      theOffset = 194),
      theOptionalSource = "ex0306c.ada"
    )
    );
    Standard::Integer D @LocalVarDeclarationAnnotation(
      theKind = @CONCRETE_VARIABLE,
      theOptionalLoc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 10,
      theCol = 9,
      theOffset = 197),
      theEndCaret = 
      @Caret(
      theLine = 10,
      theCol = 10,
      theOffset = 197),
      theOptionalSource = "ex0306c.ada"
    )
    );
    Standard::Integer R @LocalVarDeclarationAnnotation(
      theKind = @CONCRETE_VARIABLE,
      theOptionalLoc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 11,
      theCol = 6,
      theOffset = 216),
      theEndCaret = 
      @Caret(
      theLine = 11,
      theCol = 7,
      theOffset = 216),
      theOptionalSource = "ex0306c.ada"
    )
    );
    Standard::Integer temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$2 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$3 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$4 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Boolean temp$5 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$6 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$7 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$8 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$9 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$10 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$11 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l1.  temp$1 := M;
  #l2. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l1,
      endLabel = l2,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 13,
      theCol = 7,
      theOffset = 246),
      theEndCaret = 
      @Caret(
      theLine = 13,
      theCol = 14,
      theOffset = 252),
      theOptionalSource = "ex0306c.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  C := temp$1;
  #l3.  temp$2 := N;
  #l4. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l3,
      endLabel = l4,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 13,
      theCol = 15,
      theOffset = 254),
      theEndCaret = 
      @Caret(
      theLine = 13,
      theCol = 22,
      theOffset = 260),
      theOptionalSource = "ex0306c.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  D := temp$2;
  #l5. 
  #l6.  temp$3 := D;
  #l7.  temp$4 := 0;
  #l8.  temp$5 := (temp$3 != temp$4);
  #l10.  if !temp$5 then goto l9;
  #l11.  temp$6 := C;
  #l12.  temp$7 := D;
  #l13.  temp$8 := $REM(temp$6,temp$7);
  #l14. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l11,
      endLabel = l14,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 15,
      theCol = 10,
      theOffset = 297),
      theEndCaret = 
      @Caret(
      theLine = 15,
      theCol = 23,
      theOffset = 309),
      theOptionalSource = "ex0306c.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  R := temp$8;
  #l15.  temp$9 := D;
  #l16. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l15,
      endLabel = l16,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 16,
      theCol = 10,
      theOffset = 321),
      theEndCaret = 
      @Caret(
      theLine = 16,
      theCol = 17,
      theOffset = 327),
      theOptionalSource = "ex0306c.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  C := temp$9;
  #l17.  temp$10 := R;
  #l18. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l17,
      endLabel = l18,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 16,
      theCol = 18,
      theOffset = 329),
      theEndCaret = 
      @Caret(
      theLine = 16,
      theCol = 25,
      theOffset = 335),
      theOptionalSource = "ex0306c.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  D := temp$10;
  #l19.  goto l5;
  #l9. <@WhileLoopStatementAnnotation(
    condPart = @Mark(
    startLabel = l6,
    endLabel = l10,
    optRS = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 14,
    theCol = 7,
    theOffset = 269),
    theEndCaret = 
    @Caret(
    theLine = 14,
    theCol = 24,
    theOffset = 285),
    theOptionalSource = "ex0306c.ada"
  )
  ),
      optLoopId = @NONE,
      body = @MARK_PLACEHOLDER,
        mark = @Mark(
        startLabel = l5,
        endLabel = l9,
        optRS = @RegionSelection(
        theStartCaret = 
        @Caret(
        theLine = 14,
        theCol = 7,
        theOffset = 269),
        theEndCaret = 
        @Caret(
        theLine = 17,
        theCol = 16,
        theOffset = 352),
        theOptionalSource = "ex0306c.ada"
      )
      ),
        optSparkLabelList = @NONE  
  )> 
  #l20.  temp$11 := C;
  #l21. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l20,
      endLabel = l21,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 18,
      theCol = 7,
      theOffset = 361),
      theEndCaret = 
      @Caret(
      theLine = 18,
      theCol = 14,
      theOffset = 367),
      theOptionalSource = "ex0306c.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  G := temp$11;
  #l22.  return;
}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Standard
@PackageAnnotation(
  theSourceFileName = "StandardPackage.java",
  theSparkName = Standard,
  thePilarSparkName = Standard,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Natural
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Natural,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 0)))
{}
record Positive
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Positive,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 1)))
{}
record Long_Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Long_Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Float
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Float,
    typeDefinition = 
      @FloatingPointDefinition(
        theDigitsExp = $UNDEFINED (),
        theOptionalLowRangeExp = $NEG_INFTY (),
        theOptionalHighRangeExp = $POS_INFTY ()))
{}
record Boolean
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Boolean,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @List(@EnumerationValue(tag = False),
                @EnumerationValue(tag = True))))
{}
record Character
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Character,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @EmptyList))
{}
record String
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::String,
    typeDefinition = 
      @UnconstrainedArrayDefinition(
        theDimensions = 
          1,
        theComponentSubType = 
          `Standard::Character,
        theIndexSubTypes = 
          @List(`Standard::Positive)
      ))
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/