@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Standard
@PackageAnnotation(
  theSourceFileName = "StandardPackage.java",
  theSparkName = Standard,
  thePilarSparkName = Standard,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Natural
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Natural,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 0)))
{}
record Positive
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Positive,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 1)))
{}
record Long_Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Long_Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Float
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Float,
    typeDefinition = 
      @FloatingPointDefinition(
        theDigitsExp = $UNDEFINED (),
        theOptionalLowRangeExp = $NEG_INFTY (),
        theOptionalHighRangeExp = $POS_INFTY ()))
{}
record Boolean
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Boolean,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @List(@EnumerationValue(tag = False),
                @EnumerationValue(tag = True))))
{}
record Character
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Character,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @EmptyList))
{}
record String
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::String,
    typeDefinition = 
      @UnconstrainedArrayDefinition(
        theDimensions = 
          1,
        theComponentSubType = 
          `Standard::Character,
        theIndexSubTypes = 
          @List(`Standard::Positive)
      ))
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   B o d yM e t a d a t a
 ****************************************************************/
package Test_Case_10
@PackageAnnotation(
  theSourceFileName = "test_case_10.adb",
  theSparkName = Test_Case_10,
  thePilarSparkName = Test_Case_10,
  theOptionalParent = @NONE,
  thePackageKind = @BODY,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 25,
  theCol = 18,
  theOffset = 519),
  theOptionalSource = "test_case_10.adb"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 1,
  theCol = 26,
  theOffset = 24),
  theOptionalSource = "test_case_10.adb"
),
  thePackageHeaderAnnotation = @PackageBodyHeaderAnnotation(
    theOptionalContextClause = @NONE  ,
  theOptionalRefinementDefinition = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
/****************************************************************
 *  P r o c e d u r e s / F u n c t i o n s
 ****************************************************************/
procedure P1 
      (Standard::Integer I1 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 3,
  theCol = 19,
  theOffset = 52),
  theEndCaret = 
  @Caret(
  theLine = 3,
  theCol = 21,
  theOffset = 53),
  theOptionalSource = "test_case_10.adb"
),
       Standard::Integer I2 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 3,
  theCol = 23,
  theOffset = 56),
  theEndCaret = 
  @Caret(
  theLine = 3,
  theCol = 25,
  theOffset = 57),
  theOptionalSource = "test_case_10.adb"
),
       Standard::Integer I3 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 3,
  theCol = 27,
  theOffset = 60),
  theEndCaret = 
  @Caret(
  theLine = 3,
  theCol = 29,
  theOffset = 61),
  theOptionalSource = "test_case_10.adb"
),
       Standard::Integer O1 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 3,
  theCol = 44,
  theOffset = 77),
  theEndCaret = 
  @Caret(
  theLine = 3,
  theCol = 46,
  theOffset = 78),
  theOptionalSource = "test_case_10.adb"
),
       Standard::Integer O2 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 3,
  theCol = 48,
  theOffset = 81),
  theEndCaret = 
  @Caret(
  theLine = 3,
  theCol = 50,
  theOffset = 82),
  theOptionalSource = "test_case_10.adb"
))
@MethodAnnotation(
  theSourceFileName = "test_case_10.adb",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_BODY,
      theOptionalInParameters = @List(I1,
            I2,
            I3),
      theOptionalOutParameters = @List(O1,
          O2)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @NONE,
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = O1,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 4,
                          theCol = 17,
                          theOffset = 115),
                          theEndCaret = 
                          @Caret(
                          theLine = 4,
                          theCol = 19,
                          theOffset = 116),
                          theOptionalSource = "test_case_10.adb"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = I1,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 4,
                          theCol = 25,
                          theOffset = 123),
                          theEndCaret = 
                          @Caret(
                          theLine = 4,
                          theCol = 27,
                          theOffset = 124),
                          theOptionalSource = "test_case_10.adb"
                        )
                    ),
                          @AnnotationVariable(
                      id = I2,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 4,
                          theCol = 29,
                          theOffset = 127),
                          theEndCaret = 
                          @Caret(
                          theLine = 4,
                          theCol = 31,
                          theOffset = 128),
                          theOptionalSource = "test_case_10.adb"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 4,
                  theCol = 17,
                  theOffset = 115),
                  theEndCaret = 
                  @Caret(
                  theLine = 4,
                  theCol = 31,
                  theOffset = 128),
                  theOptionalSource = "test_case_10.adb"
                )
            )  ,
                  @DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = O2,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 5,
                          theCol = 11,
                          theOffset = 140),
                          theEndCaret = 
                          @Caret(
                          theLine = 5,
                          theCol = 13,
                          theOffset = 141),
                          theOptionalSource = "test_case_10.adb"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = I3,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 5,
                          theCol = 19,
                          theOffset = 148),
                          theEndCaret = 
                          @Caret(
                          theLine = 5,
                          theCol = 21,
                          theOffset = 149),
                          theOptionalSource = "test_case_10.adb"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 5,
                  theCol = 11,
                  theOffset = 140),
                  theEndCaret = 
                  @Caret(
                  theLine = 5,
                  theCol = 21,
                  theOffset = 149),
                  theOptionalSource = "test_case_10.adb"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 4,
              theCol = 9,
              theOffset = 107),
              theEndCaret = 
              @Caret(
              theLine = 5,
              theCol = 22,
              theOffset = 150),
              theOptionalSource = "test_case_10.adb"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 3,
      theCol = 5,
      theOffset = 38),
      theEndCaret = 
      @Caret(
      theLine = 24,
      theCol = 12,
      theOffset = 501),
      theOptionalSource = "test_case_10.adb"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 3,
      theCol = 15,
      theOffset = 48),
      theEndCaret = 
      @Caret(
      theLine = 3,
      theCol = 17,
      theOffset = 49),
      theOptionalSource = "test_case_10.adb"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 3,
      theCol = 5,
      theOffset = 38),
      theEndCaret = 
      @Caret(
      theLine = 3,
      theCol = 65,
      theOffset = 97),
      theOptionalSource = "test_case_10.adb"
    )
) 
{

  local
    Standard::Integer L1 @LocalVarDeclarationAnnotation(
      theKind = @CONCRETE_VARIABLE,
      theOptionalLoc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 7,
      theCol = 9,
      theOffset = 167),
      theEndCaret = 
      @Caret(
      theLine = 7,
      theCol = 11,
      theOffset = 168),
      theOptionalSource = "test_case_10.adb"
    )
    );
    Standard::Integer L2 @LocalVarDeclarationAnnotation(
      theKind = @CONCRETE_VARIABLE,
      theOptionalLoc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 7,
      theCol = 13,
      theOffset = 171),
      theEndCaret = 
      @Caret(
      theLine = 7,
      theCol = 15,
      theOffset = 172),
      theOptionalSource = "test_case_10.adb"
    )
    );
    Standard::Integer temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$2 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$3 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$4 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$5 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$6 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$7 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$8 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$9 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Boolean temp$10 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$11 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$12 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Boolean temp$13 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$14 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$15 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$16 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l1.  temp$1 := 5;
  #l2. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l1,
      endLabel = l2,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 9,
      theCol = 9,
      theOffset = 203),
      theEndCaret = 
      @Caret(
      theLine = 9,
      theCol = 17,
      theOffset = 210),
      theOptionalSource = "test_case_10.adb"
    )
    ),
      optSparkLabelList = @NONE 
  )>  L2 := temp$1;
  #l3.  temp$2 := I3;
  #l4. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l3,
      endLabel = l4,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 10,
      theCol = 9,
      theOffset = 220),
      theEndCaret = 
      @Caret(
      theLine = 10,
      theCol = 18,
      theOffset = 228),
      theOptionalSource = "test_case_10.adb"
    )
    ),
      optSparkLabelList = @NONE 
  )>  L1 := temp$2;
  #l5.  temp$3 := L1;
  #l6. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l5,
      endLabel = l6,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 11,
      theCol = 9,
      theOffset = 238),
      theEndCaret = 
      @Caret(
      theLine = 11,
      theCol = 18,
      theOffset = 246),
      theOptionalSource = "test_case_10.adb"
    )
    ),
      optSparkLabelList = @NONE 
  )>  O2 := temp$3;
  #l7.  temp$4 := I2;
  #l8. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l7,
      endLabel = l8,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 12,
      theCol = 9,
      theOffset = 256),
      theEndCaret = 
      @Caret(
      theLine = 12,
      theCol = 18,
      theOffset = 264),
      theOptionalSource = "test_case_10.adb"
    )
    ),
      optSparkLabelList = @NONE 
  )>  L1 := temp$4;
  #l9.  temp$5 := I1;
  #l10.  temp$6 := I2;
  #l11.  temp$7 := (temp$5 + temp$6);
  #l12. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l9,
      endLabel = l12,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 13,
      theCol = 9,
      theOffset = 285),
      theEndCaret = 
      @Caret(
      theLine = 13,
      theCol = 23,
      theOffset = 298),
      theOptionalSource = "test_case_10.adb"
    )
    ),
      optSparkLabelList = @NONE 
  )>  L1 := temp$7;
  #l13.  temp$8 := L1;
  #l14.  temp$9 := 5;
  #l15.  temp$10 := (temp$8 > temp$9);
  #l16.  if !(temp$10) then goto l17; 
  #l18.  temp$11 := I1;
  #l19.  temp$12 := 0;
  #l20.  temp$13 := (temp$11 < temp$12);
  #l21.  if !(temp$13) then goto l22; 
  #l23.  temp$14 := 8;
  #l24. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l23,
      endLabel = l24,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 18,
      theCol = 17,
      theOffset = 386),
      theEndCaret = 
      @Caret(
      theLine = 18,
      theCol = 25,
      theOffset = 393),
      theOptionalSource = "test_case_10.adb"
    )
    ),
      optSparkLabelList = @NONE 
  )>  L2 := temp$14;
  #l25.  goto l28;
  #l22. 
  #l26.  temp$15 := 7;
  #l27. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l26,
      endLabel = l27,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 20,
      theCol = 17,
      theOffset = 428),
      theEndCaret = 
      @Caret(
      theLine = 20,
      theCol = 25,
      theOffset = 435),
      theOptionalSource = "test_case_10.adb"
    )
    ),
      optSparkLabelList = @NONE 
  )>  L2 := temp$15;
  #l28. <@IfStatementAnnotation(
    ifPart = @Mark(
    startLabel = l18,
    endLabel = l21,
    optRS = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 16,
    theCol = 13,
    theOffset = 343),
    theEndCaret = 
    @Caret(
    theLine = 16,
    theCol = 22,
    theOffset = 351),
    theOptionalSource = "test_case_10.adb"
  )
  ),
    thenPart= @MARK_PLACEHOLDER,
    optElsIfParts = @NONE,
    optElsePart = @MARK_PLACEHOLDER,
      mark = @Mark(
      startLabel = l18,
      endLabel = l28,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 16,
      theCol = 13,
      theOffset = 343),
      theEndCaret = 
      @Caret(
      theLine = 21,
      theCol = 20,
      theOffset = 455),
      theOptionalSource = "test_case_10.adb"
    )
    ),
      optSparkLabelList = @NONE  
  )> 
  #l29.  goto l30;
  #l17. 
  #l30. <@IfStatementAnnotation(
    ifPart = @Mark(
    startLabel = l13,
    endLabel = l16,
    optRS = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 14,
    theCol = 9,
    theOffset = 308),
    theEndCaret = 
    @Caret(
    theLine = 14,
    theCol = 18,
    theOffset = 316),
    theOptionalSource = "test_case_10.adb"
  )
  ),
    thenPart= @MARK_PLACEHOLDER,
    optElsIfParts = @NONE,
    optElsePart = @NONE,
      mark = @Mark(
      startLabel = l13,
      endLabel = l30,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 9,
      theOffset = 308),
      theEndCaret = 
      @Caret(
      theLine = 22,
      theCol = 16,
      theOffset = 471),
      theOptionalSource = "test_case_10.adb"
    )
    ),
      optSparkLabelList = @NONE  
  )> 
  #l31.  temp$16 := L2;
  #l32. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l31,
      endLabel = l32,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 23,
      theCol = 9,
      theOffset = 481),
      theEndCaret = 
      @Caret(
      theLine = 23,
      theCol = 18,
      theOffset = 489),
      theOptionalSource = "test_case_10.adb"
    )
    ),
      optSparkLabelList = @NONE 
  )>  O1 := temp$16;
  #l33.  return;
}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Test_Case_10
@PackageAnnotation(
  theSourceFileName = "test_case_10.ads",
  theSparkName = Test_Case_10,
  thePilarSparkName = Test_Case_10,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 5,
  theCol = 18,
  theOffset = 159),
  theOptionalSource = "test_case_10.ads"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 1,
  theCol = 21,
  theOffset = 19),
  theOptionalSource = "test_case_10.ads"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure P1 
      (Standard::Integer I1 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 2,
  theCol = 19,
  theOffset = 42),
  theEndCaret = 
  @Caret(
  theLine = 2,
  theCol = 21,
  theOffset = 43),
  theOptionalSource = "test_case_10.ads"
),
       Standard::Integer I2 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 2,
  theCol = 23,
  theOffset = 46),
  theEndCaret = 
  @Caret(
  theLine = 2,
  theCol = 25,
  theOffset = 47),
  theOptionalSource = "test_case_10.ads"
),
       Standard::Integer I3 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 2,
  theCol = 27,
  theOffset = 50),
  theEndCaret = 
  @Caret(
  theLine = 2,
  theCol = 29,
  theOffset = 51),
  theOptionalSource = "test_case_10.ads"
),
       Standard::Integer O1 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 2,
  theCol = 44,
  theOffset = 67),
  theEndCaret = 
  @Caret(
  theLine = 2,
  theCol = 46,
  theOffset = 68),
  theOptionalSource = "test_case_10.ads"
),
       Standard::Integer O2 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 2,
  theCol = 48,
  theOffset = 71),
  theEndCaret = 
  @Caret(
  theLine = 2,
  theCol = 50,
  theOffset = 72),
  theOptionalSource = "test_case_10.ads"
))
@MethodAnnotation(
  theSourceFileName = "test_case_10.ads",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(I1,
            I2,
            I3),
      theOptionalOutParameters = @List(O1,
          O2)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @NONE,
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = O1,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 17,
                          theOffset = 106),
                          theEndCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 19,
                          theOffset = 107),
                          theOptionalSource = "test_case_10.ads"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = I1,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 25,
                          theOffset = 114),
                          theEndCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 27,
                          theOffset = 115),
                          theOptionalSource = "test_case_10.ads"
                        )
                    ),
                          @AnnotationVariable(
                      id = I2,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 29,
                          theOffset = 118),
                          theEndCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 31,
                          theOffset = 119),
                          theOptionalSource = "test_case_10.ads"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 3,
                  theCol = 17,
                  theOffset = 106),
                  theEndCaret = 
                  @Caret(
                  theLine = 3,
                  theCol = 31,
                  theOffset = 119),
                  theOptionalSource = "test_case_10.ads"
                )
            )  ,
                  @DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = O2,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 4,
                          theCol = 11,
                          theOffset = 131),
                          theEndCaret = 
                          @Caret(
                          theLine = 4,
                          theCol = 13,
                          theOffset = 132),
                          theOptionalSource = "test_case_10.ads"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = I3,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 4,
                          theCol = 19,
                          theOffset = 139),
                          theEndCaret = 
                          @Caret(
                          theLine = 4,
                          theCol = 21,
                          theOffset = 140),
                          theOptionalSource = "test_case_10.ads"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 4,
                  theCol = 11,
                  theOffset = 131),
                  theEndCaret = 
                  @Caret(
                  theLine = 4,
                  theCol = 21,
                  theOffset = 140),
                  theOptionalSource = "test_case_10.ads"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 3,
              theCol = 9,
              theOffset = 98),
              theEndCaret = 
              @Caret(
              theLine = 4,
              theCol = 22,
              theOffset = 141),
              theOptionalSource = "test_case_10.ads"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 2,
      theCol = 5,
      theOffset = 28),
      theEndCaret = 
      @Caret(
      theLine = 2,
      theCol = 66,
      theOffset = 88),
      theOptionalSource = "test_case_10.ads"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 2,
      theCol = 15,
      theOffset = 38),
      theEndCaret = 
      @Caret(
      theLine = 2,
      theCol = 17,
      theOffset = 39),
      theOptionalSource = "test_case_10.ads"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 2,
      theCol = 5,
      theOffset = 28),
      theEndCaret = 
      @Caret(
      theLine = 2,
      theCol = 65,
      theOffset = 87),
      theOptionalSource = "test_case_10.ads"
    )
) 
{ #locret. return;}