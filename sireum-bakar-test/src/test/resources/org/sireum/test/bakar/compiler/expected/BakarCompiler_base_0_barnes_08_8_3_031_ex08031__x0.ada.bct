package SPARK_MAIN_PROGRAM
@PackageAnnotation(
  theSourceFileName = "ex08031__x0.ada",
  theSparkName = SPARK_MAIN_PROGRAM,
  thePilarSparkName = SPARK_MAIN_PROGRAM,
  theOptionalParent = @NONE,
  thePackageKind = @BODY,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 22,
  theCol = 13,
  theOffset = 510),
  theEndCaret = 
  @Caret(
  theLine = 45,
  theCol = 10,
  theOffset = 1124),
  theOptionalSource = "ex08031__x0.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 22,
  theCol = 13,
  theOffset = 510),
  theEndCaret = 
  @Caret(
  theLine = 45,
  theCol = 10,
  theOffset = 1124),
  theOptionalSource = "ex08031__x0.ada"
),
  thePackageHeaderAnnotation = @MainProgramHeaderAnnotation(
    theOptionalContextClause = @ContextClause(
    theOptionalWithClauses = @List(Input_Port,
        Output_Port,
        The_Stack),
    theOptionalUseTypeClauses = @NONE
  )  ,
  theOptionalInheritClause =
    @List(Input_Port,
          Output_Port,
          The_Stack)
)    );

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
procedure Copy
@MethodAnnotation(
  theSourceFileName = "ex08031__x0.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_BODY,
      theOptionalInParameters = @NONE,
      theOptionalOutParameters = @NONE
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @List(@AnnotationVariable(
          id = The_Stack::@@$State,
          loc =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 25,
              theCol = 19,
              theOffset = 600),
              theEndCaret = 
              @Caret(
              theLine = 25,
              theCol = 34,
              theOffset = 614),
              theOptionalSource = "ex08031__x0.ada"
            )
        ),
              @AnnotationVariable(
          id = Input_Port::@@$Inputs,
          loc =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 26,
              theCol = 19,
              theOffset = 636),
              theEndCaret = 
              @Caret(
              theLine = 26,
              theCol = 36,
              theOffset = 652),
              theOptionalSource = "ex08031__x0.ada"
            )
        ),
              @AnnotationVariable(
          id = Output_Port::@@$Outputs,
          loc =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 27,
              theCol = 19,
              theOffset = 674),
              theEndCaret = 
              @Caret(
              theLine = 27,
              theCol = 38,
              theOffset = 692),
              theOptionalSource = "ex08031__x0.ada"
            )
        )),
      theOptionalGlobalDefinitionsSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 25,
          theCol = 5,
          theOffset = 586),
          theEndCaret = 
          @Caret(
          theLine = 27,
          theCol = 39,
          theOffset = 693),
          theOptionalSource = "ex08031__x0.ada"
        ),
      theOptionalInGlobals = @List(The_Stack::@@$State,
            Input_Port::@@$Inputs),
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @List(The_Stack::@@$State,
          Output_Port::@@$Outputs),
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = The_Stack::@@$State,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 29,
                          theCol = 8,
                          theOffset = 716),
                          theEndCaret = 
                          @Caret(
                          theLine = 29,
                          theCol = 23,
                          theOffset = 730),
                          theOptionalSource = "ex08031__x0.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = Input_Port::@@$Inputs,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 29,
                          theCol = 32,
                          theOffset = 740),
                          theEndCaret = 
                          @Caret(
                          theLine = 29,
                          theCol = 49,
                          theOffset = 756),
                          theOptionalSource = "ex08031__x0.ada"
                        )
                    ),
                          @AnnotationVariable(
                      id = The_Stack::@@$State,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 29,
                          theCol = 8,
                          theOffset = 716),
                          theEndCaret = 
                          @Caret(
                          theLine = 29,
                          theCol = 23,
                          theOffset = 730),
                          theOptionalSource = "ex08031__x0.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 29,
                  theCol = 8,
                  theOffset = 716),
                  theEndCaret = 
                  @Caret(
                  theLine = 29,
                  theCol = 49,
                  theOffset = 756),
                  theOptionalSource = "ex08031__x0.ada"
                )
            )  ,
                  @DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = Output_Port::@@$Outputs,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 30,
                          theCol = 8,
                          theOffset = 768),
                          theEndCaret = 
                          @Caret(
                          theLine = 30,
                          theCol = 27,
                          theOffset = 786),
                          theOptionalSource = "ex08031__x0.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = Input_Port::@@$Inputs,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 31,
                          theCol = 16,
                          theOffset = 804),
                          theEndCaret = 
                          @Caret(
                          theLine = 31,
                          theCol = 33,
                          theOffset = 820),
                          theOptionalSource = "ex08031__x0.ada"
                        )
                    ),
                          @AnnotationVariable(
                      id = The_Stack::@@$State,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 31,
                          theCol = 35,
                          theOffset = 823),
                          theEndCaret = 
                          @Caret(
                          theLine = 31,
                          theCol = 50,
                          theOffset = 837),
                          theOptionalSource = "ex08031__x0.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 30,
                  theCol = 8,
                  theOffset = 768),
                  theEndCaret = 
                  @Caret(
                  theLine = 31,
                  theCol = 50,
                  theOffset = 837),
                  theOptionalSource = "ex08031__x0.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 28,
              theCol = 5,
              theOffset = 700),
              theEndCaret = 
              @Caret(
              theLine = 31,
              theCol = 51,
              theOffset = 838),
              theOptionalSource = "ex08031__x0.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 24,
      theCol = 1,
      theOffset = 566),
      theEndCaret = 
      @Caret(
      theLine = 45,
      theCol = 10,
      theOffset = 1124),
      theOptionalSource = "ex08031__x0.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 24,
      theCol = 11,
      theOffset = 576),
      theEndCaret = 
      @Caret(
      theLine = 24,
      theCol = 15,
      theOffset = 579),
      theOptionalSource = "ex08031__x0.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 24,
      theCol = 1,
      theOffset = 566),
      theEndCaret = 
      @Caret(
      theLine = 24,
      theCol = 15,
      theOffset = 579),
      theOptionalSource = "ex08031__x0.ada"
    )
) 
{

  local
    Standard::Integer Value @LocalVarDeclarationAnnotation(
      theKind = @CONCRETE_VARIABLE,
      theOptionalLoc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 33,
      theCol = 4,
      theOffset = 848),
      theEndCaret = 
      @Caret(
      theLine = 33,
      theCol = 9,
      theOffset = 852),
      theOptionalSource = "ex08031__x0.ada"
    )
    );
    Standard::Integer temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$2 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$3 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$4 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Boolean temp$5 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$6 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$7 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$8 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$9 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Boolean temp$10 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l1. 
  #l3.  temp$1 := Value;
  #l5. <@ProcedureCallStatementAnnotation(
    optCopyBackPart = @Mark(
    startLabel = l4,
    endLabel = l4,
    optRS = @NONE
  ),
      mark = @Mark(
      startLabel = l3,
      endLabel = l5,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 36,
      theCol = 7,
      theOffset = 888),
      theEndCaret = 
      @Caret(
      theLine = 36,
      theCol = 40,
      theOffset = 920),
      theOptionalSource = "ex08031__x0.ada"
    )
    ),
      optSparkLabelList = @NONE
  )>  call  Input_Port::Read_From_Port (temp$1);
  #l4. <@CopyBackStatementAnnotation(
      mark = @Mark(
      startLabel = l4,
      endLabel = l4,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 36,
      theCol = 33,
      theOffset = 914),
      theEndCaret = 
      @Caret(
      theLine = 36,
      theCol = 38,
      theOffset = 918),
      theOptionalSource = "ex08031__x0.ada"
    )
    ),
      optSparkLabelList = @NONE
  )>  Value := temp$1;
  #l6.  temp$2 := Value;
  #l7. <@ProcedureCallStatementAnnotation(
    optCopyBackPart = @NONE,
      mark = @Mark(
      startLabel = l6,
      endLabel = l7,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 37,
      theCol = 7,
      theOffset = 929),
      theEndCaret = 
      @Caret(
      theLine = 37,
      theCol = 29,
      theOffset = 950),
      theOptionalSource = "ex08031__x0.ada"
    )
    ),
      optSparkLabelList = @NONE
  )>  call  The_Stack::Push (temp$2);
  #l8.  temp$3 := Value;
  #l9.  temp$4 := 0;
  #l10.  temp$5 := (temp$3 == temp$4);
  #l11. <@ExitStatementAnnotation(
    hasWhen = true,
      mark = @Mark(
      startLabel = l8,
      endLabel = l11,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 38,
      theCol = 7,
      theOffset = 959),
      theEndCaret = 
      @Caret(
      theLine = 38,
      theCol = 27,
      theOffset = 978),
      theOptionalSource = "ex08031__x0.ada"
    )
    ),
      optSparkLabelList = @NONE
  )>  if temp$5 then goto l2;
  #l12.  goto l1;
  #l2. <@DefaultLoopStatementAnnotation(
      optLoopId = @NONE,
      body = @MARK_PLACEHOLDER,
        mark = @Mark(
        startLabel = l1,
        endLabel = l2,
        optRS = @RegionSelection(
        theStartCaret = 
        @Caret(
        theLine = 35,
        theCol = 4,
        theOffset = 876),
        theEndCaret = 
        @Caret(
        theLine = 39,
        theCol = 13,
        theOffset = 992),
        theOptionalSource = "ex08031__x0.ada"
      )
      ),
        optSparkLabelList = @NONE  
  )> 
  #l13. 
  #l15.  temp$6 := Value;
  #l17. <@ProcedureCallStatementAnnotation(
    optCopyBackPart = @Mark(
    startLabel = l16,
    endLabel = l16,
    optRS = @NONE
  ),
      mark = @Mark(
      startLabel = l15,
      endLabel = l17,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 41,
      theCol = 7,
      theOffset = 1010),
      theEndCaret = 
      @Caret(
      theLine = 41,
      theCol = 28,
      theOffset = 1030),
      theOptionalSource = "ex08031__x0.ada"
    )
    ),
      optSparkLabelList = @NONE
  )>  call  The_Stack::Pop (temp$6);
  #l16. <@CopyBackStatementAnnotation(
      mark = @Mark(
      startLabel = l16,
      endLabel = l16,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 41,
      theCol = 21,
      theOffset = 1024),
      theEndCaret = 
      @Caret(
      theLine = 41,
      theCol = 26,
      theOffset = 1028),
      theOptionalSource = "ex08031__x0.ada"
    )
    ),
      optSparkLabelList = @NONE
  )>  Value := temp$6;
  #l18.  temp$7 := Value;
  #l19. <@ProcedureCallStatementAnnotation(
    optCopyBackPart = @NONE,
      mark = @Mark(
      startLabel = l18,
      endLabel = l19,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 42,
      theCol = 7,
      theOffset = 1039),
      theEndCaret = 
      @Caret(
      theLine = 42,
      theCol = 40,
      theOffset = 1071),
      theOptionalSource = "ex08031__x0.ada"
    )
    ),
      optSparkLabelList = @NONE
  )>  call  Output_Port::Write_To_Port (temp$7);
  #l20.  temp$8 := Value;
  #l21.  temp$9 := 0;
  #l22.  temp$10 := (temp$8 == temp$9);
  #l23. <@ExitStatementAnnotation(
    hasWhen = true,
      mark = @Mark(
      startLabel = l20,
      endLabel = l23,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 43,
      theCol = 7,
      theOffset = 1080),
      theEndCaret = 
      @Caret(
      theLine = 43,
      theCol = 27,
      theOffset = 1099),
      theOptionalSource = "ex08031__x0.ada"
    )
    ),
      optSparkLabelList = @NONE
  )>  if temp$10 then goto l14;
  #l24.  goto l13;
  #l14. <@DefaultLoopStatementAnnotation(
      optLoopId = @NONE,
      body = @MARK_PLACEHOLDER,
        mark = @Mark(
        startLabel = l13,
        endLabel = l14,
        optRS = @RegionSelection(
        theStartCaret = 
        @Caret(
        theLine = 40,
        theCol = 4,
        theOffset = 998),
        theEndCaret = 
        @Caret(
        theLine = 44,
        theCol = 13,
        theOffset = 1113),
        theOptionalSource = "ex08031__x0.ada"
      )
      ),
        optSparkLabelList = @NONE  
  )> 
  #l25.  return;
}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Input_Port
@PackageAnnotation(
  theSourceFileName = "ex08031__x0.ada",
  theSparkName = Input_Port,
  thePilarSparkName = Input_Port,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @List(@SymbolEntry(sparkID = "Inputs",pilarSparkID = Input_Port::@@$Inputs,originTag = @PACKAGE_SPEC_PUBLIC,kindTag = @ABSTRACT_VARIABLE)),
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 10,
  theCol = 16,
  theOffset = 254),
  theOptionalSource = "ex08031__x0.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 1,
  theCol = 19,
  theOffset = 17),
  theOptionalSource = "ex08031__x0.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @PackageSpecificationAnnotation(
      theOptionalOwnStatement = @OwnStatement(
      theOwnClauses = 
        @List(@OwnClause(
          theOptionalDeclaredType = @NONE,
          theOwnVariables = 
            @List(@OwnVariable(
              varName = Input_Port::@@$Inputs,
              mode = @IN,
              ownCategory = @ABSTRACT,
              theOwnVariableSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 2,
                  theCol = 11,
                  theOffset = 30),
                  theEndCaret = 
                  @Caret(
                  theLine = 2,
                  theCol = 20,
                  theOffset = 38),
                  theOptionalSource = "ex08031__x0.ada"
                )
            )),
          theOwnClauseSelection =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 2,
              theCol = 11,
              theOffset = 30),
              theEndCaret = 
              @Caret(
              theLine = 2,
              theCol = 20,
              theOffset = 39),
              theOptionalSource = "ex08031__x0.ada"
            )
        )),
      theOwnStatementSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 2,
          theCol = 7,
          theOffset = 26),
          theEndCaret = 
          @Caret(
          theLine = 2,
          theCol = 20,
          theOffset = 39),
          theOptionalSource = "ex08031__x0.ada"
        )
    ),
      theOptionalVarInitClause = @NONE
    ),
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Inputs__type
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 2,
      theCol = 11,
      theOffset = 30),
      theEndCaret = 
      @Caret(
      theLine = 2,
      theCol = 20,
      theOffset = 38),
      theOptionalSource = "ex08031__x0.ada"
    ),
    fullyQualifiedName = Input_Port::Inputs__type,
    typeDefinition = 
      @AbstractTypeDefinition)
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
    global Input_Port::Inputs__type @@$Inputs @GlobalVarAnnotation(
    symbolEntry = @SymbolEntry(sparkID = "Inputs",pilarSparkID = Input_Port::@@$Inputs,originTag = @PACKAGE_SPEC_PUBLIC,kindTag = @ABSTRACT_VARIABLE),
    loc = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 2,
    theCol = 11,
    theOffset = 30),
    theEndCaret = 
    @Caret(
    theLine = 2,
    theCol = 20,
    theOffset = 38),
    theOptionalSource = "ex08031__x0.ada"
  )
  );
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure Read_From_Port 
      (Standard::Integer Input_Value @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 4,
  theCol = 29,
  theOffset = 74),
  theEndCaret = 
  @Caret(
  theLine = 4,
  theCol = 40,
  theOffset = 84),
  theOptionalSource = "ex08031__x0.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex08031__x0.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @NONE,
      theOptionalOutParameters = @List(Input_Value)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @List(@AnnotationVariable(
          id = Input_Port::@@$Inputs,
          loc =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 5,
              theCol = 18,
              theOffset = 120),
              theEndCaret = 
              @Caret(
              theLine = 5,
              theCol = 24,
              theOffset = 125),
              theOptionalSource = "ex08031__x0.ada"
            )
        )),
      theOptionalGlobalDefinitionsSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 5,
          theCol = 8,
          theOffset = 110),
          theEndCaret = 
          @Caret(
          theLine = 5,
          theCol = 25,
          theOffset = 126),
          theOptionalSource = "ex08031__x0.ada"
        ),
      theOptionalInGlobals = @List(Input_Port::@@$Inputs),
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @NONE,
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = Input_Value,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 6,
                          theCol = 16,
                          theOffset = 144),
                          theEndCaret = 
                          @Caret(
                          theLine = 6,
                          theCol = 27,
                          theOffset = 154),
                          theOptionalSource = "ex08031__x0.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = Input_Port::@@$Inputs,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 6,
                          theCol = 33,
                          theOffset = 161),
                          theEndCaret = 
                          @Caret(
                          theLine = 6,
                          theCol = 39,
                          theOffset = 166),
                          theOptionalSource = "ex08031__x0.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 6,
                  theCol = 16,
                  theOffset = 144),
                  theEndCaret = 
                  @Caret(
                  theLine = 6,
                  theCol = 39,
                  theOffset = 166),
                  theOptionalSource = "ex08031__x0.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 6,
              theCol = 8,
              theOffset = 136),
              theEndCaret = 
              @Caret(
              theLine = 6,
              theCol = 40,
              theOffset = 167),
              theOptionalSource = "ex08031__x0.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 4,
      theCol = 4,
      theOffset = 49),
      theEndCaret = 
      @Caret(
      theLine = 4,
      theCol = 56,
      theOffset = 100),
      theOptionalSource = "ex08031__x0.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 4,
      theCol = 14,
      theOffset = 59),
      theEndCaret = 
      @Caret(
      theLine = 4,
      theCol = 28,
      theOffset = 72),
      theOptionalSource = "ex08031__x0.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 4,
      theCol = 4,
      theOffset = 49),
      theEndCaret = 
      @Caret(
      theLine = 4,
      theCol = 55,
      theOffset = 99),
      theOptionalSource = "ex08031__x0.ada"
    )
) 
{ #locret. return;}
procedure Standard::Boolean End_Of_Input
@MethodAnnotation(
  theSourceFileName = "ex08031__x0.ada",
  theAdaMethodAnnotation = 
    @AdaFunctionAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @NONE
    ),
  theOptionalSPARKMethodAnnotation = 
    @FunctionAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @List(@AnnotationVariable(
          id = Input_Port::@@$Inputs,
          loc =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 9,
              theCol = 18,
              theOffset = 231),
              theEndCaret = 
              @Caret(
              theLine = 9,
              theCol = 24,
              theOffset = 236),
              theOptionalSource = "ex08031__x0.ada"
            )
        )),
      theOptionalGlobalDefinitionsSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 9,
          theCol = 8,
          theOffset = 221),
          theEndCaret = 
          @Caret(
          theLine = 9,
          theCol = 25,
          theOffset = 237),
          theOptionalSource = "ex08031__x0.ada"
        ),
      theOptionalInGlobals = @List(Input_Port::@@$Inputs),
      theOptionalReturnAnnotation = 
        @NONE
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 4,
      theOffset = 175),
      theEndCaret = 
      @Caret(
      theLine = 8,
      theCol = 41,
      theOffset = 211),
      theOptionalSource = "ex08031__x0.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 13,
      theOffset = 184),
      theEndCaret = 
      @Caret(
      theLine = 8,
      theCol = 25,
      theOffset = 195),
      theOptionalSource = "ex08031__x0.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 4,
      theOffset = 175),
      theEndCaret = 
      @Caret(
      theLine = 8,
      theCol = 40,
      theOffset = 210),
      theOptionalSource = "ex08031__x0.ada"
    )
) 
{ #locret. return;}
procedure Standard::Boolean End_Of_Input 
      (Input_Port::Inputs__type implicit__inputs @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 9,
  theCol = 18,
  theOffset = 231),
  theEndCaret = 
  @Caret(
  theLine = 9,
  theCol = 24,
  theOffset = 236),
  theOptionalSource = "ex08031__x0.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex08031__x0.ada",
  theAdaMethodAnnotation = 
    @AdaFunctionAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(implicit__inputs)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProofFunctionAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      isImplicit = true
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 4,
      theOffset = 175),
      theEndCaret = 
      @Caret(
      theLine = 8,
      theCol = 41,
      theOffset = 211),
      theOptionalSource = "ex08031__x0.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 4,
      theOffset = 175),
      theEndCaret = 
      @Caret(
      theLine = 8,
      theCol = 41,
      theOffset = 211),
      theOptionalSource = "ex08031__x0.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 4,
      theOffset = 175),
      theEndCaret = 
      @Caret(
      theLine = 8,
      theCol = 41,
      theOffset = 211),
      theOptionalSource = "ex08031__x0.ada"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package The_Stack
@PackageAnnotation(
  theSourceFileName = "the_stack__x0.ada",
  theSparkName = The_Stack,
  thePilarSparkName = The_Stack,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @List(@SymbolEntry(sparkID = "State",pilarSparkID = The_Stack::@@$State,originTag = @PACKAGE_SPEC_PUBLIC,kindTag = @ABSTRACT_VARIABLE)),
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 19,
  theCol = 15,
  theOffset = 451),
  theOptionalSource = "the_stack__x0.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 1,
  theCol = 18,
  theOffset = 16),
  theOptionalSource = "the_stack__x0.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @PackageSpecificationAnnotation(
      theOptionalOwnStatement = @OwnStatement(
      theOwnClauses = 
        @List(@OwnClause(
          theOptionalDeclaredType = @NONE,
          theOwnVariables = 
            @List(@OwnVariable(
              varName = The_Stack::@@$State,
              mode = @NONE,
              ownCategory = @ABSTRACT,
              theOwnVariableSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 2,
                  theCol = 11,
                  theOffset = 29),
                  theEndCaret = 
                  @Caret(
                  theLine = 2,
                  theCol = 16,
                  theOffset = 33),
                  theOptionalSource = "the_stack__x0.ada"
                )
            )),
          theOwnClauseSelection =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 2,
              theCol = 11,
              theOffset = 29),
              theEndCaret = 
              @Caret(
              theLine = 2,
              theCol = 16,
              theOffset = 34),
              theOptionalSource = "the_stack__x0.ada"
            )
        )),
      theOwnStatementSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 2,
          theCol = 7,
          theOffset = 25),
          theEndCaret = 
          @Caret(
          theLine = 2,
          theCol = 16,
          theOffset = 34),
          theOptionalSource = "the_stack__x0.ada"
        )
    ),
      theOptionalVarInitClause = @List(The_Stack::@@$State)
    ),
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record State__type
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 2,
      theCol = 11,
      theOffset = 29),
      theEndCaret = 
      @Caret(
      theLine = 2,
      theCol = 16,
      theOffset = 33),
      theOptionalSource = "the_stack__x0.ada"
    ),
    fullyQualifiedName = The_Stack::State__type,
    typeDefinition = 
      @AbstractTypeDefinition)
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
    global The_Stack::State__type @@$State @GlobalVarAnnotation(
    symbolEntry = @SymbolEntry(sparkID = "State",pilarSparkID = The_Stack::@@$State,originTag = @PACKAGE_SPEC_PUBLIC,kindTag = @ABSTRACT_VARIABLE),
    loc = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 2,
    theCol = 11,
    theOffset = 29),
    theEndCaret = 
    @Caret(
    theLine = 2,
    theCol = 16,
    theOffset = 33),
    theOptionalSource = "the_stack__x0.ada"
  )
  );
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure Clear
@MethodAnnotation(
  theSourceFileName = "the_stack__x0.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @NONE,
      theOptionalOutParameters = @NONE
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @List(@AnnotationVariable(
          id = The_Stack::@@$State,
          loc =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 6,
              theCol = 19,
              theOffset = 129),
              theEndCaret = 
              @Caret(
              theLine = 6,
              theCol = 24,
              theOffset = 133),
              theOptionalSource = "the_stack__x0.ada"
            )
        )),
      theOptionalGlobalDefinitionsSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 6,
          theCol = 8,
          theOffset = 118),
          theEndCaret = 
          @Caret(
          theLine = 6,
          theCol = 25,
          theOffset = 134),
          theOptionalSource = "the_stack__x0.ada"
        ),
      theOptionalInGlobals = @NONE,
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @List(The_Stack::@@$State),
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = The_Stack::@@$State,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 7,
                          theCol = 16,
                          theOffset = 152),
                          theEndCaret = 
                          @Caret(
                          theLine = 7,
                          theCol = 21,
                          theOffset = 156),
                          theOptionalSource = "the_stack__x0.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @NONE
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 7,
                  theCol = 16,
                  theOffset = 152),
                  theEndCaret = 
                  @Caret(
                  theLine = 7,
                  theCol = 26,
                  theOffset = 161),
                  theOptionalSource = "the_stack__x0.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 7,
              theCol = 8,
              theOffset = 144),
              theEndCaret = 
              @Caret(
              theLine = 7,
              theCol = 27,
              theOffset = 162),
              theOptionalSource = "the_stack__x0.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 5,
      theCol = 4,
      theOffset = 93),
      theEndCaret = 
      @Caret(
      theLine = 5,
      theCol = 20,
      theOffset = 108),
      theOptionalSource = "the_stack__x0.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 5,
      theCol = 14,
      theOffset = 103),
      theEndCaret = 
      @Caret(
      theLine = 5,
      theCol = 19,
      theOffset = 107),
      theOptionalSource = "the_stack__x0.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 5,
      theCol = 4,
      theOffset = 93),
      theEndCaret = 
      @Caret(
      theLine = 5,
      theCol = 19,
      theOffset = 107),
      theOptionalSource = "the_stack__x0.ada"
    )
) 
{ #locret. return;}
procedure Push 
      (Standard::Integer X @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 9,
  theCol = 19,
  theOffset = 185),
  theEndCaret = 
  @Caret(
  theLine = 9,
  theCol = 20,
  theOffset = 185),
  theOptionalSource = "the_stack__x0.ada"
))
@MethodAnnotation(
  theSourceFileName = "the_stack__x0.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(X),
      theOptionalOutParameters = @NONE
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @List(@AnnotationVariable(
          id = The_Stack::@@$State,
          loc =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 10,
              theCol = 22,
              theOffset = 224),
              theEndCaret = 
              @Caret(
              theLine = 10,
              theCol = 27,
              theOffset = 228),
              theOptionalSource = "the_stack__x0.ada"
            )
        )),
      theOptionalGlobalDefinitionsSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 10,
          theCol = 8,
          theOffset = 210),
          theEndCaret = 
          @Caret(
          theLine = 10,
          theCol = 28,
          theOffset = 229),
          theOptionalSource = "the_stack__x0.ada"
        ),
      theOptionalInGlobals = @List(The_Stack::@@$State),
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @List(The_Stack::@@$State),
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = The_Stack::@@$State,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 11,
                          theCol = 16,
                          theOffset = 247),
                          theEndCaret = 
                          @Caret(
                          theLine = 11,
                          theCol = 21,
                          theOffset = 251),
                          theOptionalSource = "the_stack__x0.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = The_Stack::@@$State,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 11,
                          theCol = 27,
                          theOffset = 258),
                          theEndCaret = 
                          @Caret(
                          theLine = 11,
                          theCol = 32,
                          theOffset = 262),
                          theOptionalSource = "the_stack__x0.ada"
                        )
                    ),
                          @AnnotationVariable(
                      id = X,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 11,
                          theCol = 34,
                          theOffset = 265),
                          theEndCaret = 
                          @Caret(
                          theLine = 11,
                          theCol = 35,
                          theOffset = 265),
                          theOptionalSource = "the_stack__x0.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 11,
                  theCol = 16,
                  theOffset = 247),
                  theEndCaret = 
                  @Caret(
                  theLine = 11,
                  theCol = 35,
                  theOffset = 265),
                  theOptionalSource = "the_stack__x0.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 11,
              theCol = 8,
              theOffset = 239),
              theEndCaret = 
              @Caret(
              theLine = 11,
              theCol = 36,
              theOffset = 266),
              theOptionalSource = "the_stack__x0.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 9,
      theCol = 4,
      theOffset = 170),
      theEndCaret = 
      @Caret(
      theLine = 9,
      theCol = 35,
      theOffset = 200),
      theOptionalSource = "the_stack__x0.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 9,
      theCol = 14,
      theOffset = 180),
      theEndCaret = 
      @Caret(
      theLine = 9,
      theCol = 18,
      theOffset = 183),
      theOptionalSource = "the_stack__x0.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 9,
      theCol = 4,
      theOffset = 170),
      theEndCaret = 
      @Caret(
      theLine = 9,
      theCol = 34,
      theOffset = 199),
      theOptionalSource = "the_stack__x0.ada"
    )
) 
{ #locret. return;}
procedure Pop 
      (Standard::Integer X @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 13,
  theCol = 18,
  theOffset = 288),
  theEndCaret = 
  @Caret(
  theLine = 13,
  theCol = 19,
  theOffset = 288),
  theOptionalSource = "the_stack__x0.ada"
))
@MethodAnnotation(
  theSourceFileName = "the_stack__x0.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @NONE,
      theOptionalOutParameters = @List(X)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @List(@AnnotationVariable(
          id = The_Stack::@@$State,
          loc =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 14,
              theCol = 22,
              theOffset = 328),
              theEndCaret = 
              @Caret(
              theLine = 14,
              theCol = 27,
              theOffset = 332),
              theOptionalSource = "the_stack__x0.ada"
            )
        )),
      theOptionalGlobalDefinitionsSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 14,
          theCol = 8,
          theOffset = 314),
          theEndCaret = 
          @Caret(
          theLine = 14,
          theCol = 28,
          theOffset = 333),
          theOptionalSource = "the_stack__x0.ada"
        ),
      theOptionalInGlobals = @List(The_Stack::@@$State),
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @List(The_Stack::@@$State),
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = The_Stack::@@$State,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 15,
                          theCol = 16,
                          theOffset = 351),
                          theEndCaret = 
                          @Caret(
                          theLine = 15,
                          theCol = 21,
                          theOffset = 355),
                          theOptionalSource = "the_stack__x0.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = The_Stack::@@$State,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 15,
                          theCol = 30,
                          theOffset = 365),
                          theEndCaret = 
                          @Caret(
                          theLine = 15,
                          theCol = 35,
                          theOffset = 369),
                          theOptionalSource = "the_stack__x0.ada"
                        )
                    ))
                ),
                      @DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = X,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 15,
                          theCol = 23,
                          theOffset = 358),
                          theEndCaret = 
                          @Caret(
                          theLine = 15,
                          theCol = 24,
                          theOffset = 358),
                          theOptionalSource = "the_stack__x0.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = The_Stack::@@$State,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 15,
                          theCol = 30,
                          theOffset = 365),
                          theEndCaret = 
                          @Caret(
                          theLine = 15,
                          theCol = 35,
                          theOffset = 369),
                          theOptionalSource = "the_stack__x0.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 15,
                  theCol = 16,
                  theOffset = 351),
                  theEndCaret = 
                  @Caret(
                  theLine = 15,
                  theCol = 35,
                  theOffset = 369),
                  theOptionalSource = "the_stack__x0.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 15,
              theCol = 8,
              theOffset = 343),
              theEndCaret = 
              @Caret(
              theLine = 15,
              theCol = 36,
              theOffset = 370),
              theOptionalSource = "the_stack__x0.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 13,
      theCol = 4,
      theOffset = 274),
      theEndCaret = 
      @Caret(
      theLine = 13,
      theCol = 35,
      theOffset = 304),
      theOptionalSource = "the_stack__x0.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 13,
      theCol = 14,
      theOffset = 284),
      theEndCaret = 
      @Caret(
      theLine = 13,
      theCol = 17,
      theOffset = 286),
      theOptionalSource = "the_stack__x0.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 13,
      theCol = 4,
      theOffset = 274),
      theEndCaret = 
      @Caret(
      theLine = 13,
      theCol = 34,
      theOffset = 303),
      theOptionalSource = "the_stack__x0.ada"
    )
) 
{ #locret. return;}
procedure Standard::Boolean Is_Empty
@MethodAnnotation(
  theSourceFileName = "the_stack__x0.ada",
  theAdaMethodAnnotation = 
    @AdaFunctionAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @NONE
    ),
  theOptionalSPARKMethodAnnotation = 
    @FunctionAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @List(@AnnotationVariable(
          id = The_Stack::@@$State,
          loc =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 18,
              theCol = 18,
              theOffset = 430),
              theEndCaret = 
              @Caret(
              theLine = 18,
              theCol = 23,
              theOffset = 434),
              theOptionalSource = "the_stack__x0.ada"
            )
        )),
      theOptionalGlobalDefinitionsSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 18,
          theCol = 8,
          theOffset = 420),
          theEndCaret = 
          @Caret(
          theLine = 18,
          theCol = 24,
          theOffset = 435),
          theOptionalSource = "the_stack__x0.ada"
        ),
      theOptionalInGlobals = @List(The_Stack::@@$State),
      theOptionalReturnAnnotation = 
        @NONE
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 17,
      theCol = 4,
      theOffset = 378),
      theEndCaret = 
      @Caret(
      theLine = 17,
      theCol = 37,
      theOffset = 410),
      theOptionalSource = "the_stack__x0.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 17,
      theCol = 13,
      theOffset = 387),
      theEndCaret = 
      @Caret(
      theLine = 17,
      theCol = 21,
      theOffset = 394),
      theOptionalSource = "the_stack__x0.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 17,
      theCol = 4,
      theOffset = 378),
      theEndCaret = 
      @Caret(
      theLine = 17,
      theCol = 36,
      theOffset = 409),
      theOptionalSource = "the_stack__x0.ada"
    )
) 
{ #locret. return;}
procedure Standard::Boolean Is_Empty 
      (The_Stack::State__type implicit__state @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 18,
  theCol = 18,
  theOffset = 430),
  theEndCaret = 
  @Caret(
  theLine = 18,
  theCol = 23,
  theOffset = 434),
  theOptionalSource = "the_stack__x0.ada"
))
@MethodAnnotation(
  theSourceFileName = "the_stack__x0.ada",
  theAdaMethodAnnotation = 
    @AdaFunctionAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(implicit__state)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProofFunctionAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      isImplicit = true
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 17,
      theCol = 4,
      theOffset = 378),
      theEndCaret = 
      @Caret(
      theLine = 17,
      theCol = 37,
      theOffset = 410),
      theOptionalSource = "the_stack__x0.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 17,
      theCol = 4,
      theOffset = 378),
      theEndCaret = 
      @Caret(
      theLine = 17,
      theCol = 37,
      theOffset = 410),
      theOptionalSource = "the_stack__x0.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 17,
      theCol = 4,
      theOffset = 378),
      theEndCaret = 
      @Caret(
      theLine = 17,
      theCol = 37,
      theOffset = 410),
      theOptionalSource = "the_stack__x0.ada"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Output_Port
@PackageAnnotation(
  theSourceFileName = "ex08031__x0.ada",
  theSparkName = Output_Port,
  thePilarSparkName = Output_Port,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @List(@SymbolEntry(sparkID = "Outputs",pilarSparkID = Output_Port::@@$Outputs,originTag = @PACKAGE_SPEC_PUBLIC,kindTag = @ABSTRACT_VARIABLE)),
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 12,
  theCol = 1,
  theOffset = 259),
  theEndCaret = 
  @Caret(
  theLine = 18,
  theCol = 17,
  theOffset = 450),
  theOptionalSource = "ex08031__x0.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 12,
  theCol = 1,
  theOffset = 259),
  theEndCaret = 
  @Caret(
  theLine = 12,
  theCol = 20,
  theOffset = 277),
  theOptionalSource = "ex08031__x0.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @PackageSpecificationAnnotation(
      theOptionalOwnStatement = @OwnStatement(
      theOwnClauses = 
        @List(@OwnClause(
          theOptionalDeclaredType = @NONE,
          theOwnVariables = 
            @List(@OwnVariable(
              varName = Output_Port::@@$Outputs,
              mode = @OUT,
              ownCategory = @ABSTRACT,
              theOwnVariableSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 13,
                  theCol = 11,
                  theOffset = 290),
                  theEndCaret = 
                  @Caret(
                  theLine = 13,
                  theCol = 22,
                  theOffset = 300),
                  theOptionalSource = "ex08031__x0.ada"
                )
            )),
          theOwnClauseSelection =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 13,
              theCol = 11,
              theOffset = 290),
              theEndCaret = 
              @Caret(
              theLine = 13,
              theCol = 22,
              theOffset = 301),
              theOptionalSource = "ex08031__x0.ada"
            )
        )),
      theOwnStatementSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 13,
          theCol = 7,
          theOffset = 286),
          theEndCaret = 
          @Caret(
          theLine = 13,
          theCol = 22,
          theOffset = 301),
          theOptionalSource = "ex08031__x0.ada"
        )
    ),
      theOptionalVarInitClause = @NONE
    ),
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Outputs__type
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 13,
      theCol = 11,
      theOffset = 290),
      theEndCaret = 
      @Caret(
      theLine = 13,
      theCol = 22,
      theOffset = 300),
      theOptionalSource = "ex08031__x0.ada"
    ),
    fullyQualifiedName = Output_Port::Outputs__type,
    typeDefinition = 
      @AbstractTypeDefinition)
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
    global Output_Port::Outputs__type @@$Outputs @GlobalVarAnnotation(
    symbolEntry = @SymbolEntry(sparkID = "Outputs",pilarSparkID = Output_Port::@@$Outputs,originTag = @PACKAGE_SPEC_PUBLIC,kindTag = @ABSTRACT_VARIABLE),
    loc = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 13,
    theCol = 11,
    theOffset = 290),
    theEndCaret = 
    @Caret(
    theLine = 13,
    theCol = 22,
    theOffset = 300),
    theOptionalSource = "ex08031__x0.ada"
  )
  );
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure Write_To_Port 
      (Standard::Integer Output_Value @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 15,
  theCol = 28,
  theOffset = 335),
  theEndCaret = 
  @Caret(
  theLine = 15,
  theCol = 40,
  theOffset = 346),
  theOptionalSource = "ex08031__x0.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex08031__x0.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(Output_Value),
      theOptionalOutParameters = @NONE
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @List(@AnnotationVariable(
          id = Output_Port::@@$Outputs,
          loc =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 16,
              theCol = 19,
              theOffset = 382),
              theEndCaret = 
              @Caret(
              theLine = 16,
              theCol = 26,
              theOffset = 388),
              theOptionalSource = "ex08031__x0.ada"
            )
        )),
      theOptionalGlobalDefinitionsSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 16,
          theCol = 8,
          theOffset = 371),
          theEndCaret = 
          @Caret(
          theLine = 16,
          theCol = 27,
          theOffset = 389),
          theOptionalSource = "ex08031__x0.ada"
        ),
      theOptionalInGlobals = @NONE,
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @List(Output_Port::@@$Outputs),
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = Output_Port::@@$Outputs,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 17,
                          theCol = 16,
                          theOffset = 407),
                          theEndCaret = 
                          @Caret(
                          theLine = 17,
                          theCol = 23,
                          theOffset = 413),
                          theOptionalSource = "ex08031__x0.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = Output_Value,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 17,
                          theCol = 29,
                          theOffset = 420),
                          theEndCaret = 
                          @Caret(
                          theLine = 17,
                          theCol = 41,
                          theOffset = 431),
                          theOptionalSource = "ex08031__x0.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 17,
                  theCol = 16,
                  theOffset = 407),
                  theEndCaret = 
                  @Caret(
                  theLine = 17,
                  theCol = 41,
                  theOffset = 431),
                  theOptionalSource = "ex08031__x0.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 17,
              theCol = 8,
              theOffset = 399),
              theEndCaret = 
              @Caret(
              theLine = 17,
              theCol = 42,
              theOffset = 432),
              theOptionalSource = "ex08031__x0.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 15,
      theCol = 4,
      theOffset = 311),
      theEndCaret = 
      @Caret(
      theLine = 15,
      theCol = 55,
      theOffset = 361),
      theOptionalSource = "ex08031__x0.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 15,
      theCol = 14,
      theOffset = 321),
      theEndCaret = 
      @Caret(
      theLine = 15,
      theCol = 27,
      theOffset = 333),
      theOptionalSource = "ex08031__x0.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 15,
      theCol = 4,
      theOffset = 311),
      theEndCaret = 
      @Caret(
      theLine = 15,
      theCol = 54,
      theOffset = 360),
      theOptionalSource = "ex08031__x0.ada"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Standard
@PackageAnnotation(
  theSourceFileName = "StandardPackage.java",
  theSparkName = Standard,
  thePilarSparkName = Standard,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Natural
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Natural,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 0)))
{}
record Positive
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Positive,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 1)))
{}
record Long_Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Long_Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Float
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Float,
    typeDefinition = 
      @FloatingPointDefinition(
        theDigitsExp = $UNDEFINED (),
        theOptionalLowRangeExp = $NEG_INFTY (),
        theOptionalHighRangeExp = $POS_INFTY ()))
{}
record Boolean
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Boolean,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @List(@EnumerationValue(tag = False),
                @EnumerationValue(tag = True))))
{}
record Character
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Character,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @EmptyList))
{}
record String
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::String,
    typeDefinition = 
      @UnconstrainedArrayDefinition(
        theDimensions = 
          1,
        theComponentSubType = 
          `Standard::Character,
        theIndexSubTypes = 
          @List(`Standard::Positive)
      ))
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/