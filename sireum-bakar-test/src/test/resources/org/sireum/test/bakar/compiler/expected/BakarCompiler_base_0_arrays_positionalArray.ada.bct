@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Standard
@PackageAnnotation(
  theSourceFileName = "StandardPackage.java",
  theSparkName = Standard,
  thePilarSparkName = Standard,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Natural
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Natural,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 0)))
{}
record Positive
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Positive,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 1)))
{}
record Long_Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Long_Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Float
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Float,
    typeDefinition = 
      @FloatingPointDefinition(
        theDigitsExp = $UNDEFINED (),
        theOptionalLowRangeExp = $NEG_INFTY (),
        theOptionalHighRangeExp = $POS_INFTY ()))
{}
record Boolean
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Boolean,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @List(@EnumerationValue(tag = False),
                @EnumerationValue(tag = True))))
{}
record Character
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Character,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @EmptyList))
{}
record String
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::String,
    typeDefinition = 
      @UnconstrainedArrayDefinition(
        theDimensions = 
          1,
        theComponentSubType = 
          `Standard::Character,
        theIndexSubTypes = 
          @List(`Standard::Positive)
      ))
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package PosArray
@PackageAnnotation(
  theSourceFileName = "positionalArray.ada",
  theSparkName = PosArray,
  thePilarSparkName = PosArray,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @List(@SymbolEntry(sparkID = "Box",pilarSparkID = PosArray::@@Box,originTag = @PACKAGE_SPEC_PUBLIC,kindTag = @CONCRETE_VARIABLE),
      @SymbolEntry(sparkID = "Box2",pilarSparkID = PosArray::@@Box2,originTag = @PACKAGE_SPEC_PUBLIC,kindTag = @CONCRETE_VARIABLE)),
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 18,
  theCol = 14,
  theOffset = 398),
  theOptionalSource = "positionalArray.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 1,
  theCol = 17,
  theOffset = 15),
  theOptionalSource = "positionalArray.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @PackageSpecificationAnnotation(
      theOptionalOwnStatement = @OwnStatement(
      theOwnClauses = 
        @List(@OwnClause(
          theOptionalDeclaredType = @NONE,
          theOwnVariables = 
            @List(@OwnVariable(
              varName = PosArray::@@Box,
              mode = @NONE,
              ownCategory = @CONCRETE,
              theOwnVariableSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 2,
                  theCol = 9,
                  theOffset = 25),
                  theEndCaret = 
                  @Caret(
                  theLine = 2,
                  theCol = 12,
                  theOffset = 27),
                  theOptionalSource = "positionalArray.ada"
                )
            ),
                  @OwnVariable(
              varName = PosArray::@@Box2,
              mode = @NONE,
              ownCategory = @CONCRETE,
              theOwnVariableSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 2,
                  theCol = 14,
                  theOffset = 30),
                  theEndCaret = 
                  @Caret(
                  theLine = 2,
                  theCol = 18,
                  theOffset = 33),
                  theOptionalSource = "positionalArray.ada"
                )
            )),
          theOwnClauseSelection =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 2,
              theCol = 9,
              theOffset = 25),
              theEndCaret = 
              @Caret(
              theLine = 2,
              theCol = 18,
              theOffset = 34),
              theOptionalSource = "positionalArray.ada"
            )
        )),
      theOwnStatementSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 2,
          theCol = 5,
          theOffset = 21),
          theEndCaret = 
          @Caret(
          theLine = 2,
          theCol = 18,
          theOffset = 34),
          theOptionalSource = "positionalArray.ada"
        )
    ),
      theOptionalVarInitClause = @List(PosArray::@@Box,
          PosArray::@@Box2)
    ),
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Index
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 6,
      theCol = 2,
      theOffset = 68),
      theEndCaret = 
      @Caret(
      theLine = 6,
      theCol = 38,
      theOffset = 103),
      theOptionalSource = "positionalArray.ada"
    ),
    fullyQualifiedName = PosArray::Index,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = 5,
        lowerBound = 1)))
{}
record Square
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 7,
      theCol = 2,
      theOffset = 106),
      theEndCaret = 
      @Caret(
      theLine = 7,
      theCol = 42,
      theOffset = 145),
      theOptionalSource = "positionalArray.ada"
    ),
    fullyQualifiedName = PosArray::Square,
    typeDefinition = 
      @ConstrainedArrayDefinition(
        theDimensions = 
          1,
        theComponentSubType = 
          `Standard::Integer,
        theDiscreteSubTypes = 
          @List(`PosArray::Index)
      ))
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
    global PosArray::Square @@Box @GlobalVarAnnotation(
    symbolEntry = @SymbolEntry(sparkID = "Box",pilarSparkID = PosArray::@@Box,originTag = @PACKAGE_SPEC_PUBLIC,kindTag = @CONCRETE_VARIABLE),
    loc = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 10,
    theCol = 2,
    theOffset = 222),
    theEndCaret = 
    @Caret(
    theLine = 10,
    theCol = 5,
    theOffset = 224),
    theOptionalSource = "positionalArray.ada"
  )
  );
    global PosArray::Square @@Box2 @GlobalVarAnnotation(
    symbolEntry = @SymbolEntry(sparkID = "Box2",pilarSparkID = PosArray::@@Box2,originTag = @PACKAGE_SPEC_PUBLIC,kindTag = @CONCRETE_VARIABLE),
    loc = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 12,
    theCol = 2,
    theOffset = 278),
    theEndCaret = 
    @Caret(
    theLine = 12,
    theCol = 6,
    theOffset = 281),
    theOptionalSource = "positionalArray.ada"
  )
  );
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure $$sinit
 
{
  #l1. <@DeclarativePartStatementAnnotation(
      mark = @Mark(
      startLabel = l1,
      endLabel = l1,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 10,
      theCol = 17,
      theOffset = 237),
      theEndCaret = 
      @Caret(
      theLine = 10,
      theCol = 53,
      theOffset = 272),
      theOptionalSource = "positionalArray.ada"
    )
    ),
      optSparkLabelList = @NONE
  )>  PosArray::@@Box := `PosArray::Square (
     
    {
      PosArray::Index iter0 => 
        switch iter0 
            | 1 => (
                -(1)
              )
            | 2 => (
                -(2)
              )
            | 3 => (
                7
              )
            | 4 => (
                3
              )
            | 5 => (
                2
              )
    | => (3)
    }
  );
  #locret. return;
}
procedure dummy 
      (PosArray::Index X @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 14,
  theCol = 19,
  theOffset = 312),
  theEndCaret = 
  @Caret(
  theLine = 14,
  theCol = 20,
  theOffset = 312),
  theOptionalSource = "positionalArray.ada"
))
@MethodAnnotation(
  theSourceFileName = "positionalArray.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(X),
      theOptionalOutParameters = @NONE
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @List(@AnnotationVariable(
          id = PosArray::@@Box,
          loc =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 15,
              theCol = 21,
              theOffset = 347),
              theEndCaret = 
              @Caret(
              theLine = 15,
              theCol = 24,
              theOffset = 349),
              theOptionalSource = "positionalArray.ada"
            )
        )),
      theOptionalGlobalDefinitionsSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 15,
          theCol = 7,
          theOffset = 333),
          theEndCaret = 
          @Caret(
          theLine = 15,
          theCol = 25,
          theOffset = 350),
          theOptionalSource = "positionalArray.ada"
        ),
      theOptionalInGlobals = @List(PosArray::@@Box),
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @List(PosArray::@@Box),
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = PosArray::@@Box,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 16,
                          theCol = 15,
                          theOffset = 366),
                          theEndCaret = 
                          @Caret(
                          theLine = 16,
                          theCol = 18,
                          theOffset = 368),
                          theOptionalSource = "positionalArray.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = PosArray::@@Box,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 16,
                          theCol = 24,
                          theOffset = 375),
                          theEndCaret = 
                          @Caret(
                          theLine = 16,
                          theCol = 27,
                          theOffset = 377),
                          theOptionalSource = "positionalArray.ada"
                        )
                    ),
                          @AnnotationVariable(
                      id = X,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 16,
                          theCol = 29,
                          theOffset = 380),
                          theEndCaret = 
                          @Caret(
                          theLine = 16,
                          theCol = 30,
                          theOffset = 380),
                          theOptionalSource = "positionalArray.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 16,
                  theCol = 15,
                  theOffset = 366),
                  theEndCaret = 
                  @Caret(
                  theLine = 16,
                  theCol = 30,
                  theOffset = 380),
                  theOptionalSource = "positionalArray.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 16,
              theCol = 7,
              theOffset = 358),
              theEndCaret = 
              @Caret(
              theLine = 16,
              theCol = 31,
              theOffset = 381),
              theOptionalSource = "positionalArray.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 3,
      theOffset = 296),
      theEndCaret = 
      @Caret(
      theLine = 14,
      theCol = 33,
      theOffset = 325),
      theOptionalSource = "positionalArray.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 13,
      theOffset = 306),
      theEndCaret = 
      @Caret(
      theLine = 14,
      theCol = 18,
      theOffset = 310),
      theOptionalSource = "positionalArray.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 3,
      theOffset = 296),
      theEndCaret = 
      @Caret(
      theLine = 14,
      theCol = 32,
      theOffset = 324),
      theOptionalSource = "positionalArray.ada"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   B o d yM e t a d a t a
 ****************************************************************/
package PosArray
@PackageAnnotation(
  theSourceFileName = "positionalArray.ada",
  theSparkName = PosArray,
  thePilarSparkName = PosArray,
  theOptionalParent = @NONE,
  thePackageKind = @BODY,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 21,
  theCol = 1,
  theOffset = 402),
  theEndCaret = 
  @Caret(
  theLine = 31,
  theCol = 14,
  theOffset = 616),
  theOptionalSource = "positionalArray.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 21,
  theCol = 1,
  theOffset = 402),
  theEndCaret = 
  @Caret(
  theLine = 21,
  theCol = 22,
  theOffset = 422),
  theOptionalSource = "positionalArray.ada"
),
  thePackageHeaderAnnotation = @PackageBodyHeaderAnnotation(
    theOptionalContextClause = @NONE  ,
  theOptionalRefinementDefinition = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure $$binit
 
{
  #l1. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l1,
      endLabel = l1,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 30,
      theCol = 3,
      theOffset = 526),
      theEndCaret = 
      @Caret(
      theLine = 30,
      theCol = 36,
      theOffset = 558),
      theOptionalSource = "positionalArray.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  PosArray::@@Box2 := `PosArray::Square (
     
    {
      PosArray::Index iter0 => 
        switch iter0 
            | 1 => (
                77
              )
    | => (5)
    }
  );
  #locret. return;
}
/****************************************************************
 *  P r o c e d u r e s / F u n c t i o n s
 ****************************************************************/
procedure dummy 
      (PosArray::Index X @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 24,
  theCol = 20,
  theOffset = 447),
  theEndCaret = 
  @Caret(
  theLine = 24,
  theCol = 21,
  theOffset = 447),
  theOptionalSource = "positionalArray.ada"
))
@MethodAnnotation(
  theSourceFileName = "positionalArray.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_BODY,
      theOptionalInParameters = @List(X),
      theOptionalOutParameters = @NONE
    ),
  theOptionalSPARKMethodAnnotation = 
    @NONE,
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 24,
      theCol = 4,
      theOffset = 431),
      theEndCaret = 
      @Caret(
      theLine = 27,
      theCol = 14,
      theOffset = 513),
      theOptionalSource = "positionalArray.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 24,
      theCol = 14,
      theOffset = 441),
      theEndCaret = 
      @Caret(
      theLine = 24,
      theCol = 19,
      theOffset = 445),
      theOptionalSource = "positionalArray.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 24,
      theCol = 4,
      theOffset = 431),
      theEndCaret = 
      @Caret(
      theLine = 24,
      theCol = 33,
      theOffset = 459),
      theOptionalSource = "positionalArray.ada"
    )
) 
{

  local
    PosArray::Index temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    PosArray::Index temp$2 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$3 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$4 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$5 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l2.  temp$1 := X;
  #l3.  temp$2 := X;
  #l4.  temp$3 := PosArray::@@Box [temp$2];
  #l5.  temp$4 := 1;
  #l6.  temp$5 := (temp$3 - temp$4);
  #l7. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l2,
      endLabel = l7,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 26,
      theCol = 7,
      theOffset = 479),
      theEndCaret = 
      @Caret(
      theLine = 26,
      theCol = 28,
      theOffset = 499),
      theOptionalSource = "positionalArray.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  PosArray::@@Box [temp$1] := temp$5;
  #l8.  return;
}