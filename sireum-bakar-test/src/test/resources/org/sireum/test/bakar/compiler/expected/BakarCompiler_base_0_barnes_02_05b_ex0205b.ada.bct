@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Random_Numbers
@PackageAnnotation(
  theSourceFileName = "ex0205b.ada",
  theSparkName = Random_Numbers,
  thePilarSparkName = Random_Numbers,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 10,
  theCol = 20,
  theOffset = 192),
  theOptionalSource = "ex0205b.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 1,
  theCol = 23,
  theOffset = 21),
  theOptionalSource = "ex0205b.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @PackageSpecificationAnnotation(
      theOptionalOwnStatement = @OwnStatement(
      theOwnClauses = 
        @List(@OwnClause(
          theOptionalDeclaredType = @NONE,
          theOwnVariables = 
            @List(@OwnVariable(
              varName = Random_Numbers::@@Seed,
              mode = @NONE,
              ownCategory = @CONCRETE,
              theOwnVariableSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 2,
                  theCol = 11,
                  theOffset = 34),
                  theEndCaret = 
                  @Caret(
                  theLine = 2,
                  theCol = 15,
                  theOffset = 37),
                  theOptionalSource = "ex0205b.ada"
                )
            )),
          theOwnClauseSelection =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 2,
              theCol = 11,
              theOffset = 34),
              theEndCaret = 
              @Caret(
              theLine = 2,
              theCol = 15,
              theOffset = 38),
              theOptionalSource = "ex0205b.ada"
            )
        )),
      theOwnStatementSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 2,
          theCol = 7,
          theOffset = 30),
          theEndCaret = 
          @Caret(
          theLine = 2,
          theCol = 15,
          theOffset = 38),
          theOptionalSource = "ex0205b.ada"
        )
    ),
      theOptionalVarInitClause = @List(Random_Numbers::@@Seed)
    ),
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure Random 
      (Standard::Float X @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 6,
  theCol = 21,
  theOffset = 92),
  theEndCaret = 
  @Caret(
  theLine = 6,
  theCol = 22,
  theOffset = 92),
  theOptionalSource = "ex0205b.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex0205b.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @NONE,
      theOptionalOutParameters = @List(X)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @List(@AnnotationVariable(
          id = Random_Numbers::@@Seed,
          loc =
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 7,
              theCol = 22,
              theOffset = 130),
              theEndCaret = 
              @Caret(
              theLine = 7,
              theCol = 26,
              theOffset = 133),
              theOptionalSource = "ex0205b.ada"
            )
        )),
      theOptionalGlobalDefinitionsSelection = 
        @RegionSelection(
          theStartCaret = 
          @Caret(
          theLine = 7,
          theCol = 8,
          theOffset = 116),
          theEndCaret = 
          @Caret(
          theLine = 7,
          theCol = 27,
          theOffset = 134),
          theOptionalSource = "ex0205b.ada"
        ),
      theOptionalInGlobals = @List(Random_Numbers::@@Seed),
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @List(Random_Numbers::@@Seed),
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = X,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 8,
                          theCol = 16,
                          theOffset = 152),
                          theEndCaret = 
                          @Caret(
                          theLine = 8,
                          theCol = 17,
                          theOffset = 152),
                          theOptionalSource = "ex0205b.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = Random_Numbers::@@Seed,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 8,
                          theCol = 29,
                          theOffset = 165),
                          theEndCaret = 
                          @Caret(
                          theLine = 8,
                          theCol = 33,
                          theOffset = 168),
                          theOptionalSource = "ex0205b.ada"
                        )
                    ))
                ),
                      @DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = Random_Numbers::@@Seed,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 8,
                          theCol = 19,
                          theOffset = 155),
                          theEndCaret = 
                          @Caret(
                          theLine = 8,
                          theCol = 23,
                          theOffset = 158),
                          theOptionalSource = "ex0205b.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = Random_Numbers::@@Seed,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 8,
                          theCol = 29,
                          theOffset = 165),
                          theEndCaret = 
                          @Caret(
                          theLine = 8,
                          theCol = 33,
                          theOffset = 168),
                          theOptionalSource = "ex0205b.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 8,
                  theCol = 16,
                  theOffset = 152),
                  theEndCaret = 
                  @Caret(
                  theLine = 8,
                  theCol = 33,
                  theOffset = 168),
                  theOptionalSource = "ex0205b.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 8,
              theCol = 8,
              theOffset = 144),
              theEndCaret = 
              @Caret(
              theLine = 8,
              theCol = 34,
              theOffset = 169),
              theOptionalSource = "ex0205b.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 6,
      theCol = 4,
      theOffset = 75),
      theEndCaret = 
      @Caret(
      theLine = 6,
      theCol = 36,
      theOffset = 106),
      theOptionalSource = "ex0205b.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 6,
      theCol = 14,
      theOffset = 85),
      theEndCaret = 
      @Caret(
      theLine = 6,
      theCol = 20,
      theOffset = 90),
      theOptionalSource = "ex0205b.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 6,
      theCol = 4,
      theOffset = 75),
      theEndCaret = 
      @Caret(
      theLine = 6,
      theCol = 35,
      theOffset = 105),
      theOptionalSource = "ex0205b.ada"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   B o d yM e t a d a t a
 ****************************************************************/
package Random_Numbers
@PackageAnnotation(
  theSourceFileName = "ex0205b.ada",
  theSparkName = Random_Numbers,
  thePilarSparkName = Random_Numbers,
  theOptionalParent = @NONE,
  thePackageKind = @BODY,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @List(@SymbolEntry(sparkID = "Seed",pilarSparkID = Random_Numbers::@@Seed,originTag = @PACKAGE_BODY,kindTag = @CONCRETE_VARIABLE)),
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 12,
  theCol = 1,
  theOffset = 197),
  theEndCaret = 
  @Caret(
  theLine = 25,
  theCol = 20,
  theOffset = 491),
  theOptionalSource = "ex0205b.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 12,
  theCol = 1,
  theOffset = 197),
  theEndCaret = 
  @Caret(
  theLine = 12,
  theCol = 28,
  theOffset = 223),
  theOptionalSource = "ex0205b.ada"
),
  thePackageHeaderAnnotation = @PackageBodyHeaderAnnotation(
    theOptionalContextClause = @NONE  ,
  theOptionalRefinementDefinition = 
    @NONE
));

const $Const {
  Seed_Max = (Standard::Integer) (14489) @ConstantAnnotation(
    theOrigin =
      @PACKAGE_BODY,
    theLoc = 
      @RegionSelection(
        theStartCaret = 
        @Caret(
        theLine = 15,
        theCol = 4,
        theOffset = 253),
        theEndCaret = 
        @Caret(
        theLine = 15,
        theCol = 12,
        theOffset = 260),
        theOptionalSource = "ex0205b.ada"
      ));
}
/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
    global Standard::Integer @@Seed @GlobalVarAnnotation(
    symbolEntry = @SymbolEntry(sparkID = "Seed",pilarSparkID = Random_Numbers::@@Seed,originTag = @PACKAGE_BODY,kindTag = @CONCRETE_VARIABLE),
    loc = @RegionSelection(
    theStartCaret = 
    @Caret(
    theLine = 14,
    theCol = 4,
    theOffset = 233),
    theEndCaret = 
    @Caret(
    theLine = 14,
    theCol = 8,
    theOffset = 236),
    theOptionalSource = "ex0205b.ada"
  )
  );
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure $$binit
 
{

  local
    Standard::Integer temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l1.  temp$1 := 12345;
  #l2. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l1,
      endLabel = l2,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 24,
      theCol = 4,
      theOffset = 457),
      theEndCaret = 
      @Caret(
      theLine = 24,
      theCol = 18,
      theOffset = 470),
      theOptionalSource = "ex0205b.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  Random_Numbers::@@Seed := temp$1;
  #locret. return;
}
/****************************************************************
 *  P r o c e d u r e s / F u n c t i o n s
 ****************************************************************/
procedure Random 
      (Standard::Float X @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 17,
  theCol = 21,
  theOffset = 314),
  theEndCaret = 
  @Caret(
  theLine = 17,
  theCol = 22,
  theOffset = 314),
  theOptionalSource = "ex0205b.ada"
))
@MethodAnnotation(
  theSourceFileName = "ex0205b.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_BODY,
      theOptionalInParameters = @NONE,
      theOptionalOutParameters = @List(X)
    ),
  theOptionalSPARKMethodAnnotation = 
    @NONE,
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 17,
      theCol = 4,
      theOffset = 297),
      theEndCaret = 
      @Caret(
      theLine = 21,
      theCol = 15,
      theOffset = 442),
      theOptionalSource = "ex0205b.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 17,
      theCol = 14,
      theOffset = 307),
      theEndCaret = 
      @Caret(
      theLine = 17,
      theCol = 20,
      theOffset = 312),
      theOptionalSource = "ex0205b.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 17,
      theCol = 4,
      theOffset = 297),
      theEndCaret = 
      @Caret(
      theLine = 17,
      theCol = 35,
      theOffset = 327),
      theOptionalSource = "ex0205b.ada"
    )
) 
{

  local
    Standard::Integer temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$2 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$3 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$4 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$5 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$6 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Float temp$7 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$8 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Float temp$9 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Float temp$10 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l3.  temp$1 := Random_Numbers::@@Seed;
  #l4.  temp$2 := 6481;
  #l5.  temp$3 := (temp$1 * temp$2);
  #l6.  temp$4 := Random_Numbers::$Const.Seed_Max;
  #l7.  temp$5 := (temp$3 % temp$4);
  #l8. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l3,
      endLabel = l8,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 19,
      theCol = 7,
      theOffset = 349),
      theEndCaret = 
      @Caret(
      theLine = 19,
      theCol = 42,
      theOffset = 383),
      theOptionalSource = "ex0205b.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  Random_Numbers::@@Seed := temp$5;
  #l9.  temp$6 := Random_Numbers::@@Seed;
  #l10.  temp$7 := (Standard::Float) (temp$6);
  #l11.  temp$8 := Random_Numbers::$Const.Seed_Max;
  #l12.  temp$9 := (Standard::Float) (temp$8);
  #l13.  temp$10 := (temp$7 / temp$9);
  #l14. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l9,
      endLabel = l14,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 20,
      theCol = 7,
      theOffset = 392),
      theEndCaret = 
      @Caret(
      theLine = 20,
      theCol = 42,
      theOffset = 426),
      theOptionalSource = "ex0205b.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  X := temp$10;
  #l15.  return;
}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Standard
@PackageAnnotation(
  theSourceFileName = "StandardPackage.java",
  theSparkName = Standard,
  thePilarSparkName = Standard,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Natural
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Natural,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 0)))
{}
record Positive
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Positive,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 1)))
{}
record Long_Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Long_Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Float
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Float,
    typeDefinition = 
      @FloatingPointDefinition(
        theDigitsExp = $UNDEFINED (),
        theOptionalLowRangeExp = $NEG_INFTY (),
        theOptionalHighRangeExp = $POS_INFTY ()))
{}
record Boolean
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Boolean,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @List(@EnumerationValue(tag = False),
                @EnumerationValue(tag = True))))
{}
record Character
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Character,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @EmptyList))
{}
record String
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::String,
    typeDefinition = 
      @UnconstrainedArrayDefinition(
        theDimensions = 
          1,
        theComponentSubType = 
          `Standard::Character,
        theIndexSubTypes = 
          @List(`Standard::Positive)
      ))
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/