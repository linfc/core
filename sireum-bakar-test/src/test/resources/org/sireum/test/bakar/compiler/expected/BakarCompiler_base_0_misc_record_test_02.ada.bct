@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package RecordTest02
@PackageAnnotation(
  theSourceFileName = "record_test_02.ada",
  theSparkName = RecordTest02,
  thePilarSparkName = RecordTest02,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 21,
  theCol = 18,
  theOffset = 366),
  theOptionalSource = "record_test_02.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 1,
  theCol = 21,
  theOffset = 19),
  theOptionalSource = "record_test_02.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Object
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 3,
      theCol = 1,
      theOffset = 25),
      theEndCaret = 
      @Caret(
      theLine = 6,
      theCol = 18,
      theOffset = 92),
      theOptionalSource = "record_test_02.ada"
    ),
    fullyQualifiedName = RecordTest02::Object,
    typeDefinition = 
      @RecordTypeDefinition(
        tagged = false,
        parentType=@NONE))
{
  Standard::Float x @RecordComponentAnnotation(
    sparkID = X
  );
  Standard::Float y @RecordComponentAnnotation(
    sparkID = Y
  );
}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure Test01 
      (RecordTest02::Object Q @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 14,
  theCol = 18,
  theOffset = 196),
  theEndCaret = 
  @Caret(
  theLine = 14,
  theCol = 19,
  theOffset = 196),
  theOptionalSource = "record_test_02.ada"
))
@MethodAnnotation(
  theSourceFileName = "record_test_02.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(Q),
      theOptionalOutParameters = @List(Q)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @NONE,
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = Q,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 15,
                          theCol = 16,
                          theOffset = 231),
                          theEndCaret = 
                          @Caret(
                          theLine = 15,
                          theCol = 17,
                          theOffset = 231),
                          theOptionalSource = "record_test_02.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = Q,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 15,
                          theCol = 23,
                          theOffset = 238),
                          theEndCaret = 
                          @Caret(
                          theLine = 15,
                          theCol = 24,
                          theOffset = 238),
                          theOptionalSource = "record_test_02.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 15,
                  theCol = 16,
                  theOffset = 231),
                  theEndCaret = 
                  @Caret(
                  theLine = 15,
                  theCol = 24,
                  theOffset = 238),
                  theOptionalSource = "record_test_02.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 15,
              theCol = 8,
              theOffset = 223),
              theEndCaret = 
              @Caret(
              theLine = 15,
              theCol = 26,
              theOffset = 240),
              theOptionalSource = "record_test_02.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 1,
      theOffset = 179),
      theEndCaret = 
      @Caret(
      theLine = 14,
      theCol = 37,
      theOffset = 214),
      theOptionalSource = "record_test_02.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 11,
      theOffset = 189),
      theEndCaret = 
      @Caret(
      theLine = 14,
      theCol = 17,
      theOffset = 194),
      theOptionalSource = "record_test_02.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 1,
      theOffset = 179),
      theEndCaret = 
      @Caret(
      theLine = 14,
      theCol = 36,
      theOffset = 213),
      theOptionalSource = "record_test_02.ada"
    )
) 
{ #locret. return;}
procedure Test02 
      (Standard::Float I1 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 17,
  theCol = 18,
  theOffset = 260),
  theEndCaret = 
  @Caret(
  theLine = 17,
  theCol = 20,
  theOffset = 261),
  theOptionalSource = "record_test_02.ada"
),
       Standard::Float I2 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 17,
  theCol = 22,
  theOffset = 264),
  theEndCaret = 
  @Caret(
  theLine = 17,
  theCol = 24,
  theOffset = 265),
  theOptionalSource = "record_test_02.ada"
),
       Standard::Float O1 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 17,
  theCol = 37,
  theOffset = 279),
  theEndCaret = 
  @Caret(
  theLine = 17,
  theCol = 39,
  theOffset = 280),
  theOptionalSource = "record_test_02.ada"
),
       Standard::Float O2 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 17,
  theCol = 41,
  theOffset = 283),
  theEndCaret = 
  @Caret(
  theLine = 17,
  theCol = 43,
  theOffset = 284),
  theOptionalSource = "record_test_02.ada"
))
@MethodAnnotation(
  theSourceFileName = "record_test_02.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(I1,
            I2),
      theOptionalOutParameters = @List(O1,
          O2)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @NONE,
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = O1,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 18,
                          theCol = 14,
                          theOffset = 313),
                          theEndCaret = 
                          @Caret(
                          theLine = 18,
                          theCol = 16,
                          theOffset = 314),
                          theOptionalSource = "record_test_02.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = I1,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 18,
                          theCol = 22,
                          theOffset = 321),
                          theEndCaret = 
                          @Caret(
                          theLine = 18,
                          theCol = 24,
                          theOffset = 322),
                          theOptionalSource = "record_test_02.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 18,
                  theCol = 14,
                  theOffset = 313),
                  theEndCaret = 
                  @Caret(
                  theLine = 18,
                  theCol = 24,
                  theOffset = 322),
                  theOptionalSource = "record_test_02.ada"
                )
            )  ,
                  @DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = O2,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 19,
                          theCol = 14,
                          theOffset = 337),
                          theEndCaret = 
                          @Caret(
                          theLine = 19,
                          theCol = 16,
                          theOffset = 338),
                          theOptionalSource = "record_test_02.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = I2,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 19,
                          theCol = 22,
                          theOffset = 345),
                          theEndCaret = 
                          @Caret(
                          theLine = 19,
                          theCol = 24,
                          theOffset = 346),
                          theOptionalSource = "record_test_02.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 19,
                  theCol = 14,
                  theOffset = 337),
                  theEndCaret = 
                  @Caret(
                  theLine = 19,
                  theCol = 24,
                  theOffset = 346),
                  theOptionalSource = "record_test_02.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 18,
              theCol = 6,
              theOffset = 305),
              theEndCaret = 
              @Caret(
              theLine = 19,
              theCol = 25,
              theOffset = 347),
              theOptionalSource = "record_test_02.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 17,
      theCol = 1,
      theOffset = 243),
      theEndCaret = 
      @Caret(
      theLine = 17,
      theCol = 57,
      theOffset = 298),
      theOptionalSource = "record_test_02.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 17,
      theCol = 11,
      theOffset = 253),
      theEndCaret = 
      @Caret(
      theLine = 17,
      theCol = 17,
      theOffset = 258),
      theOptionalSource = "record_test_02.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 17,
      theCol = 1,
      theOffset = 243),
      theEndCaret = 
      @Caret(
      theLine = 17,
      theCol = 56,
      theOffset = 297),
      theOptionalSource = "record_test_02.ada"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   B o d yM e t a d a t a
 ****************************************************************/
package RecordTest02
@PackageAnnotation(
  theSourceFileName = "record_test_02.ada",
  theSparkName = RecordTest02,
  thePilarSparkName = RecordTest02,
  theOptionalParent = @NONE,
  thePackageKind = @BODY,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 25,
  theCol = 1,
  theOffset = 371),
  theEndCaret = 
  @Caret(
  theLine = 56,
  theCol = 18,
  theOffset = 1197),
  theOptionalSource = "record_test_02.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 25,
  theCol = 1,
  theOffset = 371),
  theEndCaret = 
  @Caret(
  theLine = 25,
  theCol = 26,
  theOffset = 395),
  theOptionalSource = "record_test_02.ada"
),
  thePackageHeaderAnnotation = @PackageBodyHeaderAnnotation(
    theOptionalContextClause = @NONE  ,
  theOptionalRefinementDefinition = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
/****************************************************************
 *  P r o c e d u r e s / F u n c t i o n s
 ****************************************************************/
procedure Test01 
      (RecordTest02::Object Q @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 30,
  theCol = 21,
  theOffset = 552),
  theEndCaret = 
  @Caret(
  theLine = 30,
  theCol = 22,
  theOffset = 552),
  theOptionalSource = "record_test_02.ada"
))
@MethodAnnotation(
  theSourceFileName = "record_test_02.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_BODY,
      theOptionalInParameters = @List(Q),
      theOptionalOutParameters = @List(Q)
    ),
  theOptionalSPARKMethodAnnotation = 
    @NONE,
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 30,
      theCol = 4,
      theOffset = 535),
      theEndCaret = 
      @Caret(
      theLine = 37,
      theCol = 15,
      theOffset = 666),
      theOptionalSource = "record_test_02.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 30,
      theCol = 14,
      theOffset = 545),
      theEndCaret = 
      @Caret(
      theLine = 30,
      theCol = 20,
      theOffset = 550),
      theOptionalSource = "record_test_02.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 30,
      theCol = 4,
      theOffset = 535),
      theEndCaret = 
      @Caret(
      theLine = 30,
      theCol = 39,
      theOffset = 569),
      theOptionalSource = "record_test_02.ada"
    )
) 
{

  local
    Standard::Float T @LocalVarDeclarationAnnotation(
      theKind = @CONCRETE_VARIABLE,
      theOptionalLoc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 32,
      theCol = 7,
      theOffset = 583),
      theEndCaret = 
      @Caret(
      theLine = 32,
      theCol = 8,
      theOffset = 583),
      theOptionalSource = "record_test_02.ada"
    )
    );
    Standard::Float temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Float temp$2 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Float temp$3 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l1.  temp$1 := Q.x;
  #l2. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l1,
      endLabel = l2,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 34,
      theCol = 7,
      theOffset = 609),
      theEndCaret = 
      @Caret(
      theLine = 34,
      theCol = 16,
      theOffset = 617),
      theOptionalSource = "record_test_02.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  T := temp$1;
  #l3.  temp$2 := Q.y;
  #l4. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l3,
      endLabel = l4,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 35,
      theCol = 7,
      theOffset = 625),
      theEndCaret = 
      @Caret(
      theLine = 35,
      theCol = 18,
      theOffset = 635),
      theOptionalSource = "record_test_02.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  Q.x := temp$2;
  #l5.  temp$3 := T;
  #l6. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l5,
      endLabel = l6,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 36,
      theCol = 7,
      theOffset = 643),
      theEndCaret = 
      @Caret(
      theLine = 36,
      theCol = 16,
      theOffset = 651),
      theOptionalSource = "record_test_02.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  Q.y := temp$3;
  #l7.  return;
}
procedure Test02 
      (Standard::Float I1 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 46,
  theCol = 19,
  theOffset = 1025),
  theEndCaret = 
  @Caret(
  theLine = 46,
  theCol = 21,
  theOffset = 1026),
  theOptionalSource = "record_test_02.ada"
),
       Standard::Float I2 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 46,
  theCol = 23,
  theOffset = 1029),
  theEndCaret = 
  @Caret(
  theLine = 46,
  theCol = 25,
  theOffset = 1030),
  theOptionalSource = "record_test_02.ada"
),
       Standard::Float O1 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 46,
  theCol = 38,
  theOffset = 1044),
  theEndCaret = 
  @Caret(
  theLine = 46,
  theCol = 40,
  theOffset = 1045),
  theOptionalSource = "record_test_02.ada"
),
       Standard::Float O2 @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 46,
  theCol = 42,
  theOffset = 1048),
  theEndCaret = 
  @Caret(
  theLine = 46,
  theCol = 44,
  theOffset = 1049),
  theOptionalSource = "record_test_02.ada"
))
@MethodAnnotation(
  theSourceFileName = "record_test_02.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_BODY,
      theOptionalInParameters = @List(I1,
            I2),
      theOptionalOutParameters = @List(O1,
          O2)
    ),
  theOptionalSPARKMethodAnnotation = 
    @NONE,
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 46,
      theCol = 2,
      theOffset = 1008),
      theEndCaret = 
      @Caret(
      theLine = 54,
      theCol = 15,
      theOffset = 1178),
      theOptionalSource = "record_test_02.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 46,
      theCol = 12,
      theOffset = 1018),
      theEndCaret = 
      @Caret(
      theLine = 46,
      theCol = 18,
      theOffset = 1023),
      theOptionalSource = "record_test_02.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 46,
      theCol = 2,
      theOffset = 1008),
      theEndCaret = 
      @Caret(
      theLine = 46,
      theCol = 57,
      theOffset = 1062),
      theOptionalSource = "record_test_02.ada"
    )
) 
{

  local
    RecordTest02::Object Q @LocalVarDeclarationAnnotation(
      theKind = @CONCRETE_VARIABLE,
      theOptionalLoc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 48,
      theCol = 7,
      theOffset = 1076),
      theEndCaret = 
      @Caret(
      theLine = 48,
      theCol = 8,
      theOffset = 1076),
      theOptionalSource = "record_test_02.ada"
    )
    );
    Standard::Float temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Float temp$2 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Float temp$3 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Float temp$4 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l8.  temp$1 := I1;
  #l9. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l8,
      endLabel = l9,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 50,
      theCol = 7,
      theOffset = 1103),
      theEndCaret = 
      @Caret(
      theLine = 50,
      theCol = 17,
      theOffset = 1112),
      theOptionalSource = "record_test_02.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  Q.x := temp$1;
  #l10.  temp$2 := I2;
  #l11. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l10,
      endLabel = l11,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 51,
      theCol = 7,
      theOffset = 1120),
      theEndCaret = 
      @Caret(
      theLine = 51,
      theCol = 17,
      theOffset = 1129),
      theOptionalSource = "record_test_02.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  Q.y := temp$2;
  #l12.  temp$3 := Q.x;
  #l13. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l12,
      endLabel = l13,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 52,
      theCol = 7,
      theOffset = 1137),
      theEndCaret = 
      @Caret(
      theLine = 52,
      theCol = 17,
      theOffset = 1146),
      theOptionalSource = "record_test_02.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  O1 := temp$3;
  #l14.  temp$4 := Q.y;
  #l15. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l14,
      endLabel = l15,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 53,
      theCol = 7,
      theOffset = 1154),
      theEndCaret = 
      @Caret(
      theLine = 53,
      theCol = 17,
      theOffset = 1163),
      theOptionalSource = "record_test_02.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  O2 := temp$4;
  #l16.  return;
}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Standard
@PackageAnnotation(
  theSourceFileName = "StandardPackage.java",
  theSparkName = Standard,
  thePilarSparkName = Standard,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Natural
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Natural,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 0)))
{}
record Positive
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Positive,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 1)))
{}
record Long_Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Long_Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Float
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Float,
    typeDefinition = 
      @FloatingPointDefinition(
        theDigitsExp = $UNDEFINED (),
        theOptionalLowRangeExp = $NEG_INFTY (),
        theOptionalHighRangeExp = $POS_INFTY ()))
{}
record Boolean
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Boolean,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @List(@EnumerationValue(tag = False),
                @EnumerationValue(tag = True))))
{}
record Character
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Character,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @EmptyList))
{}
record String
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::String,
    typeDefinition = 
      @UnconstrainedArrayDefinition(
        theDimensions = 
          1,
        theComponentSubType = 
          `Standard::Character,
        theIndexSubTypes = 
          @List(`Standard::Positive)
      ))
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/