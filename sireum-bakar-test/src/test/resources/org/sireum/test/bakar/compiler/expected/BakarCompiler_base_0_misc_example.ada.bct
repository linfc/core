@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Standard
@PackageAnnotation(
  theSourceFileName = "StandardPackage.java",
  theSparkName = Standard,
  thePilarSparkName = Standard,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderSelection = @EMPTY_REGION_SELECTION,
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
record Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Natural
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Natural,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 0)))
{}
record Positive
  @SubTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Positive,
    type = `Standard::Integer,
    constraint = 
  @Some(@SimpleRangeConstraint(
        upperBound = $Last(`Standard::Integer),
        lowerBound = 1)))
{}
record Long_Integer
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Long_Integer,
    typeDefinition = 
      @SignedIntegerTypeDefinition(
        theLowRangeExp = $NEG_INFTY (),
        theHighRangeExp = $POS_INFTY ()))
{}
record Float
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Float,
    typeDefinition = 
      @FloatingPointDefinition(
        theDigitsExp = $UNDEFINED (),
        theOptionalLowRangeExp = $NEG_INFTY (),
        theOptionalHighRangeExp = $POS_INFTY ()))
{}
record Boolean
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Boolean,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @List(@EnumerationValue(tag = False),
                @EnumerationValue(tag = True))))
{}
record Character
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::Character,
    typeDefinition = 
      @EnumerationTypeDefinition(
        enumerationValues = 
          @EmptyList))
{}
record String
  @FullTypeDeclaration(
    origin = @PACKAGE_SPEC_PUBLIC,
    loc = @EMPTY_REGION_SELECTION,
    fullyQualifiedName = Standard::String,
    typeDefinition = 
      @UnconstrainedArrayDefinition(
        theDimensions = 
          1,
        theComponentSubType = 
          `Standard::Character,
        theIndexSubTypes = 
          @List(`Standard::Positive)
      ))
{}
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   S p e cM e t a d a t a
 ****************************************************************/
package Example
@PackageAnnotation(
  theSourceFileName = "example.ada",
  theSparkName = Example,
  thePilarSparkName = Example,
  theOptionalParent = @NONE,
  thePackageKind = @SPECIFICATION,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 4,
  theCol = 13,
  theOffset = 180),
  theOptionalSource = "example.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 1,
  theCol = 1,
  theOffset = 0),
  theEndCaret = 
  @Caret(
  theLine = 1,
  theCol = 16,
  theOffset = 14),
  theOptionalSource = "example.ada"
),
  thePackageHeaderAnnotation = @PackageSpecificationHeaderAnnotation(
    theOptionalContextClause = @NONE  ,  
  theOptionalPackageSpecificationAnnotation = 
    @NONE,
  theOptionalInheritClause = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
procedure add 
      (Standard::Integer x @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 2,
  theCol = 21,
  theOffset = 39),
  theEndCaret = 
  @Caret(
  theLine = 2,
  theCol = 22,
  theOffset = 39),
  theOptionalSource = "example.ada"
),
       Standard::Integer y @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 2,
  theCol = 41,
  theOffset = 59),
  theEndCaret = 
  @Caret(
  theLine = 2,
  theCol = 42,
  theOffset = 59),
  theOptionalSource = "example.ada"
))
@MethodAnnotation(
  theSourceFileName = "example.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(x,
            y),
      theOptionalOutParameters = @List(x)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @NONE,
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = x,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 17,
                          theOffset = 94),
                          theEndCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 18,
                          theOffset = 94),
                          theOptionalSource = "example.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = x,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 24,
                          theOffset = 101),
                          theEndCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 25,
                          theOffset = 101),
                          theOptionalSource = "example.ada"
                        )
                    ),
                          @AnnotationVariable(
                      id = y,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 26,
                          theOffset = 103),
                          theEndCaret = 
                          @Caret(
                          theLine = 3,
                          theCol = 27,
                          theOffset = 103),
                          theOptionalSource = "example.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 3,
                  theCol = 17,
                  theOffset = 94),
                  theEndCaret = 
                  @Caret(
                  theLine = 3,
                  theCol = 27,
                  theOffset = 103),
                  theOptionalSource = "example.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 3,
              theCol = 9,
              theOffset = 86),
              theEndCaret = 
              @Caret(
              theLine = 3,
              theCol = 28,
              theOffset = 104),
              theOptionalSource = "example.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 2,
      theCol = 5,
      theOffset = 23),
      theEndCaret = 
      @Caret(
      theLine = 2,
      theCol = 59,
      theOffset = 76),
      theOptionalSource = "example.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 2,
      theCol = 15,
      theOffset = 33),
      theEndCaret = 
      @Caret(
      theLine = 2,
      theCol = 18,
      theOffset = 35),
      theOptionalSource = "example.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 2,
      theCol = 5,
      theOffset = 23),
      theEndCaret = 
      @Caret(
      theLine = 2,
      theCol = 57,
      theOffset = 74),
      theOptionalSource = "example.ada"
    )
) 
{ #locret. return;}
procedure foo 
      (Standard::Integer A @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 3,
  theCol = 49,
  theOffset = 126),
  theEndCaret = 
  @Caret(
  theLine = 3,
  theCol = 50,
  theOffset = 126),
  theOptionalSource = "example.ada"
),
       Standard::Integer B @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 3,
  theCol = 69,
  theOffset = 146),
  theEndCaret = 
  @Caret(
  theLine = 3,
  theCol = 70,
  theOffset = 146),
  theOptionalSource = "example.ada"
))
@MethodAnnotation(
  theSourceFileName = "example.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_SPEC_PUBLIC,
      theOptionalInParameters = @List(A,
            B),
      theOptionalOutParameters = @List(A,
          B)
    ),
  theOptionalSPARKMethodAnnotation = 
    @NONE,
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 3,
      theCol = 33,
      theOffset = 110),
      theEndCaret = 
      @Caret(
      theLine = 3,
      theCol = 91,
      theOffset = 167),
      theOptionalSource = "example.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 3,
      theCol = 43,
      theOffset = 120),
      theEndCaret = 
      @Caret(
      theLine = 3,
      theCol = 46,
      theOffset = 122),
      theOptionalSource = "example.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 3,
      theCol = 33,
      theOffset = 110),
      theEndCaret = 
      @Caret(
      theLine = 3,
      theCol = 89,
      theOffset = 165),
      theOptionalSource = "example.ada"
    )
) 
{ #locret. return;}@Profile org::sireum::profile::spark
/****************************************************************
 *  C o m p i l e r   M e t a d a t a
 ****************************************************************/

@SPARKCompilerMetaDataFile(
  version = "1.0",
  compileTime = "REGRESSION_SUPPRESSED",
  options = 
    @EmptyList)
/****************************************************************
 *  S P A R K   P a c k a g e   B o d yM e t a d a t a
 ****************************************************************/
package Example
@PackageAnnotation(
  theSourceFileName = "example.ada",
  theSparkName = Example,
  thePilarSparkName = Example,
  theOptionalParent = @NONE,
  thePackageKind = @BODY,
  theHierarchyType = @ROOT,
  theOptionalSymbolMapping = @NONE,
  thePackageSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 6,
  theCol = 1,
  theOffset = 183),
  theEndCaret = 
  @Caret(
  theLine = 26,
  theCol = 13,
  theOffset = 546),
  theOptionalSource = "example.ada"
),
  thePackageHeaderSelection = @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 6,
  theCol = 1,
  theOffset = 183),
  theEndCaret = 
  @Caret(
  theLine = 6,
  theCol = 21,
  theOffset = 202),
  theOptionalSource = "example.ada"
),
  thePackageHeaderAnnotation = @PackageBodyHeaderAnnotation(
    theOptionalContextClause = @NONE  ,
  theOptionalRefinementDefinition = 
    @NONE
));

/****************************************************************
 *  T y p e   D e c l a r a t i o n s
 ****************************************************************/
/****************************************************************
 *  G l o b a l   D e c l a r a t i o n s
 ****************************************************************/
  
/****************************************************************
 *  I n i t i a l i z a t i o n   P r o c e d u r e
 ****************************************************************/
/****************************************************************
 *  P r o c e d u r e s / F u n c t i o n s
 ****************************************************************/
procedure add 
      (Standard::Integer x @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 8,
  theCol = 18,
  theOffset = 225),
  theEndCaret = 
  @Caret(
  theLine = 8,
  theCol = 19,
  theOffset = 225),
  theOptionalSource = "example.ada"
),
       Standard::Integer y @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 8,
  theCol = 38,
  theOffset = 245),
  theEndCaret = 
  @Caret(
  theLine = 8,
  theCol = 39,
  theOffset = 245),
  theOptionalSource = "example.ada"
))
@MethodAnnotation(
  theSourceFileName = "example.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_BODY,
      theOptionalInParameters = @List(x,
            y),
      theOptionalOutParameters = @List(x)
    ),
  theOptionalSPARKMethodAnnotation = 
    @NONE,
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 3,
      theOffset = 210),
      theEndCaret = 
      @Caret(
      theLine = 12,
      theCol = 11,
      theOffset = 302),
      theOptionalSource = "example.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 13,
      theOffset = 220),
      theEndCaret = 
      @Caret(
      theLine = 8,
      theCol = 16,
      theOffset = 222),
      theOptionalSource = "example.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 8,
      theCol = 3,
      theOffset = 210),
      theEndCaret = 
      @Caret(
      theLine = 8,
      theCol = 53,
      theOffset = 259),
      theOptionalSource = "example.ada"
    )
) 
{

  local
    Standard::Integer temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$2 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$3 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l1.  temp$1 := x;
  #l2.  temp$2 := y;
  #l3.  temp$3 := (temp$1 + temp$2);
  #l4. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l1,
      endLabel = l4,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 11,
      theCol = 6,
      theOffset = 281),
      theEndCaret = 
      @Caret(
      theLine = 11,
      theCol = 17,
      theOffset = 291),
      theOptionalSource = "example.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  x := temp$3;
  #l5.  return;
}
procedure foo 
      (Standard::Integer A @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 14,
  theCol = 18,
  theOffset = 324),
  theEndCaret = 
  @Caret(
  theLine = 14,
  theCol = 19,
  theOffset = 324),
  theOptionalSource = "example.ada"
),
       Standard::Integer B @RegionSelection(
  theStartCaret = 
  @Caret(
  theLine = 14,
  theCol = 39,
  theOffset = 345),
  theEndCaret = 
  @Caret(
  theLine = 14,
  theCol = 40,
  theOffset = 345),
  theOptionalSource = "example.ada"
))
@MethodAnnotation(
  theSourceFileName = "example.ada",
  theAdaMethodAnnotation = 
    @AdaProcedureAnnotation(
      theOrigin = @PACKAGE_BODY,
      theOptionalInParameters = @List(A,
            B),
      theOptionalOutParameters = @List(A,
          B)
    ),
  theOptionalSPARKMethodAnnotation = 
    @ProcedureAnnotation(
      theOptionalPreCondition = 
        @NONE,
      theOptionalGlobalDefinitions = 
        @NONE,
      theOptionalGlobalDefinitionsSelection = 
        @NONE,
      theOptionalInGlobals = @NONE,
      theOptionalPostCondition = 
        @NONE,
      theOptionalOutGlobals = @NONE,
      theOptionalDependencyRelation = 
        @DependencyRelation(
          theDependencyClauses = 
            @List(@DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = A,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 15,
                          theCol = 17,
                          theOffset = 382),
                          theEndCaret = 
                          @Caret(
                          theLine = 15,
                          theCol = 18,
                          theOffset = 382),
                          theOptionalSource = "example.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = A,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 15,
                          theCol = 24,
                          theOffset = 389),
                          theEndCaret = 
                          @Caret(
                          theLine = 15,
                          theCol = 25,
                          theOffset = 389),
                          theOptionalSource = "example.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 15,
                  theCol = 17,
                  theOffset = 382),
                  theEndCaret = 
                  @Caret(
                  theLine = 15,
                  theCol = 25,
                  theOffset = 389),
                  theOptionalSource = "example.ada"
                )
            )  ,
                  @DependencyClause(
              theDependencyClauseMembers = 
                @List(@DependencyClauseMember(
                  theOutVariable = 
                    @AnnotationVariable(
                      id = B,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 16,
                          theCol = 14,
                          theOffset = 406),
                          theEndCaret = 
                          @Caret(
                          theLine = 16,
                          theCol = 15,
                          theOffset = 406),
                          theOptionalSource = "example.ada"
                        )
                    ),
                  theOptionalInVariables = 
                    @List(@AnnotationVariable(
                      id = B,
                      loc =
                        @RegionSelection(
                          theStartCaret = 
                          @Caret(
                          theLine = 16,
                          theCol = 21,
                          theOffset = 413),
                          theEndCaret = 
                          @Caret(
                          theLine = 16,
                          theCol = 22,
                          theOffset = 413),
                          theOptionalSource = "example.ada"
                        )
                    ))
                )),
              theDependencyClauseRegionSelection = 
                @RegionSelection(
                  theStartCaret = 
                  @Caret(
                  theLine = 16,
                  theCol = 14,
                  theOffset = 406),
                  theEndCaret = 
                  @Caret(
                  theLine = 16,
                  theCol = 22,
                  theOffset = 413),
                  theOptionalSource = "example.ada"
                )
            )  ),
          theDependencyRelationRegionSelection = 
            @RegionSelection(
              theStartCaret = 
              @Caret(
              theLine = 15,
              theCol = 9,
              theOffset = 374),
              theEndCaret = 
              @Caret(
              theLine = 16,
              theCol = 23,
              theOffset = 414),
              theOptionalSource = "example.ada"
            )  
        )
    ),
  theMethodSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 3,
      theOffset = 309),
      theEndCaret = 
      @Caret(
      theLine = 25,
      theCol = 11,
      theOffset = 533),
      theOptionalSource = "example.ada"
    ),
  theMethodNameSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 13,
      theOffset = 319),
      theEndCaret = 
      @Caret(
      theLine = 14,
      theCol = 16,
      theOffset = 321),
      theOptionalSource = "example.ada"
    ),
  theMethodSpecificationSelection = 
    @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 14,
      theCol = 3,
      theOffset = 309),
      theEndCaret = 
      @Caret(
      theLine = 14,
      theCol = 59,
      theOffset = 364),
      theOptionalSource = "example.ada"
    )
) 
{

  local
    Standard::Integer M @LocalVarDeclarationAnnotation(
      theKind = @CONCRETE_VARIABLE,
      theOptionalLoc = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 18,
      theCol = 3,
      theOffset = 423),
      theEndCaret = 
      @Caret(
      theLine = 18,
      theCol = 4,
      theOffset = 423),
      theOptionalSource = "example.ada"
    )
    );
    Standard::Integer temp$1 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$2 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$3 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$4 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$5 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$6 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$7 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$8 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$9 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$10 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
    Standard::Integer temp$11 @LocalVarDeclarationAnnotation(
      theKind = @TEMPORARY_VARIABLE,
      theOptionalLoc = @NONE
    );
  #l6.  temp$1 := 3;
  #l7. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l6,
      endLabel = l7,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 20,
      theCol = 6,
      theOffset = 452),
      theEndCaret = 
      @Caret(
      theLine = 20,
      theCol = 13,
      theOffset = 458),
      theOptionalSource = "example.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  M := temp$1;
  #l8.  temp$2 := A;
  #l10.  temp$3 := M;
  #l11. <@ProcedureCallStatementAnnotation(
    optCopyBackPart = @Mark(
    startLabel = l9,
    endLabel = l9,
    optRS = @NONE
  ),
      mark = @Mark(
      startLabel = l8,
      endLabel = l11,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 21,
      theCol = 6,
      theOffset = 465),
      theEndCaret = 
      @Caret(
      theLine = 21,
      theCol = 15,
      theOffset = 473),
      theOptionalSource = "example.ada"
    )
    ),
      optSparkLabelList = @NONE
  )>  call  Example::add (temp$2, temp$3);
  #l9. <@CopyBackStatementAnnotation(
      mark = @Mark(
      startLabel = l9,
      endLabel = l9,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 21,
      theCol = 10,
      theOffset = 469),
      theEndCaret = 
      @Caret(
      theLine = 21,
      theCol = 11,
      theOffset = 469),
      theOptionalSource = "example.ada"
    )
    ),
      optSparkLabelList = @NONE
  )>  A := temp$2;
  #l12.  temp$4 := B;
  #l14.  temp$5 := 5;
  #l15. <@ProcedureCallStatementAnnotation(
    optCopyBackPart = @Mark(
    startLabel = l13,
    endLabel = l13,
    optRS = @NONE
  ),
      mark = @Mark(
      startLabel = l12,
      endLabel = l15,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 22,
      theCol = 6,
      theOffset = 480),
      theEndCaret = 
      @Caret(
      theLine = 22,
      theCol = 15,
      theOffset = 488),
      theOptionalSource = "example.ada"
    )
    ),
      optSparkLabelList = @NONE
  )>  call  Example::add (temp$4, temp$5);
  #l13. <@CopyBackStatementAnnotation(
      mark = @Mark(
      startLabel = l13,
      endLabel = l13,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 22,
      theCol = 10,
      theOffset = 484),
      theEndCaret = 
      @Caret(
      theLine = 22,
      theCol = 11,
      theOffset = 484),
      theOptionalSource = "example.ada"
    )
    ),
      optSparkLabelList = @NONE
  )>  B := temp$4;
  #l16.  temp$6 := A;
  #l17.  temp$7 := 2;
  #l18.  temp$8 := (temp$6 + temp$7);
  #l19. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l16,
      endLabel = l19,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 23,
      theCol = 6,
      theOffset = 495),
      theEndCaret = 
      @Caret(
      theLine = 23,
      theCol = 17,
      theOffset = 505),
      theOptionalSource = "example.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  A := temp$8;
  #l20.  temp$9 := B;
  #l21.  temp$10 := 5;
  #l22.  temp$11 := (temp$9 + temp$10);
  #l23. <@AssignmentStatementAnnotation(
      mark = @Mark(
      startLabel = l20,
      endLabel = l23,
      optRS = @RegionSelection(
      theStartCaret = 
      @Caret(
      theLine = 24,
      theCol = 6,
      theOffset = 512),
      theEndCaret = 
      @Caret(
      theLine = 24,
      theCol = 17,
      theOffset = 522),
      theOptionalSource = "example.ada"
    )
    ),
      optSparkLabelList = @NONE 
  )>  B := temp$11;
  #l24.  return;
}